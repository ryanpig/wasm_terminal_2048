{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/common/EventEmitter.ts","webpack:///./src/common/services/Services.ts","webpack:///./src/common/Lifecycle.ts","webpack:///./src/common/buffer/Constants.ts","webpack:///./src/browser/services/Services.ts","webpack:///./src/common/buffer/CellData.ts","webpack:///./src/common/buffer/AttributeData.ts","webpack:///./src/common/input/TextDecoder.ts","webpack:///./src/browser/Lifecycle.ts","webpack:///./src/browser/renderer/atlas/Constants.ts","webpack:///./src/browser/Color.ts","webpack:///./src/common/Platform.ts","webpack:///./src/common/data/EscapeSequences.ts","webpack:///./src/browser/renderer/BaseRenderLayer.ts","webpack:///./src/common/services/ServiceRegistry.ts","webpack:///./src/common/TypedArrayUtils.ts","webpack:///./src/common/buffer/BufferLine.ts","webpack:///./src/browser/LocalizableStrings.ts","webpack:///./src/common/data/Charsets.ts","webpack:///./src/common/parser/Params.ts","webpack:///./src/common/parser/OscParser.ts","webpack:///./src/common/parser/Constants.ts","webpack:///./src/common/parser/DcsParser.ts","webpack:///./src/browser/renderer/atlas/CharAtlasCache.ts","webpack:///./src/browser/renderer/atlas/CharAtlasUtils.ts","webpack:///./src/browser/ColorManager.ts","webpack:///./src/browser/renderer/RendererUtils.ts","webpack:///./src/browser/renderer/CharacterJoinerRegistry.ts","webpack:///./src/browser/input/Mouse.ts","webpack:///./src/browser/RenderDebouncer.ts","webpack:///./src/browser/ScreenDprMonitor.ts","webpack:///./src/common/Clone.ts","webpack:///./src/public/Terminal.ts","webpack:///./src/Terminal.ts","webpack:///./src/browser/input/CompositionHelper.ts","webpack:///./src/browser/Viewport.ts","webpack:///./src/browser/Clipboard.ts","webpack:///./src/InputHandler.ts","webpack:///./src/common/parser/EscapeSequenceParser.ts","webpack:///./src/browser/renderer/Renderer.ts","webpack:///./src/browser/renderer/TextRenderLayer.ts","webpack:///./src/browser/renderer/GridCache.ts","webpack:///./src/browser/renderer/atlas/DynamicCharAtlas.ts","webpack:///./src/browser/renderer/atlas/BaseCharAtlas.ts","webpack:///./src/browser/ColorContrastCache.ts","webpack:///./src/browser/renderer/atlas/LRUMap.ts","webpack:///./src/browser/renderer/SelectionRenderLayer.ts","webpack:///./src/browser/renderer/CursorRenderLayer.ts","webpack:///./src/browser/renderer/LinkRenderLayer.ts","webpack:///./src/browser/Linkifier.ts","webpack:///./src/browser/services/SelectionService.ts","webpack:///./src/browser/selection/SelectionModel.ts","webpack:///./src/browser/input/MoveToCell.ts","webpack:///./src/browser/services/SoundService.ts","webpack:///./src/browser/MouseZoneManager.ts","webpack:///./src/AccessibilityManager.ts","webpack:///./src/browser/renderer/dom/DomRenderer.ts","webpack:///./src/browser/renderer/dom/DomRendererRowFactory.ts","webpack:///./src/common/input/Keyboard.ts","webpack:///./src/common/WindowsMode.ts","webpack:///./src/browser/services/RenderService.ts","webpack:///./src/common/services/OptionsService.ts","webpack:///./src/browser/services/CharSizeService.ts","webpack:///./src/common/services/BufferService.ts","webpack:///./src/common/buffer/BufferSet.ts","webpack:///./src/common/buffer/Buffer.ts","webpack:///./src/common/CircularList.ts","webpack:///./src/common/buffer/BufferReflow.ts","webpack:///./src/common/buffer/Marker.ts","webpack:///./src/browser/services/MouseService.ts","webpack:///./src/common/services/CoreService.ts","webpack:///./src/common/services/LogService.ts","webpack:///./src/common/services/DirtyRowService.ts","webpack:///./src/common/services/InstantiationService.ts","webpack:///./src/common/services/CoreMouseService.ts","webpack:///./src/common/input/WriteBuffer.ts","webpack:///./src/browser/Linkifier2.ts","webpack:///./src/browser/services/CoreBrowserService.ts","webpack:///./src/common/services/UnicodeService.ts","webpack:///./src/common/input/UnicodeV6.ts","webpack:///./src/common/services/CharsetService.ts","webpack:///./src/public/AddonManager.ts"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_listeners","_disposed","this","_event","listener","push","dispose","length","splice","fire","arg1","arg2","queue","undefined","EventEmitter","IBufferService","createDecorator","ICoreMouseService","ICoreService","ICharsetService","IDirtyRowService","IInstantiationService","ILogService","IOptionsService","IUnicodeService","_disposables","_isDisposed","forEach","register","unregister","index","indexOf","Disposable","DEFAULT_COLOR","DEFAULT_ATTR","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CODE_INDEX","NULL_CELL_CHAR","NULL_CELL_WIDTH","NULL_CELL_CODE","WHITESPACE_CELL_CHAR","WHITESPACE_CELL_WIDTH","WHITESPACE_CELL_CODE","ICharSizeService","ICoreBrowserService","IMouseService","IRenderService","ISelectionService","ISoundService","content","fg","bg","combinedData","fromCharData","obj","CellData","setFromCharData","isCombined","getWidth","getChars","stringFromCodePoint","getCode","charCodeAt","combined","code","second","getAsCharData","AttributeData","toColorRGB","fromColorRGB","clone","newObj","isInverse","isBold","isUnderline","isBlink","isInvisible","isItalic","isDim","getFgColorMode","getBgColorMode","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","getFgColor","getBgColor","codePoint","String","fromCharCode","data","start","end","result","codepoint","_interim","clear","decode","input","target","size","startPos","StringToUtf32","interim","Uint8Array","fill","byte1","byte2","byte3","byte4","discardInterim","cp","pos","tmp","type","missing","fourStop","Utf8ToUtf32","node","handler","useCapture","addEventListener","disposed","removeEventListener","INVERTED_DEFAULT_COLOR","DIM_OPACITY","CHAR_ATLAS_CELL_SPACING","channels","rgb","rgba","toPaddedHex","toString","contrastRatio","l1","l2","toCss","g","b","toRgba","color","blend","css","fgR","fgG","fgB","bgR","bgG","bgB","Math","round","ensureContrastRatio","ratio","toColor","opaque","rgbaColor","parseInt","slice","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","max","ceil","increaseLuminance","min","bgL","fgL","toChannels","isNode","navigator","userAgent","platform","contains","arr","el","isFirefox","isSafari","test","isMac","isIpad","isIphone","isWindows","isLinux","C0","NUL","SOH","STX","ETX","EOT","ENQ","ACK","BEL","BS","HT","LF","VT","FF","CR","SO","SI","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","ESC","FS","GS","RS","US","SP","DEL","C1","PAD","HOP","BPH","NBH","IND","NEL","SSA","ESA","HTS","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","ST","OSC","PM","APC","_container","id","zIndex","_alpha","_colors","_rendererId","_bufferService","_optionsService","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_currentGlyphIdentifier","chars","bold","dim","italic","_canvas","document","createElement","classList","add","style","_initCanvas","appendChild","removeChild","_charAtlas","_ctx","throwIfFalsy","getContext","alpha","_clearAll","onOptionsChanged","onBlur","onFocus","onCursorMove","onGridChanged","startRow","endRow","onSelectionChanged","columnSelectMode","setColors","colorSet","_refreshCharAtlas","_setTransparency","oldCanvas","cloneNode","replaceChild","rows","acquireCharAtlas","options","warmUp","resize","scaledCellWidth","scaledCellHeight","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","width","scaledCanvasWidth","height","scaledCanvasHeight","canvasWidth","canvasHeight","_fillCells","x","y","fillRect","_fillBottomLineAtCells","devicePixelRatio","_fillLeftLineAtCell","_strokeRectAtCell","lineWidth","strokeRect","clearRect","fillStyle","background","_clearCells","_fillCharTrueColor","cell","font","_getFont","textBaseline","_clipRow","fillText","_drawChars","contrastColor","_getContrastColor","_drawUncachedChars","drawBoldTextInBrightColors","draw","fgOverride","save","join","ansi","foreground","globalAlpha","restore","beginPath","rect","cols","clip","fontWeightBold","fontWeight","fontSize","fontFamily","minimumContrastRatio","adjustedColor","contrastCache","getColor","fgColor","fgColorMode","bgColor","bgColorMode","temp","temp2","_resolveBackgroundRgba","_resolveForegroundRgba","setColor","inverse","BaseRenderLayer","storeServiceDependency","serviceRegistry","Map","ctor","has","decorator","arguments","Error","set","fillFallback","array","constructor","DEFAULT_ATTR_DATA","freeze","fillCellData","isWrapped","_combined","_data","Uint32Array","setCell","hasWidth","getFg","getBg","hasContent","getCodePoint","getString","loadCell","startIndex","setCellFromCodePoint","addCodepointToCell","insertCells","eraseAttr","deleteCells","replaceCells","subarray","keys","copyFrom","line","newLine","BufferLine","getTrimmedLength","copyCellsFrom","src","srcCol","destCol","applyInReverse","srcData","srcCombinedKeys","translateToString","trimRight","startCol","endCol","promptLabel","tooMuchOutput","CHARSETS","DEFAULT_CHARSET","maxLength","maxSubParamsLength","params","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","fromArray","values","Params","Array","k","addSubParam","addParam","newParams","toArray","res","reset","hasSubParams","idx","getSubParams","getSubParamsAll","addDigit","store","cur","_state","_id","_handlers","_handlerFb","addHandler","ident","handlerList","handlerIndex","setHandler","clearHandler","setHandlerFallback","_start","handlers","j","_put","put","utf32ToString","_end","success","OscParser","_handler","_hitLimit","PAYLOAD_LIMIT","ret","OscHandler","EMPTY_HANDLERS","_active","_ident","unhook","hook","DcsParser","_params","DcsHandler","charAtlasCache","rendererId","colors","newConfig","generateConfig","ownedByIndex","entry","ownedBy","configEquals","config","atlas","newEntry","DynamicCharAtlas","clonedColors","cursor","cursorAccent","selection","allowTransparency","colorCode","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","v","canvas","ctx","globalCompositeOperation","_litmusColor","createLinearGradient","_contrastCache","ColorContrastCache","selectionOpaque","onOptionsChange","setTheme","theme","_parseColor","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","fallback","console","warn","getImageData","ColorManager","firstCell","_width","JoinedCellData","_characterJoiners","_nextCharacterJoinerId","_workCell","registerCharacterJoiner","joiner","deregisterCharacterJoiner","joinerId","getJoinedCharacters","row","buffer","lines","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","rangeAttrBG","joinedRanges","_getJoinedRanges","endIndex","lineData","text","substring","joinerRanges","CharacterJoinerRegistry","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","newRange","inRange","range","getCoordsRelativeToElement","event","element","getBoundingClientRect","clientX","left","clientY","top","colCount","rowCount","hasValidCharSize","actualCellWidth","actualCellHeight","isSelection","coords","_renderCallback","_animationFrame","cancelAnimationFrame","refresh","rowStart","rowEnd","_rowCount","_rowStart","_rowEnd","requestAnimationFrame","_innerRefresh","RenderDebouncer","_currentDevicePixelRatio","setListener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","ScreenDprMonitor","val","depth","clonedObject","isArray","_core","Terminal","_addonManager","AddonManager","onLineFeed","onSelectionChange","onData","onBinary","onTitleChange","onScroll","onKey","onRender","onResize","_parser","ParserApi","UnicodeApi","textarea","BufferNamespaceApi","buffers","markers","blur","focus","columns","_verifyIntegers","open","parent","attachCustomKeyEventHandler","customKeyEventHandler","registerLinkMatcher","regex","deregisterLinkMatcher","matcherId","registerLinkProvider","linkProvider","registerMarker","cursorYOffset","addMarker","hasSelection","select","column","getSelection","getSelectionPosition","clearSelection","selectAll","selectLines","scrollLines","amount","scrollPages","pageCount","scrollToTop","scrollToBottom","scrollToLine","write","callback","writeUtf8","writeln","paste","getOption","optionsService","setOption","loadAddon","addon","Strings","Infinity","isNaN","_buffer","init","ydisp","ybase","getLine","BufferLineApiView","getNullCell","_buffers","_onBufferChange","_normal","BufferApiView","normal","_alternate","alt","onBufferActivate","active","alternate","_line","getCell","startColumn","endColumn","registerCsiHandler","addCsiHandler","registerDcsHandler","addDcsHandler","registerEscHandler","addEscHandler","registerOscHandler","addOscHandler","provider","unicodeService","versions","activeVersion","version","browser","Browser","mouseEvents","_keyDownHandled","_blankLine","_onCursorMove","_onData","_onBinary","_onKey","_onLineFeed","_onRender","_onResize","_onScroll","_onSelectionChange","_onTitleChange","_onFocus","_onBlur","onA11yCharEmitter","onA11yTabEmitter","_instantiationService","InstantiationService","OptionsService","setService","createInstance","BufferService","_logService","LogService","_coreService","CoreService","e","_coreMouseService","CoreMouseService","_dirtyRowService","DirtyRowService","UnicodeService","_charsetService","CharsetService","_setupOptionsListeners","_setup","_writeBuffer","WriteBuffer","_inputHandler","parse","_windowsMode","_renderService","_customKeyEventHandler","parentNode","insertMode","bracketedPasteMode","_userScrolling","InputHandler","onRequestBell","bell","onRequestRefreshRows","onRequestReset","linkifier","Linkifier","linkifier2","Linkifier2","windowsMode","_enableWindowsMode","updateWindowsModeWrappedState","final","preventScroll","onOptionChange","_charSizeService","measure","setRenderer","_createRenderer","viewport","syncScrollArea","screenReaderMode","_accessibilityManager","AccessibilityManager","setupTabStops","_setTheme","_onTextAreaFocus","ev","sendFocus","triggerDataEvent","updateCursorStyle","showCursor","_onTextAreaBlur","remove","_initGlobal","_bindKeys","addDisposableDomListener","copyHandler","_selectionService","pasteHandlerWrapper","handlePasteEvent","button","rightClickHandler","screenElement","rightClickSelectsWord","moveTextAreaUnderMouseCursor","_keyUp","_keyDown","_keyPress","_compositionHelper","compositionstart","compositionupdate","compositionend","updateCompositionElements","_queueLinkification","body","debug","_document","ownerDocument","dir","setAttribute","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","tabIndex","coreBrowserService","CoreBrowserService","CharSizeService","_compositionView","CompositionHelper","_theme","_colorManager","renderer","RenderService","_soundService","SoundService","_mouseService","MouseService","Viewport","suppressEvent","onThemeChange","onDimensionsChange","SelectionService","onRedrawRequest","onLinuxMouseSelection","_mouseZoneManager","MouseZoneManager","clearAll","attachToDom","onMouseDown","disable","enable","bindMouse","rendererType","Renderer","DomRenderer","self","sendEvent","but","action","getRawByteCoords","overrideType","buttons","deltaY","triggerMouseEvent","col","ctrl","ctrlKey","altKey","shift","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","preventDefault","onProtocolChange","events","logLevel","explainEvents","activeProtocol","shouldForceSelection","hasScrollback","getLinesScrolled","sequence","decPrivateModes","applicationCursorKeys","abs","onWheel","onTouchStart","onTouchMove","refreshRows","linkifyRows","shouldColumnSelect","isCursorInitialized","scroll","getBlankLine","topRow","scrollTop","bottomRow","scrollBottom","willBufferBeTrimmed","isFull","recycle","scrollRegionHeight","shiftElements","markRangeDirty","disp","suppressScrollEvent","oldYdisp","scrollAmount","setSelection","selectionText","selectionStart","selectionEnd","keydown","evaluateKeyboardEvent","macOptionIsMeta","scrollCount","_isThirdLevelShift","domEvent","thirdLevelKey","metaKey","keyCode","wasModifierKeyOnlyEvent","charCode","which","_soundBell","playBellSound","_visualBell","clearTimeout","_visualBellTimer","setTimeout","MINIMUM_COLS","MINIMUM_ROWS","hasValidSize","is","term","termName","handleTitle","title","userScrolling","force","cancelEvents","stopPropagation","bellStyle","writeSync","_textarea","_isComposing","_isSendingComposition","_compositionPosition","textContent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","_clearTextareaPosition","oldValue","diff","replace","dontRecurse","isCursorInViewport","cellHeight","lineHeight","cursorTop","cursorLeft","compositionViewBounds","_scrollLines","_scrollArea","scrollBarWidth","_currentRowHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","offsetWidth","backgroundColor","_refresh","immediate","dimensions","offsetHeight","newBufferHeight","newScrollTop","offsetParent","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","floor","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","prepareTextForTerminal","bracketTextForPaste","coreService","position","selectionService","clipboardData","setData","getData","shouldSelectWord","isClickInSelection","selectWordAtCursor","GLEVEL","paramToWindowOption","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","concat","pt","cursorStyle","cursorBlink","_terminal","_unicodeService","EscapeSequenceParser","_parseBuffer","_stringDecoder","_utf8Decoder","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestRefreshRows","_onRequestReset","_onRequestBell","setCsiHandlerFallback","identifier","identToString","setEscHandlerFallback","setExecuteHandlerFallback","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","setCsiHandler","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","setExecuteHandler","lineFeed","carriageReturn","backspace","tab","shiftOut","shiftIn","nextLine","tabSet","setOscHandler","setTitle","setIconName","setEscHandler","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","selectCharset","screenAlignmentPattern","setErrorHandler","state","error","setDcsHandler","DECRQSS","cursorStartX","cursorStartY","clearRange","len","chWidth","charset","wraparoundMode","wraparound","curAttr","bufferRow","markDirty","wcwidth","ch","_eraseAttrData","precedingCodepoint","convertEol","_restrictCursor","originalX","nextStop","origin","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","_resetBufferLine","scrollBackSize","trimStart","scrollBottomRowsOffset","scrollBottomAbsolute","setgCharset","applicationKeypad","activeEncoding","isCursorHidden","activateAltBuffer","activateNormalBuffer","_extractColor","attr","accu","cSpace","advance","subparams","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","getService","log","w","toFixed","h","pop","_savedCharset","collectAndFlag","level","yOffset","markAllDirty","table","setDefault","next","addMany","codes","TransitionTable","VT500_TRANSITION_TABLE","blueprint","apply","map","unused","PRINTABLES","EXECUTABLES","states","_transitions","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","_dcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","transition","osc","dcs","collect","abort","handlersEsc","jj","nextRendererId","_screenElement","_characterJoinerRegistry","_renderLayers","TextRenderLayer","SelectionRenderLayer","LinkRenderLayer","CursorRenderLayer","_devicePixelRatio","_updateDimensions","removeTerminalFromCache","onDevicePixelRatioChange","onCharSizeChanged","_runOperation","operation","renderRows","letterSpacing","container","characterJoinerRegistry","bufferService","_characterWidth","_characterFont","_characterOverlapCache","GridCache","terminalFont","_forEachCell","firstRow","lastRow","joinerRegistry","isJoined","lastCharX","_isOverlapping","_drawBackground","startX","startY","prevFillStyle","nextFillStyle","_drawForeground","cache","beginFrame","overlaps","measureText","TRANSPARENT_COLOR","getGlyphCacheKey","glyph","_config","_drawToCacheCount","_glyphsWaitingOnBitmap","_bitmapCommitTimeout","_bitmap","_cacheCanvas","_cacheCtx","tmpCanvas","_tmpCtx","_height","capacity","_cacheMap","LRUMap","prealloc","_canCache","glyphKey","cacheValue","_drawFromCache","peek","_drawToCache","_toCoordinateX","_toCoordinateY","isEmpty","cacheX","cacheY","drawImage","inBitmap","_getColorFromAnsiIndex","_getBackgroundColor","_getForegroundColor","fontStyle","imageData","offset","clearColor","putImageData","_addGlyphToBitmap","_generateBitmap","glyphsMovingToBitmap","createImageBitmap","then","bitmap","BaseCharAtlas","NoneCharAtlas","_didWarmUp","_doWarmUp","_color","_rgba","setCss","getCss","_map","_head","_tail","_nodePool","_unlinkNode","prev","_appendNode","tail","count","nodePool","peekValue","head","_clearState","_didStateChange","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startRowEndCol","middleRowsCount","_areCoordinatesEqual","coord1","coord2","_onRequestRefreshRowsEvent","_coreBrowserService","_cell","isFocused","_cursorRenderers","_renderBarCursor","_renderBlockCursor","_renderUnderlineCursor","_clearCursor","_cursorBlinkStateManager","pause","resume","CursorBlinkStateManager","_render","restartBlinkAnimation","isPaused","triggeredByAnimationFrame","cursorY","viewportRelativeCursorY","cursorX","_renderBlurCursor","isCursorVisible","cursorWidth","strokeStyle","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","Date","now","timeToStart","time","setInterval","onLinkHover","_onLinkHover","onLinkLeave","_onLinkLeave","_clearCurrentLink","x1","y1","middleRowCount","y2","x2","is256Color","_linkMatchers","_nextLinkMatcherId","_onLinkTooltip","_rowsToLinkify","mouseZoneManager","_element","_rowsTimeoutId","_linkifyRows","_timeBeforeLatency","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","iterator","hasNext","_doLinkifyRow","first","matcher","matchIndex","validationCallback","hoverTooltipCallback","tooltipCallback","hoverLeaveCallback","leaveCallback","willLinkActivate","priority","_addLinkMatcherToList","rowIndex","match","rex","RegExp","source","flags","stringIndex","uri","lastIndex","bufferIndex","stringIndexToBufferIndex","isValid","_addLink","exec","getStringCellWidth","MouseZone","newWindow","opener","location","href","_createLinkHoverEvent","clickCallback","hoverCallback","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_onLinuxMouseSelection","_onRedrawRequest","_mouseMoveListener","_onMouseMove","_mouseUpListener","_onMouseUp","onUserInput","_trimListener","onTrim","_onTrim","_onBufferActivate","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","finalSelectionStart","finalSelectionEnd","lineText","translateBufferLineToString","bufferLine","isLinuxMouseSelection","_getMouseBufferCoords","_areCoordsInSelection","_selectWordAt","isSelectAllActive","getCoords","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","timeStamp","_onIncrementalClick","detail","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","selectionStartLength","_selectLineAt","stopImmediatePropagation","previousSelectionEnd","_selectToWordAt","timeElapsed","coordinates","moveToCellSequence","activeBuffer","_convertViewportColToCharacterIndex","charIndex","_getWordAt","allowWhitespaceOnlySelection","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","trim","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","areSelectionValuesReversed","wordSeparator","wrappedRange","getWrappedRangeForLine","last","startPlusLength","moveToRequestedRow","targetY","applicationCursor","wrappedRowsForRow","repeat","wrappedRows","direction","verticalDirection","wrappedRowsCount","currentRow","lineWraps","horizontalDirection","targetX","forward","currentCol","bufferStr","mod","str","rpt","resetStartingRow","moveToRequestedCol","rowDifference","currX","colsFromRowEnd","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","audioContext","bellAudioSource","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","connect","destination","base64","binaryString","atob","bytes","dataURI","split","_zones","_areZonesActive","_lastHoverCoords","_initialSelectionLength","_onMouseDown","_mouseLeaveListener","_onMouseLeave","_clickListener","_onClick","_deactivate","zone","_activate","_currentZone","pageX","_onHover","_findZoneEventAt","_tooltipTimeout","_onTooltip","_getSelectionLength","currentSelectionLength","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","_rowContainer","_rowElements","_createAccessibilityTreeNode","_topBoundaryFocusListener","_onBoundaryFocus","_bottomBoundaryFocusListener","_refreshRowsDimensions","_renderRowsDebouncer","_renderRows","_refreshRows","_liveRegion","insertAdjacentElement","onA11yChar","char","_onChar","onA11yTab","spaceCount","_onTab","_clearLiveRegion","_screenDprMonitor","boundaryElement","beforeBoundaryElement","getAttribute","relatedTarget","topBoundaryElement","bottomBoundaryElement","newElement","unshift","children","_refreshRowDimensions","MAX_ROWS_TO_READ","keyChar","setSize","posInSet","innerHTML","_announceCharacters","nextTerminalId","_linkifier","_linkifier2","_terminalClass","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","DomRendererRowFactory","_themeStyleElement","_dimensionsStyleElement","overflow","styles","_terminalSelector","BOLD_CLASS","ITALIC_CLASS","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","documentFragment","_createSelectionElement","colStart","colEnd","cursorAbsoluteY","rowElement","createRow","_setCellUnderline","enabled","span","textDecoration","DIM_CLASS","UNDERLINE_CLASS","isCursorRow","cellWidth","lineLength","charElement","_applyMinimumContrast","_addStyle","padStart","padChar","KEYCODE_KEY_MAPPINGS","48","49","50","51","52","53","54","55","56","57","186","187","188","189","190","191","192","219","220","221","222","applicationCursorMode","modifiers","keyMapping","lastChar","_renderer","charSizeService","_isPaused","_needsFullRefresh","_canvasWidth","_canvasHeight","_onDimensionsChange","_onRefreshRequest","_renderDebouncer","onCharSizeChange","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","intersectionRatio","_fireOnCanvasResize","changeOptions","_fullRefresh","DEFAULT_BELL_SOUND","DEFAULT_OPTIONS","scrollback","disableStdin","tabStopWidth","CONSTRUCTOR_ONLY_OPTIONS","_onOptionChange","newValue","_sanitizeAndValidateOption","parentElement","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","_parentElement","_result","_measureElement","geometry","BufferSet","Buffer","fillViewportRows","_alt","_activeBuffer","inactiveBuffer","fillAttr","newCols","newRows","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","_whitespaceCell","_cols","_rows","CircularList","_getCorrectBufferLength","getWhitespaceCell","relativeY","correctBufferLength","nullCell","newMaxLength","addToY","amountToTrim","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","destLineIndex","srcLineIndex","cellsToCopy","wrappedLinesIndex","getWrappedLineTrimmedLength","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","onInsertEmitter","onTrimEmitter","lineIndex","marker","Marker","onInsert","onDelete","onDispose","_removeMarker","startOverscan","endOverscan","BufferStringIterator","_trimRight","_startIndex","_endIndex","_startOverscan","_endOverscan","_current","_maxLength","onDeleteEmitter","_array","_length","newArray","_getCyclicIndex","newLength","deleteCount","items","countToTrim","expandListBy","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","_nextId","isDisposed","_onDispose","DEFAULT_DEC_PRIVATE_MODES","_scrollToBottom","_onUserInput","wasUserInput","triggerBinaryEvent","LogLevel","optionsKeyToLogLevel","DEBUG","info","INFO","WARN","ERROR","off","OFF","_updateLogLevel","_logLevel","_evalLazyOptionalParams","optionalParams","_log","message","_entries","entries","service","instance","ServiceCollection","_services","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","args","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","_protocols","_encodings","_activeProtocol","_activeEncoding","_onProtocolChange","_lastEvent","addProtocol","addEncoding","protocol","encoding","_compareEvents","report","down","up","drag","move","e1","e2","_action","_callbacks","_pendingData","_bufferOffset","cb","_innerWrite","startTime","_linkProviders","_linkCacheDisposables","providerIndex","mouseService","renderService","_lastMouseEvent","_positionFromMouseEvent","_lastBufferCell","_currentLink","_linkAtPosition","_askForLink","providerReplies","linkProvided","provideLink","link","hasLinkBefore","_handleNewLink","currentLink","activate","_linkLeave","_linkHover","scrollOffset","hover","leave","sameLine","wrappedFromLeft","wrappedToRight","activeElement","hasFocus","_providers","_onChange","defaultProvider","UnicodeV6","_activeProvider","num","BMP_COMBINING","HIGH_COMBINING","ucs","mid","bisearch","charsets","glevel","_addons","terminal","loadedAddon","_wrappedAddonDispose"],"mappings":"CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,SACb,GAAqB,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,OACP,CACJ,IAAIK,EAAIL,IACR,IAAI,IAAIM,KAAKD,GAAuB,iBAAZJ,QAAuBA,QAAUF,GAAMO,GAAKD,EAAEC,IAPxE,CASGC,QAAQ,WACX,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUT,QAGnC,IAAIC,EAASM,EAAiBE,GAAY,CACzCJ,EAAGI,EACHC,GAAG,EACHV,QAAS,IAUV,OANAW,EAAQF,GAAUG,KAAKX,EAAOD,QAASC,EAAQA,EAAOD,QAASQ,GAG/DP,EAAOS,GAAI,EAGJT,EAAOD,QA0Df,OArDAQ,EAAoBK,EAAIF,EAGxBH,EAAoBM,EAAIP,EAGxBC,EAAoBO,EAAI,SAASf,EAASgB,EAAMC,GAC3CT,EAAoBU,EAAElB,EAASgB,IAClCG,OAAOC,eAAepB,EAASgB,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhET,EAAoBe,EAAI,SAASvB,GACX,oBAAXwB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAepB,EAASwB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAepB,EAAS,aAAc,CAAE0B,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBO,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAASjC,GAChC,IAAIgB,EAAShB,GAAUA,EAAO4B,WAC7B,WAAwB,OAAO5B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAO,EAAoBO,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRT,EAAoBU,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG5B,EAAoB+B,EAAI,GAIjB/B,EAAoBA,EAAoBgC,EAAI,I,gFC7DrD,8BACU,KAAAC,WAAgC,GAEhC,KAAAC,WAAqB,EAwC/B,OAtCE,sBAAW,oBAAK,C,IAAhB,sBAmBE,OAlBKC,KAAKC,SACRD,KAAKC,OAAS,SAACC,GAcb,OAbA,EAAKJ,WAAWK,KAAKD,GACF,CACjBE,QAAS,WACP,IAAK,EAAKL,UACR,IAAK,IAAIrC,EAAI,EAAGA,EAAI,EAAKoC,WAAWO,OAAQ3C,IAC1C,GAAI,EAAKoC,WAAWpC,KAAOwC,EAEzB,YADA,EAAKJ,WAAWQ,OAAO5C,EAAG,OAUjCsC,KAAKC,Q,gCAGP,YAAAM,KAAP,SAAYC,EAASC,GAEnB,IADA,IAAMC,EAA2B,GACxBhD,EAAI,EAAGA,EAAIsC,KAAKF,WAAWO,OAAQ3C,IAC1CgD,EAAMP,KAAKH,KAAKF,WAAWpC,IAE7B,IAASA,EAAI,EAAGA,EAAIgD,EAAML,OAAQ3C,IAChCgD,EAAMhD,GAAGO,UAAK0C,EAAWH,EAAMC,IAI5B,YAAAL,QAAP,WACMJ,KAAKF,aACPE,KAAKF,WAAWO,OAAS,GAE3BL,KAAKD,WAAY,GAErB,EA3CA,GAAa,EAAAa,gB,8ECbb,YAEa,EAAAC,eAAiB,EAAAC,gBAAgC,iBAejD,EAAAC,kBAAoB,EAAAD,gBAAmC,oBA+BvD,EAAAE,aAAe,EAAAF,gBAA8B,eAoC7C,EAAAG,gBAAkB,EAAAH,gBAAiC,kBAwBnD,EAAAI,iBAAmB,EAAAJ,gBAAkC,mBAsDrD,EAAAK,sBAAwB,EAAAL,gBAAuC,wBAgB/D,EAAAM,YAAc,EAAAN,gBAA6B,cAU3C,EAAAO,gBAAkB,EAAAP,gBAAiC,kBAkHnD,EAAAQ,gBAAkB,EAAAR,gBAAiC,mB,8EC3ShE,iBAIE,aAHU,KAAAS,aAA8B,GAC9B,KAAAC,aAAuB,EAiCnC,OAzBS,YAAApB,QAAP,WACEJ,KAAKwB,aAAc,EACnBxB,KAAKuB,aAAaE,SAAQ,SAAArD,GAAK,OAAAA,EAAEgC,aACjCJ,KAAKuB,aAAalB,OAAS,GAOtB,YAAAqB,SAAP,SAAuCtD,GACrC4B,KAAKuB,aAAapB,KAAK/B,IAQlB,YAAAuD,WAAP,SAAyCvD,GACvC,IAAMwD,EAAQ5B,KAAKuB,aAAaM,QAAQzD,IACzB,IAAXwD,GACF5B,KAAKuB,aAAajB,OAAOsB,EAAO,IAGtC,EAnCA,GAAsB,EAAAE,c,8ECNT,EAAAC,cAAgB,IAChB,EAAAC,aAAe,IAAa,EAAAD,eAAiB,EAE7C,EAAAE,qBAAuB,EACvB,EAAAC,qBAAuB,EACvB,EAAAC,sBAAwB,EACxB,EAAAC,qBAAuB,EAOvB,EAAAC,eAAiB,GACjB,EAAAC,gBAAkB,EAClB,EAAAC,eAAiB,EAOjB,EAAAC,qBAAuB,IACvB,EAAAC,sBAAwB,EACxB,EAAAC,qBAAuB,I,8ECpBpC,YAGa,EAAAC,iBAAmB,EAAA7B,gBAAkC,mBAarD,EAAA8B,oBAAsB,EAAA9B,gBAAqC,sBAO3D,EAAA+B,cAAgB,EAAA/B,gBAA+B,gBAQ/C,EAAAgC,eAAiB,EAAAhC,gBAAgC,iBA4BjD,EAAAiC,kBAAoB,EAAAjC,gBAAmC,oBA4BvD,EAAAkC,cAAgB,EAAAlC,gBAA+B,iB,8ZC1F5D,WACA,OAMA,yE,OAQS,EAAAmC,QAAkB,EAClB,EAAAC,GAAa,EACb,EAAAC,GAAa,EACb,EAAAC,aAAuB,G,EAoEhC,OA/E8B,OAEd,EAAAC,aAAd,SAA2BtE,GACzB,IAAMuE,EAAM,IAAIC,EAEhB,OADAD,EAAIE,gBAAgBzE,GACbuE,GAQF,YAAAG,WAAP,WACE,OAAsB,QAAfzD,KAAKiD,SAGP,YAAAS,SAAP,WACE,OAAO1D,KAAKiD,SAAW,IAGlB,YAAAU,SAAP,WACE,OAAmB,QAAf3D,KAAKiD,QACAjD,KAAKoD,aAEK,QAAfpD,KAAKiD,QACA,EAAAW,oBAAmC,QAAf5D,KAAKiD,SAE3B,IAQF,YAAAY,QAAP,WACE,OAAQ7D,KAAKyD,aACTzD,KAAKoD,aAAaU,WAAW9D,KAAKoD,aAAa/C,OAAS,GACzC,QAAfL,KAAKiD,SAGJ,YAAAO,gBAAP,SAAuBzE,GACrBiB,KAAKkD,GAAKnE,EAAM,EAAAkD,sBAChBjC,KAAKmD,GAAK,EACV,IAAIY,GAAW,EAEf,GAAIhF,EAAM,EAAAmD,sBAAsB7B,OAAS,EACvC0D,GAAW,OAER,GAA2C,IAAvChF,EAAM,EAAAmD,sBAAsB7B,OAAc,CACjD,IAAM2D,EAAOjF,EAAM,EAAAmD,sBAAsB4B,WAAW,GAGpD,GAAI,OAAUE,GAAQA,GAAQ,MAAQ,CACpC,IAAMC,EAASlF,EAAM,EAAAmD,sBAAsB4B,WAAW,GAClD,OAAUG,GAAUA,GAAU,MAChCjE,KAAKiD,QAA6B,MAAjBe,EAAO,OAAkBC,EAAS,MAAS,MAAYlF,EAAM,EAAAoD,wBAA0B,GAGxG4B,GAAW,OAIbA,GAAW,OAIb/D,KAAKiD,QAAUlE,EAAM,EAAAmD,sBAAsB4B,WAAW,GAAM/E,EAAM,EAAAoD,wBAA0B,GAE1F4B,IACF/D,KAAKoD,aAAerE,EAAM,EAAAmD,sBAC1BlC,KAAKiD,QAAU,QAA4BlE,EAAM,EAAAoD,wBAA0B,KAIxE,YAAA+B,cAAP,WACE,MAAO,CAAClE,KAAKkD,GAAIlD,KAAK2D,WAAY3D,KAAK0D,WAAY1D,KAAK6D,YAE5D,EA/EA,CALA,KAK8BM,eAAjB,EAAAZ,Y,8ECLb,8BAoBS,KAAAL,GAAa,EACb,KAAAC,GAAa,EAuCtB,OA3DS,EAAAiB,WAAP,SAAkBrF,GAChB,MAAO,CACLA,IAAU,GAAuB,IACjCA,IAAU,EAAyB,IAC3B,IAARA,IAGG,EAAAsF,aAAP,SAAoBtF,GAClB,OAAmB,IAAXA,EAAM,KAAa,IAAmC,IAAXA,EAAM,KAAa,EAAoC,IAAXA,EAAM,IAGhG,YAAAuF,MAAP,WACE,IAAMC,EAAS,IAAIJ,EAGnB,OAFAI,EAAOrB,GAAKlD,KAAKkD,GACjBqB,EAAOpB,GAAKnD,KAAKmD,GACVoB,GAQF,YAAAC,UAAP,WAA+B,OAAiB,SAAVxE,KAAKkD,IACpC,YAAAuB,OAAP,WAA+B,OAAiB,UAAVzE,KAAKkD,IACpC,YAAAwB,YAAP,WAA+B,OAAiB,UAAV1E,KAAKkD,IACpC,YAAAyB,QAAP,WAA+B,OAAiB,UAAV3E,KAAKkD,IACpC,YAAA0B,YAAP,WAA+B,OAAiB,WAAV5E,KAAKkD,IACpC,YAAA2B,SAAP,WAA+B,OAAiB,SAAV7E,KAAKmD,IACpC,YAAA2B,MAAP,WAA+B,OAAiB,UAAV9E,KAAKmD,IAGpC,YAAA4B,eAAP,WAAkC,OAAiB,SAAV/E,KAAKkD,IACvC,YAAA8B,eAAP,WAAkC,OAAiB,SAAVhF,KAAKmD,IACvC,YAAA8B,QAAP,WAAkC,OAA0C,WAAxB,SAAVjF,KAAKkD,KACxC,YAAAgC,QAAP,WAAkC,OAA0C,WAAxB,SAAVlF,KAAKmD,KACxC,YAAAgC,YAAP,WAAkC,OAA0C,WAAxB,SAAVnF,KAAKkD,KAAqF,WAAxB,SAAVlD,KAAKkD,KAChG,YAAAkC,YAAP,WAAkC,OAA0C,WAAxB,SAAVpF,KAAKmD,KAAqF,WAAxB,SAAVnD,KAAKmD,KAChG,YAAAkC,YAAP,WAAkC,OAA0C,IAAxB,SAAVrF,KAAKkD,KACxC,YAAAoC,YAAP,WAAkC,OAA0C,IAAxB,SAAVtF,KAAKmD,KACxC,YAAAoC,mBAAP,WAAuC,OAAmB,IAAZvF,KAAKkD,IAAwB,IAAZlD,KAAKmD,IAG7D,YAAAqC,WAAP,WACE,OAAkB,SAAVxF,KAAKkD,IACX,KAAK,SACL,KAAK,SAAqB,OAAiB,IAAVlD,KAAKkD,GACtC,KAAK,SAAqB,OAAiB,SAAVlD,KAAKkD,GACtC,QAA0B,OAAQ,IAG/B,YAAAuC,WAAP,WACE,OAAkB,SAAVzF,KAAKmD,IACX,KAAK,SACL,KAAK,SAAqB,OAAiB,IAAVnD,KAAKmD,GACtC,KAAK,SAAqB,OAAiB,SAAVnD,KAAKmD,GACtC,QAA0B,OAAQ,IAGxC,EA5DA,GAAa,EAAAgB,iB,8ECIb,+BAAoCuB,GAClC,OAAIA,EAAY,OACdA,GAAa,MACNC,OAAOC,aAAiC,OAAnBF,GAAa,KAAgBC,OAAOC,aAAcF,EAAY,KAAS,QAE9FC,OAAOC,aAAaF,IAQ7B,yBAA8BG,EAAmBC,EAAmBC,QAAnB,IAAAD,MAAA,QAAmB,IAAAC,MAAcF,EAAKxF,QAErF,IADA,IAAI2F,EAAS,GACJtI,EAAIoI,EAAOpI,EAAIqI,IAAOrI,EAAG,CAChC,IAAIuI,EAAYJ,EAAKnI,GACjBuI,EAAY,OAMdA,GAAa,MACbD,GAAUL,OAAOC,aAAiC,OAAnBK,GAAa,KAAgBN,OAAOC,aAAcK,EAAY,KAAS,QAEtGD,GAAUL,OAAOC,aAAaK,GAGlC,OAAOD,GAOT,8BACU,KAAAE,SAAmB,EA8D7B,OAzDS,YAAAC,MAAP,WACEnG,KAAKkG,SAAW,GAWlB,YAAAE,OAAA,SAAOC,EAAeC,GACpB,IAAMjG,EAASgG,EAAMhG,OAErB,IAAKA,EACH,OAAO,EAGT,IAAIkG,EAAO,EACPC,EAAW,EAGXxG,KAAKkG,WAEH,QADEjC,EAASoC,EAAMvC,WAAW0C,OACRvC,GAAU,MAChCqC,EAAOC,KAAqC,MAA1BvG,KAAKkG,SAAW,OAAkBjC,EAAS,MAAS,OAGtEqC,EAAOC,KAAUvG,KAAKkG,SACtBI,EAAOC,KAAUtC,GAEnBjE,KAAKkG,SAAW,GAGlB,IAAK,IAAIxI,EAAI8I,EAAU9I,EAAI2C,IAAU3C,EAAG,CACtC,IAAMsG,EAAOqC,EAAMvC,WAAWpG,GAE9B,GAAI,OAAUsG,GAAQA,GAAQ,MAA9B,CACE,KAAMtG,GAAK2C,EAET,OADAL,KAAKkG,SAAWlC,EACTuC,EAET,IAAMtC,EACF,QADEA,EAASoC,EAAMvC,WAAWpG,KACRuG,GAAU,MAChCqC,EAAOC,KAA4B,MAAjBvC,EAAO,OAAkBC,EAAS,MAAS,OAG7DqC,EAAOC,KAAUvC,EACjBsC,EAAOC,KAAUtC,QAIrBqC,EAAOC,KAAUvC,EAEnB,OAAOuC,GAEX,EA/DA,GAAa,EAAAE,gBAoEb,8BACS,KAAAC,QAAsB,IAAIC,WAAW,GAgO9C,OA3NS,YAAAR,MAAP,WACEnG,KAAK0G,QAAQE,KAAK,IAWpB,YAAAR,OAAA,SAAOC,EAAmBC,GACxB,IAAMjG,EAASgG,EAAMhG,OAErB,IAAKA,EACH,OAAO,EAGT,IACIwG,EACAC,EACAC,EACAC,EAJAT,EAAO,EAKPN,EAAY,EACZO,EAAW,EAGf,GAAIxG,KAAK0G,QAAQ,GAAI,CACnB,IAAIO,GAAiB,EACjBC,EAAKlH,KAAK0G,QAAQ,GACtBQ,GAAyB,MAAV,IAALA,GAAwB,GAAyB,MAAV,IAALA,GAAwB,GAAO,EAG3E,IAFA,IAAIC,EAAM,EACNC,OAAG,GACCA,EAA4B,GAAtBpH,KAAK0G,UAAUS,KAAgBA,EAAM,GACjDD,IAAO,EACPA,GAAME,EAKR,IAFA,IAAMC,EAAsC,MAAV,IAAlBrH,KAAK0G,QAAQ,IAAwB,EAAmC,MAAV,IAAlB1G,KAAK0G,QAAQ,IAAwB,EAAI,EAC/FY,EAAUD,EAAOF,EAChBX,EAAWc,GAAS,CACzB,GAAId,GAAYnG,EACd,OAAO,EAGT,GAAqB,MAAV,KADX+G,EAAMf,EAAMG,OACe,CAEzBA,IACAS,GAAiB,EACjB,MAGAjH,KAAK0G,QAAQS,KAASC,EACtBF,IAAO,EACPA,GAAY,GAANE,EAGLH,IAEU,IAATI,EACEH,EAAK,IAEPV,IAEAF,EAAOC,KAAUW,EAED,IAATG,EACLH,EAAK,MAAWA,GAAM,OAAUA,GAAM,QAGxCZ,EAAOC,KAAUW,GAGfA,EAAK,OAAYA,EAAK,UAGxBZ,EAAOC,KAAUW,IAIvBlH,KAAK0G,QAAQE,KAAK,GAMpB,IAFA,IAAMW,EAAWlH,EAAS,EACtB3C,EAAI8I,EACD9I,EAAI2C,GAAQ,CAejB,SAAO3C,EAAI6J,IACiB,KAApBV,EAAQR,EAAM3I,KACU,KAAxBoJ,EAAQT,EAAM3I,EAAI,KACM,KAAxBqJ,EAAQV,EAAM3I,EAAI,KACM,KAAxBsJ,EAAQX,EAAM3I,EAAI,MAExB4I,EAAOC,KAAUM,EACjBP,EAAOC,KAAUO,EACjBR,EAAOC,KAAUQ,EACjBT,EAAOC,KAAUS,EACjBtJ,GAAK,EAOP,IAHAmJ,EAAQR,EAAM3I,MAGF,IACV4I,EAAOC,KAAUM,OAGZ,GAAuB,MAAV,IAARA,GAAwB,CAClC,GAAInJ,GAAK2C,EAEP,OADAL,KAAK0G,QAAQ,GAAKG,EACXN,EAGT,GAAuB,MAAV,KADbO,EAAQT,EAAM3I,OACe,CAE3BA,IACA,SAGF,IADAuI,GAAqB,GAARY,IAAiB,EAAa,GAARC,GACnB,IAAM,CAEpBpJ,IACA,SAEF4I,EAAOC,KAAUN,OAGZ,GAAuB,MAAV,IAARY,GAAwB,CAClC,GAAInJ,GAAK2C,EAEP,OADAL,KAAK0G,QAAQ,GAAKG,EACXN,EAGT,GAAuB,MAAV,KADbO,EAAQT,EAAM3I,OACe,CAE3BA,IACA,SAEF,GAAIA,GAAK2C,EAGP,OAFAL,KAAK0G,QAAQ,GAAKG,EAClB7G,KAAK0G,QAAQ,GAAKI,EACXP,EAGT,GAAuB,MAAV,KADbQ,EAAQV,EAAM3I,OACe,CAE3BA,IACA,SAGF,IADAuI,GAAqB,GAARY,IAAiB,IAAc,GAARC,IAAiB,EAAa,GAARC,GAC1C,MAAWd,GAAa,OAAUA,GAAa,MAE7D,SAEFK,EAAOC,KAAUN,OAGZ,GAAuB,MAAV,IAARY,GAAwB,CAClC,GAAInJ,GAAK2C,EAEP,OADAL,KAAK0G,QAAQ,GAAKG,EACXN,EAGT,GAAuB,MAAV,KADbO,EAAQT,EAAM3I,OACe,CAE3BA,IACA,SAEF,GAAIA,GAAK2C,EAGP,OAFAL,KAAK0G,QAAQ,GAAKG,EAClB7G,KAAK0G,QAAQ,GAAKI,EACXP,EAGT,GAAuB,MAAV,KADbQ,EAAQV,EAAM3I,OACe,CAE3BA,IACA,SAEF,GAAIA,GAAK2C,EAIP,OAHAL,KAAK0G,QAAQ,GAAKG,EAClB7G,KAAK0G,QAAQ,GAAKI,EAClB9G,KAAK0G,QAAQ,GAAKK,EACXR,EAGT,GAAuB,MAAV,KADbS,EAAQX,EAAM3I,OACe,CAE3BA,IACA,SAGF,IADAuI,GAAqB,EAARY,IAAiB,IAAc,GAARC,IAAiB,IAAc,GAARC,IAAiB,EAAa,GAARC,GACjE,OAAYf,EAAY,QAEtC,SAEFK,EAAOC,KAAUN,GAKrB,OAAOM,GAEX,EAjOA,GAAa,EAAAiB,e,8ECxGb,oCACEC,EACAJ,EACAK,EACAC,GAEAF,EAAKG,iBAAiBP,EAAMK,EAASC,GACrC,IAAIE,GAAW,EACf,MAAO,CACLzH,QAAS,WACHyH,IAGJA,GAAW,EACXJ,EAAKK,oBAAoBT,EAAMK,EAASC,Q,8ECrBjC,EAAAI,uBAAyB,IACzB,EAAAC,YAAc,GAEd,EAAAC,wBAA0B,G,6BCEvC,IAAiBC,EAiBA,EA4DAC,EAoCAC,EAkEjB,SAAgBC,EAAYlK,GAC1B,IAAM0B,EAAI1B,EAAEmK,SAAS,IACrB,OAAOzI,EAAEQ,OAAS,EAAI,IAAMR,EAAIA,EASlC,SAAgB0I,EAAcC,EAAYC,GACxC,OAAID,EAAKC,GACCA,EAAK,MAASD,EAAK,MAErBA,EAAK,MAASC,EAAK,K,iDAlM7B,SAAiBP,GACC,EAAAQ,MAAhB,SAAsB9J,EAAW+J,EAAWC,EAAWnL,GACrD,YAAUkD,IAANlD,EACK,IAAI4K,EAAYzJ,GAAKyJ,EAAYM,GAAKN,EAAYO,GAAKP,EAAY5K,GAErE,IAAI4K,EAAYzJ,GAAKyJ,EAAYM,GAAKN,EAAYO,IAG3C,EAAAC,OAAhB,SAAuBjK,EAAW+J,EAAWC,EAAWnL,GAEtD,YAFsD,IAAAA,MAAA,MAE9CmB,GAAK,GAAK+J,GAAK,GAAKC,GAAK,EAAInL,KAAO,GAVhD,CAAiByK,EAAA,EAAAA,WAAA,EAAAA,SAAQ,MAiBR,IAAAY,QAAA,EAAAA,MAAK,KACJC,MAAhB,SAAsB5F,EAAYD,GAChC,IAAMzF,GAAe,IAAVyF,EAAGkF,MAAe,IAC7B,GAAU,IAAN3K,EACF,MAAO,CACLuL,IAAK9F,EAAG8F,IACRZ,KAAMlF,EAAGkF,MAGb,IAAMa,EAAO/F,EAAGkF,MAAQ,GAAM,IACxBc,EAAOhG,EAAGkF,MAAQ,GAAM,IACxBe,EAAOjG,EAAGkF,MAAQ,EAAK,IACvBgB,EAAOjG,EAAGiF,MAAQ,GAAM,IACxBiB,EAAOlG,EAAGiF,MAAQ,GAAM,IACxBkB,EAAOnG,EAAGiF,MAAQ,EAAK,IACvBxJ,EAAIwK,EAAMG,KAAKC,OAAOP,EAAMG,GAAO3L,GACnCkL,EAAIU,EAAME,KAAKC,OAAON,EAAMG,GAAO5L,GACnCmL,EAAIU,EAAMC,KAAKC,OAAOL,EAAMG,GAAO7L,GAGzC,MAAO,CAAEuL,IAFGd,EAASQ,MAAM9J,EAAG+J,EAAGC,GAEnBR,KADDF,EAASW,OAAOjK,EAAG+J,EAAGC,KAIrB,EAAAa,oBAAhB,SAAoCtG,EAAYD,EAAYwG,GAC1D,IAAM1D,EAASoC,EAAKqB,oBAAoBtG,EAAGiF,KAAMlF,EAAGkF,KAAMsB,GAC1D,GAAK1D,EAGL,OAAOoC,EAAKuB,QACT3D,GAAU,GAAK,IACfA,GAAU,GAAK,IACfA,GAAU,EAAK,MAIJ,EAAA4D,OAAhB,SAAuBd,GACrB,IAAMe,GAA0B,IAAbf,EAAMV,QAAiB,EACpC,kBAACxJ,EAAA,KAAG+J,EAAA,KAAGC,EAAA,KACb,MAAO,CACLI,IAAKd,EAASQ,MAAM9J,EAAG+J,EAAGC,GAC1BR,KAAMyB,KAQK,EAAAb,MAAA,EAAAA,IAAG,KACFW,QAAhB,SAAwBX,GACtB,MAAO,CACLA,IAAG,EACHZ,MAAO0B,SAASd,EAAIe,MAAM,GAAI,KAAO,EAAI,OAAU,IAQzD,SAAiB,GAsBf,SAAgBC,EAAmBpL,EAAW+J,EAAWC,GACvD,IAAMqB,EAAKrL,EAAI,IACTsL,EAAKvB,EAAI,IACTwB,EAAKvB,EAAI,IAIf,MAAY,OAHDqB,GAAM,OAAUA,EAAK,MAAQV,KAAKa,KAAKH,EAAK,MAAS,MAAO,MAG7C,OAFfC,GAAM,OAAUA,EAAK,MAAQX,KAAKa,KAAKF,EAAK,MAAS,MAAO,MAE/B,OAD7BC,GAAM,OAAUA,EAAK,MAAQZ,KAAKa,KAAKD,EAAK,MAAS,MAAO,MArBzD,EAAAE,kBAAhB,SAAkClC,GAChC,OAAO6B,EACJ7B,GAAO,GAAM,IACbA,GAAO,EAAM,IACA,IAAd,IAWY,EAAA6B,mBAAkB,EAtBpC,CAAiB7B,EAAA,EAAAA,MAAA,EAAAA,IAAG,KAoCpB,SAAiBC,GAcf,SAAgBkC,EAAgBC,EAAgBC,EAAgBd,GAU9D,IAPA,IAAMN,EAAOmB,GAAU,GAAM,IACvBlB,EAAOkB,GAAU,GAAM,IACvBjB,EAAOiB,GAAW,EAAK,IACzBtB,EAAOuB,GAAU,GAAM,IACvBtB,EAAOsB,GAAU,GAAM,IACvBrB,EAAOqB,GAAW,EAAK,IACvBC,EAAKlC,EAAcJ,EAAI6B,mBAAmBf,EAAKE,EAAKD,GAAMf,EAAI6B,mBAAmBZ,EAAKC,EAAKC,IACxFmB,EAAKf,IAAUT,EAAM,GAAKC,EAAM,GAAKC,EAAM,IAEhDF,GAAOM,KAAKmB,IAAI,EAAGnB,KAAKoB,KAAW,GAAN1B,IAC7BC,GAAOK,KAAKmB,IAAI,EAAGnB,KAAKoB,KAAW,GAANzB,IAC7BC,GAAOI,KAAKmB,IAAI,EAAGnB,KAAKoB,KAAW,GAANxB,IAC7BsB,EAAKlC,EAAcJ,EAAI6B,mBAAmBf,EAAKE,EAAKD,GAAMf,EAAI6B,mBAAmBZ,EAAKC,EAAKC,IAE7F,OAAQL,GAAO,GAAKC,GAAO,GAAKC,GAAO,EAAI,OAAU,EAGvD,SAAgByB,EAAkBL,EAAgBC,EAAgBd,GAUhE,IAPA,IAAMN,EAAOmB,GAAU,GAAM,IACvBlB,EAAOkB,GAAU,GAAM,IACvBjB,EAAOiB,GAAW,EAAK,IACzBtB,EAAOuB,GAAU,GAAM,IACvBtB,EAAOsB,GAAU,GAAM,IACvBrB,EAAOqB,GAAW,EAAK,IACvBC,EAAKlC,EAAcJ,EAAI6B,mBAAmBf,EAAKE,EAAKD,GAAMf,EAAI6B,mBAAmBZ,EAAKC,EAAKC,IACxFmB,EAAKf,IAAUT,EAAM,KAAQC,EAAM,KAAQC,EAAM,MAEtDF,EAAMM,KAAKsB,IAAI,IAAM5B,EAAMM,KAAKoB,KAAmB,IAAb,IAAM1B,KAC5CC,EAAMK,KAAKsB,IAAI,IAAM3B,EAAMK,KAAKoB,KAAmB,IAAb,IAAMzB,KAC5CC,EAAMI,KAAKsB,IAAI,IAAM1B,EAAMI,KAAKoB,KAAmB,IAAb,IAAMxB,KAC5CsB,EAAKlC,EAAcJ,EAAI6B,mBAAmBf,EAAKE,EAAKD,GAAMf,EAAI6B,mBAAmBZ,EAAKC,EAAKC,IAE7F,OAAQL,GAAO,GAAKC,GAAO,GAAKC,GAAO,EAAI,OAAU,EAlDvC,EAAAM,oBAAhB,SAAoCc,EAAgBC,EAAgBd,GAClE,IAAMoB,EAAM3C,EAAIkC,kBAAkBE,GAAU,GACtCQ,EAAM5C,EAAIkC,kBAAkBG,GAAU,GAE5C,GADWjC,EAAcuC,EAAKC,GACrBrB,EACP,OAAIqB,EAAMD,EACDR,EAAgBC,EAAQC,EAAQd,GAElCkB,EAAkBL,EAAQC,EAAQd,IAK7B,EAAAY,gBAAe,EAoBf,EAAAM,kBAAiB,EAoBjB,EAAAI,WAAhB,SAA2BjM,GACzB,MAAO,CAAEA,GAAS,GAAM,IAAOA,GAAS,GAAM,IAAOA,GAAS,EAAK,IAAc,IAARA,IAG3D,EAAA4K,QAAhB,SAAwB/K,EAAW+J,EAAWC,GAC5C,MAAO,CACLI,IAAKd,EAASQ,MAAM9J,EAAG+J,EAAGC,GAC1BR,KAAMF,EAASW,OAAOjK,EAAG+J,EAAGC,KA7DlC,CAAiBR,EAAA,EAAAA,OAAA,EAAAA,KAAI,KAkErB,gBAWA,mB,8ECzLA,IAAM6C,EAA+B,oBAAdC,UACjBC,EAAY,EAAW,OAASD,UAAUC,UAC1CC,EAAW,EAAW,OAASF,UAAUE,SAmB/C,SAASC,EAASC,EAAYC,GAC5B,OAAOD,EAAIzJ,QAAQ0J,IAAO,EAlBf,EAAAC,aAAeL,EAAUtJ,QAAQ,WACjC,EAAA4J,SAAW,iCAAiCC,KAAKP,GAKjD,EAAAQ,MAAQN,EAAS,CAAC,YAAa,WAAY,SAAU,UAAWD,GAChE,EAAAQ,OAAsB,SAAbR,EACT,EAAAS,SAAwB,WAAbT,EACX,EAAAU,UAAYT,EAAS,CAAC,UAAW,QAAS,QAAS,SAAUD,GAC7D,EAAAW,QAAUX,EAASvJ,QAAQ,UAAY,G,8ECpBpD,SAAiBmK,GAEF,EAAAC,IAAM,KAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,GAAM,KAEN,EAAAC,GAAM,KAEN,EAAAC,GAAM,KAEN,EAAAC,GAAM,KAEN,EAAAC,GAAM,KAEN,EAAAC,GAAM,KAEN,EAAAC,GAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,IAAM,IApErB,CAAiB,EAAAlC,KAAA,EAAAA,GAAE,KA2EnB,SAAiBmC,GAEF,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,GAAK,IAEL,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,GAAK,IAEL,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,KAAO,IAEP,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,GAAK,IAEL,EAAAC,IAAM,IAEN,EAAAC,GAAK,IAEL,EAAAC,IAAM,IAhErB,CAAiB,EAAAhC,KAAA,EAAAA,GAAE,M,8EC7EnB,WAEA,OAEA,QACA,OAIA,QACA,QAEA,aAyBE,WACUiC,EACRC,EACAC,EACQC,EACEC,EACFC,EACWC,EACAC,GAPX,KAAAP,aAGA,KAAAG,SACE,KAAAC,UACF,KAAAC,cACW,KAAAC,iBACA,KAAAC,kBA9Bb,KAAAC,iBAA2B,EAC3B,KAAAC,kBAA4B,EAC5B,KAAAC,iBAA2B,EAC3B,KAAAC,kBAA4B,EAC5B,KAAAC,gBAA0B,EAC1B,KAAAC,eAAyB,EAOzB,KAAAC,wBAA4C,CAClDC,MAAO,GACPnN,KAAM,EACNb,GAAI,EACJD,GAAI,EACJkO,MAAM,EACNC,KAAK,EACLC,QAAQ,GAaRtR,KAAKuR,QAAUC,SAASC,cAAc,UACtCzR,KAAKuR,QAAQG,UAAUC,IAAI,SAAStB,EAAE,UACtCrQ,KAAKuR,QAAQK,MAAMtB,OAASA,EAAOhI,WACnCtI,KAAK6R,cACL7R,KAAKoQ,WAAW0B,YAAY9R,KAAKuR,SAgarC,OA7ZS,YAAAnR,QAAP,W,MACEJ,KAAKoQ,WAAW2B,YAAY/R,KAAKuR,SAClB,QAAf,EAAAvR,KAAKgS,kBAAU,SAAE5R,WAGX,YAAAyR,YAAR,WACE7R,KAAKiS,KAAO,EAAAC,aAAalS,KAAKuR,QAAQY,WAAW,KAAM,CAACC,MAAOpS,KAAKuQ,UAE/DvQ,KAAKuQ,QACRvQ,KAAKqS,aAIF,YAAAC,iBAAP,aACO,YAAAC,OAAP,aACO,YAAAC,QAAP,aACO,YAAAC,aAAP,aACO,YAAAC,cAAP,SAAqBC,EAAkBC,KAChC,YAAAC,mBAAP,SAA0B/M,EAAyBC,EAAuB+M,QAAA,IAAAA,OAAA,IAEnE,YAAAC,UAAP,SAAiBC,GACfhT,KAAKiT,kBAAkBD,IAGf,YAAAE,iBAAV,SAA2Bd,GAEzB,GAAIA,IAAUpS,KAAKuQ,OAAnB,CAKA,IAAM4C,EAAYnT,KAAKuR,QACvBvR,KAAKuQ,OAAS6B,EAEdpS,KAAKuR,QAAUvR,KAAKuR,QAAQ6B,YAC5BpT,KAAK6R,cACL7R,KAAKoQ,WAAWiD,aAAarT,KAAKuR,QAAS4B,GAG3CnT,KAAKiT,kBAAkBjT,KAAKwQ,SAC5BxQ,KAAK0S,cAAc,EAAG1S,KAAK0Q,eAAe4C,KAAO,KAO3C,YAAAL,kBAAR,SAA0BD,GACpBhT,KAAK4Q,kBAAoB,GAAK5Q,KAAK6Q,mBAAqB,IAG5D7Q,KAAKgS,WAAa,EAAAuB,iBAAiBvT,KAAK2Q,gBAAgB6C,QAASxT,KAAKyQ,YAAauC,EAAUhT,KAAK4Q,iBAAkB5Q,KAAK6Q,mBACzH7Q,KAAKgS,WAAWyB,WAGX,YAAAC,OAAP,SAAcrC,GACZrR,KAAK8Q,iBAAmBO,EAAIsC,gBAC5B3T,KAAK+Q,kBAAoBM,EAAIuC,iBAC7B5T,KAAK4Q,iBAAmBS,EAAIwC,gBAC5B7T,KAAK6Q,kBAAoBQ,EAAIyC,iBAC7B9T,KAAKgR,gBAAkBK,EAAI0C,eAC3B/T,KAAKiR,eAAiBI,EAAI2C,cAC1BhU,KAAKuR,QAAQ0C,MAAQ5C,EAAI6C,kBACzBlU,KAAKuR,QAAQ4C,OAAS9C,EAAI+C,mBAC1BpU,KAAKuR,QAAQK,MAAMqC,MAAW5C,EAAIgD,YAAW,KAC7CrU,KAAKuR,QAAQK,MAAMuC,OAAY9C,EAAIiD,aAAY,KAG1CtU,KAAKuQ,QACRvQ,KAAKqS,YAGPrS,KAAKiT,kBAAkBjT,KAAKwQ,UAYpB,YAAA+D,WAAV,SAAqBC,EAAWC,EAAWR,EAAeE,GACxDnU,KAAKiS,KAAKyC,SACRF,EAAIxU,KAAK8Q,iBACT2D,EAAIzU,KAAK+Q,kBACTkD,EAAQjU,KAAK8Q,iBACbqD,EAASnU,KAAK+Q,oBASR,YAAA4D,uBAAV,SAAiCH,EAAWC,EAAWR,QAAA,IAAAA,MAAA,GACrDjU,KAAKiS,KAAKyC,SACRF,EAAIxU,KAAK8Q,kBACR2D,EAAI,GAAKzU,KAAK+Q,kBAAoBpT,OAAOiX,iBAAmB,EAC7DX,EAAQjU,KAAK8Q,iBACbnT,OAAOiX,mBASD,YAAAC,oBAAV,SAA8BL,EAAWC,EAAWR,GAClDjU,KAAKiS,KAAKyC,SACRF,EAAIxU,KAAK8Q,iBACT2D,EAAIzU,KAAK+Q,kBACTpT,OAAOiX,iBAAmBX,EAC1BjU,KAAK+Q,oBASC,YAAA+D,kBAAV,SAA4BN,EAAWC,EAAWR,EAAeE,GAC/DnU,KAAKiS,KAAK8C,UAAYpX,OAAOiX,iBAC7B5U,KAAKiS,KAAK+C,WACRR,EAAIxU,KAAK8Q,iBAAmBnT,OAAOiX,iBAAmB,EACtDH,EAAIzU,KAAK+Q,kBAAqBpT,OAAOiX,iBAAmB,EACxDX,EAAQjU,KAAK8Q,iBAAmBnT,OAAOiX,iBACtCT,EAASnU,KAAK+Q,kBAAqBpT,OAAOiX,mBAMrC,YAAAvC,UAAV,WACMrS,KAAKuQ,OACPvQ,KAAKiS,KAAKgD,UAAU,EAAG,EAAGjV,KAAKuR,QAAQ0C,MAAOjU,KAAKuR,QAAQ4C,SAE3DnU,KAAKiS,KAAKiD,UAAYlV,KAAKwQ,QAAQ2E,WAAWnM,IAC9ChJ,KAAKiS,KAAKyC,SAAS,EAAG,EAAG1U,KAAKuR,QAAQ0C,MAAOjU,KAAKuR,QAAQ4C,UAWpD,YAAAiB,YAAV,SAAsBZ,EAAWC,EAAWR,EAAeE,GACrDnU,KAAKuQ,OACPvQ,KAAKiS,KAAKgD,UACRT,EAAIxU,KAAK8Q,iBACT2D,EAAIzU,KAAK+Q,kBACTkD,EAAQjU,KAAK8Q,iBACbqD,EAASnU,KAAK+Q,oBAEhB/Q,KAAKiS,KAAKiD,UAAYlV,KAAKwQ,QAAQ2E,WAAWnM,IAC9ChJ,KAAKiS,KAAKyC,SACRF,EAAIxU,KAAK8Q,iBACT2D,EAAIzU,KAAK+Q,kBACTkD,EAAQjU,KAAK8Q,iBACbqD,EAASnU,KAAK+Q,qBAaV,YAAAsE,mBAAV,SAA6BC,EAAgBd,EAAWC,GACtDzU,KAAKiS,KAAKsD,KAAOvV,KAAKwV,UAAS,GAAO,GACtCxV,KAAKiS,KAAKwD,aAAe,SACzBzV,KAAK0V,SAASjB,GACdzU,KAAKiS,KAAK0D,SACRL,EAAK3R,WACL6Q,EAAIxU,KAAK8Q,iBAAmB9Q,KAAKgR,gBACjCyD,EAAIzU,KAAK+Q,kBAAoB/Q,KAAKiR,eAAiBjR,KAAK6Q,kBAAoB,IAgBtE,YAAA+E,WAAV,SAAqBN,EAAiBd,EAAWC,GAC/C,IAWIvR,EACAC,EAZE0S,EAAgB7V,KAAK8V,kBAAkBR,GAMzCO,GAAiBP,EAAKrQ,WAAaqQ,EAAKpQ,UAC1ClF,KAAK+V,mBAAmBT,EAAMd,EAAGC,EAAGoB,IAMlCP,EAAK9Q,aACPtB,EAAMoS,EAAKhQ,cAAiB,EAAAyC,uBAAyBuN,EAAK7P,aAC1DtC,EAAMmS,EAAKjQ,cAAiB,EAAA0C,uBAAyBuN,EAAK9P,eAE1DrC,EAAMmS,EAAKhQ,cAAiB,EAAAvD,cAAgBuT,EAAK7P,aACjDvC,EAAMoS,EAAKjQ,cAAiB,EAAAtD,cAAgBuT,EAAK9P,cAKnDtC,GAF0BlD,KAAK2Q,gBAAgB6C,QAAQwC,4BAA8BV,EAAK7Q,UAAYvB,EAAK,EAEjF,EAAI,EAC9BlD,KAAKkR,wBAAwBC,MAAQmE,EAAK3R,YAAc,EAAAnB,qBACxDxC,KAAKkR,wBAAwBlN,KAAOsR,EAAKzR,WAAa,EAAAnB,qBACtD1C,KAAKkR,wBAAwB/N,GAAKA,EAClCnD,KAAKkR,wBAAwBhO,GAAKA,EAClClD,KAAKkR,wBAAwBE,OAASkE,EAAK7Q,SAC3CzE,KAAKkR,wBAAwBG,MAAQiE,EAAKxQ,QAC1C9E,KAAKkR,wBAAwBI,SAAWgE,EAAKzQ,WACxB7E,KAAKgS,YAAchS,KAAKgS,WAAWiE,KACtDjW,KAAKiS,KACLjS,KAAKkR,wBACLsD,EAAIxU,KAAK8Q,iBAAmB9Q,KAAKgR,gBACjCyD,EAAIzU,KAAK+Q,kBAAoB/Q,KAAKiR,iBAIlCjR,KAAK+V,mBAAmBT,EAAMd,EAAGC,KAc7B,YAAAsB,mBAAR,SAA2BT,EAAiBd,EAAWC,EAAWyB,GAKhE,GAJAlW,KAAKiS,KAAKkE,OACVnW,KAAKiS,KAAKsD,KAAOvV,KAAKwV,WAAWF,EAAK7Q,WAAY6Q,EAAKzQ,YACvD7E,KAAKiS,KAAKwD,aAAe,SAErBH,EAAK9Q,YACP,GAAI0R,EACFlW,KAAKiS,KAAKiD,UAAYgB,EAAWlN,SAC5B,GAAIsM,EAAKhQ,cACdtF,KAAKiS,KAAKiD,UAAY,EAAApM,MAAMc,OAAO5J,KAAKwQ,QAAQ2E,YAAYnM,SACvD,GAAIsM,EAAKpQ,UACdlF,KAAKiS,KAAKiD,UAAY,OAAO,EAAA/Q,cAAcC,WAAWkR,EAAK7P,cAAc2Q,KAAK,KAAI,QAC7E,CACL,IAAIjT,EAAKmS,EAAK7P,aACVzF,KAAK2Q,gBAAgB6C,QAAQwC,4BAA8BV,EAAK7Q,UAAYtB,EAAK,IACnFA,GAAM,GAERnD,KAAKiS,KAAKiD,UAAYlV,KAAKwQ,QAAQ6F,KAAKlT,GAAI6F,SAG9C,GAAIkN,EACFlW,KAAKiS,KAAKiD,UAAYgB,EAAWlN,SAC5B,GAAIsM,EAAKjQ,cACdrF,KAAKiS,KAAKiD,UAAYlV,KAAKwQ,QAAQ8F,WAAWtN,SACzC,GAAIsM,EAAKrQ,UACdjF,KAAKiS,KAAKiD,UAAY,OAAO,EAAA/Q,cAAcC,WAAWkR,EAAK9P,cAAc4Q,KAAK,KAAI,QAC7E,CACL,IAAIlT,EAAKoS,EAAK9P,aACVxF,KAAK2Q,gBAAgB6C,QAAQwC,4BAA8BV,EAAK7Q,UAAYvB,EAAK,IACnFA,GAAM,GAERlD,KAAKiS,KAAKiD,UAAYlV,KAAKwQ,QAAQ6F,KAAKnT,GAAI8F,IAIhDhJ,KAAK0V,SAASjB,GAGVa,EAAKxQ,UACP9E,KAAKiS,KAAKsE,YAAc,EAAAvO,aAG1BhI,KAAKiS,KAAK0D,SACRL,EAAK3R,WACL6Q,EAAIxU,KAAK8Q,iBAAmB9Q,KAAKgR,gBACjCyD,EAAIzU,KAAK+Q,kBAAoB/Q,KAAKiR,eAAiBjR,KAAK6Q,kBAAoB,GAC9E7Q,KAAKiS,KAAKuE,WAOJ,YAAAd,SAAR,SAAiBjB,GACfzU,KAAKiS,KAAKwE,YACVzW,KAAKiS,KAAKyE,KACR,EACAjC,EAAIzU,KAAK+Q,kBACT/Q,KAAK0Q,eAAeiG,KAAO3W,KAAK8Q,iBAChC9Q,KAAK+Q,mBACP/Q,KAAKiS,KAAK2E,QAOF,YAAApB,SAAV,SAAmB/Q,EAAiBI,GAIlC,OAFkBA,EAAW,SAAW,IAErB,KAHAJ,EAASzE,KAAK2Q,gBAAgB6C,QAAQqD,eAAiB7W,KAAK2Q,gBAAgB6C,QAAQsD,YAGtE,IAAI9W,KAAK2Q,gBAAgB6C,QAAQuD,SAAWpZ,OAAOiX,iBAAgB,MAAM5U,KAAK2Q,gBAAgB6C,QAAQwD,YAGjI,YAAAlB,kBAAR,SAA0BR,GACxB,GAA0D,IAAtDtV,KAAK2Q,gBAAgB6C,QAAQyD,qBAAjC,CAKA,IAAMC,EAAgBlX,KAAKwQ,QAAQ2G,cAAcC,SAAS9B,EAAKnS,GAAImS,EAAKpS,IACxE,QAAsBvC,IAAlBuW,EACF,OAAOA,QAAiBvW,EAG1B,IAAI0W,EAAU/B,EAAK9P,aACf8R,EAAchC,EAAKvQ,iBACnBwS,EAAUjC,EAAK7P,aACf+R,EAAclC,EAAKtQ,iBACjBR,IAAc8Q,EAAK9Q,YACnBC,IAAW6Q,EAAK9Q,YACtB,GAAIA,EAAW,CACb,IAAMiT,EAAOJ,EACbA,EAAUE,EACVA,EAAUE,EACV,IAAMC,EAAQJ,EACdA,EAAcE,EACdA,EAAcE,EAGhB,IAAMnN,EAASvK,KAAK2X,uBAAuBH,EAAaD,EAAS/S,GAC3DgG,EAASxK,KAAK4X,uBAAuBN,EAAaD,EAAS7S,EAAWC,GACtEuB,EAAS,EAAAoC,KAAKqB,oBAAoBc,EAAQC,EAAQxK,KAAK2Q,gBAAgB6C,QAAQyD,sBAErF,GAAKjR,EAAL,CAKA,IAAM8C,EAAgB,CACpBE,IAAK,EAAAd,SAASQ,MACX1C,GAAU,GAAM,IAChBA,GAAU,GAAM,IAChBA,GAAU,EAAK,KAElBoC,KAAMpC,GAIR,OAFAhG,KAAKwQ,QAAQ2G,cAAcU,SAASvC,EAAKnS,GAAImS,EAAKpS,GAAI4F,GAE/CA,EAdL9I,KAAKwQ,QAAQ2G,cAAcU,SAASvC,EAAKnS,GAAImS,EAAKpS,GAAI,QAiBlD,YAAAyU,uBAAR,SAA+BH,EAAqBD,EAAiBO,GACnE,OAAQN,GACN,KAAK,SACL,KAAK,SACH,OAAOxX,KAAKwQ,QAAQ6F,KAAKkB,GAASnP,KACpC,KAAK,SACH,OAAOmP,GAAW,EACpB,KAAK,EACL,QACE,OAAIO,EACK9X,KAAKwQ,QAAQ8F,WAAWlO,KAE1BpI,KAAKwQ,QAAQ2E,WAAW/M,OAI7B,YAAAwP,uBAAR,SAA+BN,EAAqBD,EAAiBS,EAAkB1G,GACrF,OAAQkG,GACN,KAAK,SACL,KAAK,SAIH,OAHItX,KAAK2Q,gBAAgB6C,QAAQwC,4BAA8B5E,GAAQiG,EAAU,IAC/EA,GAAW,GAENrX,KAAKwQ,QAAQ6F,KAAKgB,GAASjP,KACpC,KAAK,SACH,OAAOiP,GAAW,EACpB,KAAK,EACL,QACE,OAAIS,EACK9X,KAAKwQ,QAAQ2E,WAAW/M,KAE1BpI,KAAKwQ,QAAQ8F,WAAWlO,OAGvC,EAvcA,GAAsB,EAAA2P,mB,8ECsBtB,SAASC,EAAuB3H,EAAc/J,EAAkB1E,GACzD0E,EAAwB,YAAMA,EAChCA,EAA8B,gBAAEnG,KAAK,CAAEkQ,GAAE,EAAEzO,MAAK,KAEhD0E,EAA8B,gBAAI,CAAC,CAAE+J,GAAE,EAAEzO,MAAK,IAC9C0E,EAAwB,UAAIA,GA9BpB,EAAA2R,gBAAwD,IAAIC,IAEzE,kCAAuCC,GACrC,OAAOA,EAAoB,iBAAK,IAGlC,2BAAmC9H,GACjC,GAAI,EAAA4H,gBAAgBG,IAAI/H,GACtB,OAAO,EAAA4H,gBAAgBtZ,IAAI0R,GAG7B,IAAMgI,EAAiB,SAAU/R,EAAkBjH,EAAauC,GAC9D,GAAyB,IAArB0W,UAAUjY,OACZ,MAAM,IAAIkY,MAAM,oEAGlBP,EAAuBK,EAAW/R,EAAQ1E,IAM5C,OAHAyW,EAAU/P,SAAW,WAAM,OAAA+H,GAE3B,EAAA4H,gBAAgBO,IAAInI,EAAIgI,GACjBA,I,6BClBT,SAAgBI,EAAmCC,EAAU3Z,EAAe+G,EAAmBC,GAK7F,QAL0E,IAAAD,MAAA,QAAmB,IAAAC,MAAc2S,EAAMrY,QAK7GyF,GAAS4S,EAAMrY,OACjB,OAAOqY,EAET5S,GAAS4S,EAAMrY,OAASyF,GAAS4S,EAAMrY,OAErC0F,EADEA,GAAO2S,EAAMrY,OACTqY,EAAMrY,QAELqY,EAAMrY,OAAS0F,GAAO2S,EAAMrY,OAErC,IAAK,IAAI3C,EAAIoI,EAAOpI,EAAIqI,IAAOrI,EAC7Bgb,EAAMhb,GAAKqB,EAEb,OAAO2Z,E,iDAzBT,gBAA2CA,EAAU3Z,EAAe+G,EAAgBC,GAElF,OAAI2S,EAAM9R,KACD8R,EAAM9R,KAAK7H,EAAO+G,EAAOC,GAE3B0S,EAAaC,EAAO3Z,EAAO+G,EAAOC,IAG3C,iBAwBA,kBAA6CtI,EAAMmL,GACjD,IAAM5C,EAAS,IAAKvI,EAAEkb,YAAoBlb,EAAE4C,OAASuI,EAAEvI,QAGvD,OAFA2F,EAAOwS,IAAI/a,GACXuI,EAAOwS,IAAI5P,EAAGnL,EAAE4C,QACT2F,I,8EC1CT,WACA,OACA,OACA,OA4Ba,EAAA4S,kBAAoBpa,OAAOqa,OAAO,IAAI,EAAA1U,eAiBnD,iBAKE,WAAYwS,EAAcmC,EAAiCC,QAAA,IAAAA,OAAA,QAAAA,YAHjD,KAAAC,UAAuC,GAI/ChZ,KAAKiZ,MAAQ,IAAIC,YAvCH,EAuCevC,GAE7B,IADA,IAAMrB,EAAOwD,GAAgB,EAAAvV,SAASF,aAAa,CAAC,EAAG,EAAAhB,eAAgB,EAAAC,gBAAiB,EAAAC,iBAC/E7E,EAAI,EAAGA,EAAIiZ,IAAQjZ,EAC1BsC,KAAKmZ,QAAQzb,EAAG4X,GAElBtV,KAAKK,OAASsW,EAqWlB,OA9VS,YAAAhY,IAAP,SAAWiD,GACT,IAAMqB,EAAUjD,KAAKiZ,MApDP,EAoDarX,EAAoB,GACzCsF,EAAe,QAAVjE,EACX,MAAO,CACLjD,KAAKiZ,MAvDO,EAuDDrX,EAAoB,GACpB,QAAVqB,EACGjD,KAAKgZ,UAAUpX,GACf,EAAO,EAAAgC,oBAAoBsD,GAAM,GACrCjE,GAAW,GACA,QAAVA,EACGjD,KAAKgZ,UAAUpX,GAAOkC,WAAW9D,KAAKgZ,UAAUpX,GAAOvB,OAAS,GAChE6G,IAQD,YAAAsR,IAAP,SAAW5W,EAAe7C,GACxBiB,KAAKiZ,MAvES,EAuEHrX,EAAoB,GAAW7C,EAAM,EAAAkD,sBAC5ClD,EAAM,EAAAmD,sBAAsB7B,OAAS,GACvCL,KAAKgZ,UAAUpX,GAAS7C,EAAM,GAC9BiB,KAAKiZ,MA1EO,EA0EDrX,EAAoB,GAAwB,QAARA,EAAoC7C,EAAM,EAAAoD,wBAA0B,IAEnHnC,KAAKiZ,MA5EO,EA4EDrX,EAAoB,GAAgB7C,EAAM,EAAAmD,sBAAsB4B,WAAW,GAAM/E,EAAM,EAAAoD,wBAA0B,IAQzH,YAAAuB,SAAP,SAAgB9B,GACd,OAAO5B,KAAKiZ,MArFE,EAqFIrX,EAAoB,IAAiB,IAIlD,YAAAwX,SAAP,SAAgBxX,GACd,OAAsD,SAA/C5B,KAAKiZ,MA1FE,EA0FIrX,EAAoB,IAIjC,YAAAyX,MAAP,SAAazX,GACX,OAAO5B,KAAKiZ,MA/FE,EA+FIrX,EAAoB,IAIjC,YAAA0X,MAAP,SAAa1X,GACX,OAAO5B,KAAKiZ,MApGE,EAoGIrX,EAAoB,IAQjC,YAAA2X,WAAP,SAAkB3X,GAChB,OAAsD,QAA/C5B,KAAKiZ,MA7GE,EA6GIrX,EAAoB,IAQjC,YAAA4X,aAAP,SAAoB5X,GAClB,IAAMqB,EAAUjD,KAAKiZ,MAtHP,EAsHarX,EAAoB,GAC/C,OAAc,QAAVqB,EACKjD,KAAKgZ,UAAUpX,GAAOkC,WAAW9D,KAAKgZ,UAAUpX,GAAOvB,OAAS,GAExD,QAAV4C,GAIF,YAAAQ,WAAP,SAAkB7B,GAChB,OAAsD,QAA/C5B,KAAKiZ,MA/HE,EA+HIrX,EAAoB,IAIjC,YAAA6X,UAAP,SAAiB7X,GACf,IAAMqB,EAAUjD,KAAKiZ,MApIP,EAoIarX,EAAoB,GAC/C,OAAc,QAAVqB,EACKjD,KAAKgZ,UAAUpX,GAEV,QAAVqB,EACK,EAAAW,oBAA8B,QAAVX,GAGtB,IAOF,YAAAyW,SAAP,SAAgB9X,EAAe0T,GAC7B,IAAMqE,EApJQ,EAoJK/X,EAOnB,OANA0T,EAAKrS,QAAUjD,KAAKiZ,MAAMU,EAAa,GACvCrE,EAAKpS,GAAKlD,KAAKiZ,MAAMU,EAAa,GAClCrE,EAAKnS,GAAKnD,KAAKiZ,MAAMU,EAAa,GACf,QAAfrE,EAAKrS,UACPqS,EAAKlS,aAAepD,KAAKgZ,UAAUpX,IAE9B0T,GAMF,YAAA6D,QAAP,SAAevX,EAAe0T,GACT,QAAfA,EAAKrS,UACPjD,KAAKgZ,UAAUpX,GAAS0T,EAAKlS,cAE/BpD,KAAKiZ,MArKS,EAqKHrX,EAAoB,GAAgB0T,EAAKrS,QACpDjD,KAAKiZ,MAtKS,EAsKHrX,EAAoB,GAAW0T,EAAKpS,GAC/ClD,KAAKiZ,MAvKS,EAuKHrX,EAAoB,GAAW0T,EAAKnS,IAQ1C,YAAAyW,qBAAP,SAA4BhY,EAAe8D,EAAmBuO,EAAe/Q,EAAYC,GACvFnD,KAAKiZ,MAhLS,EAgLHrX,EAAoB,GAAgB8D,EAAauO,GAAS,GACrEjU,KAAKiZ,MAjLS,EAiLHrX,EAAoB,GAAWsB,EAC1ClD,KAAKiZ,MAlLS,EAkLHrX,EAAoB,GAAWuB,GASrC,YAAA0W,mBAAP,SAA0BjY,EAAe8D,GACvC,IAAIzC,EAAUjD,KAAKiZ,MA5LL,EA4LWrX,EAAoB,GAC/B,QAAVqB,EAEFjD,KAAKgZ,UAAUpX,IAAU,EAAAgC,oBAAoB8B,IAE/B,QAAVzC,GAIFjD,KAAKgZ,UAAUpX,GAAS,EAAAgC,oBAA8B,QAAVX,GAAoC,EAAAW,oBAAoB8B,GACpGzC,IAAW,QACXA,GAAW,SAIXA,EAAUyC,EAAa,GAAK,GAE9B1F,KAAKiZ,MA7MO,EA6MDrX,EAAoB,GAAgBqB,IAI5C,YAAA6W,YAAP,SAAmB3S,EAAa5H,EAAWuZ,EAAyBiB,GAQlE,IAPA5S,GAAOnH,KAAKK,SAG0B,IAA3BL,KAAK0D,SAASyD,EAAM,IAC7BnH,KAAK4Z,qBAAqBzS,EAAM,EAAG,EAAG,GAAG4S,aAAS,EAATA,EAAW7W,KAAM,GAAG6W,aAAS,EAATA,EAAW5W,KAAM,GAG5E5D,EAAIS,KAAKK,OAAS8G,EAAK,CAEzB,IADA,IAAMmO,EAAO,IAAI,EAAA/R,SACR7F,EAAIsC,KAAKK,OAAS8G,EAAM5H,EAAI,EAAG7B,GAAK,IAAKA,EAChDsC,KAAKmZ,QAAQhS,EAAM5H,EAAI7B,EAAGsC,KAAK0Z,SAASvS,EAAMzJ,EAAG4X,IAEnD,IAAS5X,EAAI,EAAGA,EAAI6B,IAAK7B,EACvBsC,KAAKmZ,QAAQhS,EAAMzJ,EAAGob,QAGxB,IAASpb,EAAIyJ,EAAKzJ,EAAIsC,KAAKK,SAAU3C,EACnCsC,KAAKmZ,QAAQzb,EAAGob,GAKmB,IAAnC9Y,KAAK0D,SAAS1D,KAAKK,OAAS,IAC9BL,KAAK4Z,qBAAqB5Z,KAAKK,OAAS,EAAG,EAAG,GAAG0Z,aAAS,EAATA,EAAW7W,KAAM,GAAG6W,aAAS,EAATA,EAAW5W,KAAM,IAInF,YAAA6W,YAAP,SAAmB7S,EAAa5H,EAAWuZ,EAAyBiB,GAElE,GADA5S,GAAOnH,KAAKK,OACRd,EAAIS,KAAKK,OAAS8G,EAAK,CAEzB,IADA,IAAMmO,EAAO,IAAI,EAAA/R,SACR7F,EAAI,EAAGA,EAAIsC,KAAKK,OAAS8G,EAAM5H,IAAK7B,EAC3CsC,KAAKmZ,QAAQhS,EAAMzJ,EAAGsC,KAAK0Z,SAASvS,EAAM5H,EAAI7B,EAAG4X,IAEnD,IAAS5X,EAAIsC,KAAKK,OAASd,EAAG7B,EAAIsC,KAAKK,SAAU3C,EAC/CsC,KAAKmZ,QAAQzb,EAAGob,QAGlB,IAASpb,EAAIyJ,EAAKzJ,EAAIsC,KAAKK,SAAU3C,EACnCsC,KAAKmZ,QAAQzb,EAAGob,GAOhB3R,GAAkC,IAA3BnH,KAAK0D,SAASyD,EAAM,IAC7BnH,KAAK4Z,qBAAqBzS,EAAM,EAAG,EAAG,GAAG4S,aAAS,EAATA,EAAW7W,KAAM,GAAG6W,aAAS,EAATA,EAAW5W,KAAM,GAErD,IAAvBnD,KAAK0D,SAASyD,IAAenH,KAAKuZ,WAAWpS,IAC/CnH,KAAK4Z,qBAAqBzS,EAAK,EAAG,GAAG4S,aAAS,EAATA,EAAW7W,KAAM,GAAG6W,aAAS,EAATA,EAAW5W,KAAM,IAIvE,YAAA8W,aAAP,SAAoBnU,EAAeC,EAAa+S,EAAyBiB,GAUvE,IARIjU,GAAsC,IAA7B9F,KAAK0D,SAASoC,EAAQ,IACjC9F,KAAK4Z,qBAAqB9T,EAAQ,EAAG,EAAG,GAAGiU,aAAS,EAATA,EAAW7W,KAAM,GAAG6W,aAAS,EAATA,EAAW5W,KAAM,GAG9E4C,EAAM/F,KAAKK,QAAqC,IAA3BL,KAAK0D,SAASqC,EAAM,IAC3C/F,KAAK4Z,qBAAqB7T,EAAK,EAAG,GAAGgU,aAAS,EAATA,EAAW7W,KAAM,GAAG6W,aAAS,EAATA,EAAW5W,KAAM,GAGrE2C,EAAQC,GAAQD,EAAQ9F,KAAKK,QAClCL,KAAKmZ,QAAQrT,IAASgT,IAInB,YAAApF,OAAP,SAAciD,EAAcmC,GAC1B,GAAInC,IAAS3W,KAAKK,OAAlB,CAGA,GAAIsW,EAAO3W,KAAKK,OAAQ,CACtB,IAAMwF,EAAO,IAAIqT,YA5RL,EA4RiBvC,GACzB3W,KAAKK,SA7RG,EA8RNsW,EAAmB3W,KAAKiZ,MAAM5Y,OAChCwF,EAAK2S,IAAIxY,KAAKiZ,MAAMiB,SAAS,EA/RrB,EA+RwBvD,IAEhC9Q,EAAK2S,IAAIxY,KAAKiZ,QAGlBjZ,KAAKiZ,MAAQpT,EACb,IAAK,IAAInI,EAAIsC,KAAKK,OAAQ3C,EAAIiZ,IAAQjZ,EACpCsC,KAAKmZ,QAAQzb,EAAGob,QAGlB,GAAInC,EAAM,EACF9Q,EAAO,IAAIqT,YA1SP,EA0SmBvC,IACxB6B,IAAIxY,KAAKiZ,MAAMiB,SAAS,EA3SnB,EA2SsBvD,IAChC3W,KAAKiZ,MAAQpT,EAEb,IAAMsU,EAAO3b,OAAO2b,KAAKna,KAAKgZ,WAC9B,IAAStb,EAAI,EAAGA,EAAIyc,EAAK9Z,OAAQ3C,IAAK,CACpC,IAAM2B,EAAMyK,SAASqQ,EAAKzc,GAAI,IAC1B2B,GAAOsX,UACF3W,KAAKgZ,UAAU3Z,SAI1BW,KAAKiZ,MAAQ,IAAIC,YAAY,GAC7BlZ,KAAKgZ,UAAY,GAGrBhZ,KAAKK,OAASsW,IAIT,YAAA/P,KAAP,SAAYkS,GACV9Y,KAAKgZ,UAAY,GACjB,IAAK,IAAItb,EAAI,EAAGA,EAAIsC,KAAKK,SAAU3C,EACjCsC,KAAKmZ,QAAQzb,EAAGob,IAKb,YAAAsB,SAAP,SAAgBC,GASd,IAAK,IAAM9O,KARPvL,KAAKK,SAAWga,EAAKha,OACvBL,KAAKiZ,MAAQ,IAAIC,YAAYmB,EAAKpB,OAGlCjZ,KAAKiZ,MAAMT,IAAI6B,EAAKpB,OAEtBjZ,KAAKK,OAASga,EAAKha,OACnBL,KAAKgZ,UAAY,GACAqB,EAAKrB,UACpBhZ,KAAKgZ,UAAUzN,GAAM8O,EAAKrB,UAAUzN,GAEtCvL,KAAK+Y,UAAYsB,EAAKtB,WAIjB,YAAAzU,MAAP,WACE,IAAMgW,EAAU,IAAIC,EAAW,GAG/B,IAAK,IAAMhP,KAFX+O,EAAQrB,MAAQ,IAAIC,YAAYlZ,KAAKiZ,OACrCqB,EAAQja,OAASL,KAAKK,OACLL,KAAKgZ,UACpBsB,EAAQtB,UAAUzN,GAAMvL,KAAKgZ,UAAUzN,GAGzC,OADA+O,EAAQvB,UAAY/Y,KAAK+Y,UAClBuB,GAGF,YAAAE,iBAAP,WACE,IAAK,IAAI9c,EAAIsC,KAAKK,OAAS,EAAG3C,GAAK,IAAKA,EACtC,GAAgD,QAA3CsC,KAAKiZ,MAnWE,EAmWIvb,EAAgB,GAC9B,OAAOA,GAAKsC,KAAKiZ,MApWP,EAoWavb,EAAgB,IAAiB,IAG5D,OAAO,GAGF,YAAA+c,cAAP,SAAqBC,EAAiBC,EAAgBC,EAAiBva,EAAgBwa,GACrF,IAAMC,EAAUJ,EAAIzB,MACpB,GAAI4B,EACF,IAAK,IAAIvF,EAAOjV,EAAS,EAAGiV,GAAQ,EAAGA,IACrC,IAAK,IAAI5X,EAAI,EAAGA,EA9WN,EA8WqBA,IAC7BsC,KAAKiZ,MA/WG,GA+WI2B,EAAUtF,GAAoB5X,GAAKod,EA/WvC,GA+WgDH,EAASrF,GAAoB5X,QAIzF,IAAS4X,EAAO,EAAGA,EAAOjV,EAAQiV,IAChC,IAAS5X,EAAI,EAAGA,EApXN,EAoXqBA,IAC7BsC,KAAKiZ,MArXG,GAqXI2B,EAAUtF,GAAoB5X,GAAKod,EArXvC,GAqXgDH,EAASrF,GAAoB5X,GAM3F,IAAMqd,EAAkBvc,OAAO2b,KAAKO,EAAI1B,WACxC,IAAStb,EAAI,EAAGA,EAAIqd,EAAgB1a,OAAQ3C,IAAK,CAC/C,IAAM2B,EAAMyK,SAASiR,EAAgBrd,GAAI,IACrC2B,GAAOsb,IACT3a,KAAKgZ,UAAU3Z,EAAMsb,EAASC,GAAWF,EAAI1B,UAAU3Z,MAKtD,YAAA2b,kBAAP,SAAyBC,EAA4BC,EAAsBC,QAAlD,IAAAF,OAAA,QAA4B,IAAAC,MAAA,QAAsB,IAAAC,MAAiBnb,KAAKK,QAC3F4a,IACFE,EAAS5R,KAAKsB,IAAIsQ,EAAQnb,KAAKwa,qBAGjC,IADA,IAAIxU,EAAS,GACNkV,EAAWC,GAAQ,CACxB,IAAMlY,EAAUjD,KAAKiZ,MA1YT,EA0YeiC,EAAuB,GAC5ChU,EAAe,QAAVjE,EACX+C,GAAqB,QAAV/C,EAAsCjD,KAAKgZ,UAAUkC,GAAY,EAAO,EAAAtX,oBAAoBsD,GAAM,EAAA1E,qBAC7G0Y,GAAajY,GAAW,IAAwB,EAElD,OAAO+C,GAEX,EAhXA,GAAa,EAAAuU,c,8EChDF,EAAAa,YAAc,iBAGd,EAAAC,cAAgB,kE,8ECGd,EAAAC,SAA+C,GAK/C,EAAAC,gBAAmC,EAAAD,SAAY,EAY5D,EAAAA,SAAS,GAAO,CACd,IAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EAAI,CACd,IAAK,KAOP,EAAAA,SAAY,EAAI,KAOhB,EAAAA,SAAS,GAAO,CACd,IAAK,IACL,IAAK,IACL,IAAK,KACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EACZ,EAAAA,SAAS,GAAO,CACd,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EAAI,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EAAI,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EAAI,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EAAI,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EACZ,EAAAA,SAAS,GAAO,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EAAI,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EACZ,EAAAA,SAAS,GAAO,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAS,KAAO,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IAEL,EAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,M,8ECvPP,IAuBA,aAyCE,WAAmBE,EAA+BC,GAChD,QADiB,IAAAD,MAAA,SAA+B,IAAAC,MAAA,IAA/B,KAAAD,YAA+B,KAAAC,qBAC5CA,EA/Dc,IAgEhB,MAAM,IAAIlD,MAAM,mDAElBvY,KAAK0b,OAAS,IAAIC,WAAWH,GAC7Bxb,KAAKK,OAAS,EACdL,KAAK4b,WAAa,IAAID,WAAWF,GACjCzb,KAAK6b,iBAAmB,EACxB7b,KAAK8b,cAAgB,IAAIC,YAAYP,GACrCxb,KAAKgc,eAAgB,EACrBhc,KAAKic,kBAAmB,EACxBjc,KAAKkc,aAAc,EAkJvB,OApLgB,EAAAC,UAAd,SAAwBC,GACtB,IAAMV,EAAS,IAAIW,EACnB,IAAKD,EAAO/b,OACV,OAAOqb,EAGT,IAAK,IAAIhe,EAAK0e,EAAO,aAAcE,MAAS,EAAI,EAAG5e,EAAI0e,EAAO/b,SAAU3C,EAAG,CACzE,IAAMqB,EAAQqd,EAAO1e,GACrB,GAAIqB,aAAiBud,MACnB,IAAK,IAAIC,EAAI,EAAGA,EAAIxd,EAAMsB,SAAUkc,EAClCb,EAAOc,YAAYzd,EAAMwd,SAG3Bb,EAAOe,SAAS1d,GAGpB,OAAO2c,GAwBF,YAAApX,MAAP,WACE,IAAMoY,EAAY,IAAIL,EAAOrc,KAAKwb,UAAWxb,KAAKyb,oBASlD,OARAiB,EAAUhB,OAAOlD,IAAIxY,KAAK0b,QAC1BgB,EAAUrc,OAASL,KAAKK,OACxBqc,EAAUd,WAAWpD,IAAIxY,KAAK4b,YAC9Bc,EAAUb,iBAAmB7b,KAAK6b,iBAClCa,EAAUZ,cAActD,IAAIxY,KAAK8b,eACjCY,EAAUV,cAAgBhc,KAAKgc,cAC/BU,EAAUT,iBAAmBjc,KAAKic,iBAClCS,EAAUR,YAAclc,KAAKkc,YACtBQ,GASF,YAAAC,QAAP,WAEE,IADA,IAAMC,EAAmB,GAChBlf,EAAI,EAAGA,EAAIsC,KAAKK,SAAU3C,EAAG,CACpCkf,EAAIzc,KAAKH,KAAK0b,OAAOhe,IACrB,IAAMoI,EAAQ9F,KAAK8b,cAAcpe,IAAM,EACjCqI,EAA8B,IAAxB/F,KAAK8b,cAAcpe,GAC3BqI,EAAMD,EAAQ,GAChB8W,EAAIzc,KAAKmc,MAAM5c,UAAUqK,MAAM9L,KAAK+B,KAAK4b,WAAY9V,EAAOC,IAGhE,OAAO6W,GAMF,YAAAC,MAAP,WACE7c,KAAKK,OAAS,EACdL,KAAK6b,iBAAmB,EACxB7b,KAAKgc,eAAgB,EACrBhc,KAAKic,kBAAmB,EACxBjc,KAAKkc,aAAc,GAUd,YAAAO,SAAP,SAAgB1d,GAEd,GADAiB,KAAKkc,aAAc,EACflc,KAAKK,QAAUL,KAAKwb,UACtBxb,KAAKgc,eAAgB,MADvB,CAIA,GAAIjd,GAAS,EACX,MAAM,IAAIwZ,MAAM,yCAElBvY,KAAK8b,cAAc9b,KAAKK,QAAUL,KAAK6b,kBAAoB,EAAI7b,KAAK6b,iBACpE7b,KAAK0b,OAAO1b,KAAKK,UAAYtB,EA7If,sBA6I+CA,IAUxD,YAAAyd,YAAP,SAAmBzd,GAEjB,GADAiB,KAAKkc,aAAc,EACdlc,KAAKK,OAGV,GAAIL,KAAKgc,eAAiBhc,KAAK6b,kBAAoB7b,KAAKyb,mBACtDzb,KAAKic,kBAAmB,MAD1B,CAIA,GAAIld,GAAS,EACX,MAAM,IAAIwZ,MAAM,yCAElBvY,KAAK4b,WAAW5b,KAAK6b,oBAAsB9c,EAnK7B,sBAmK6DA,EAC3EiB,KAAK8b,cAAc9b,KAAKK,OAAS,OAM5B,YAAAyc,aAAP,SAAoBC,GAClB,OAAmC,IAA1B/c,KAAK8b,cAAciB,KAAgB/c,KAAK8b,cAAciB,IAAQ,GAAK,GAQvE,YAAAC,aAAP,SAAoBD,GAClB,IAAMjX,EAAQ9F,KAAK8b,cAAciB,IAAQ,EACnChX,EAAgC,IAA1B/F,KAAK8b,cAAciB,GAC/B,OAAIhX,EAAMD,EAAQ,EACT9F,KAAK4b,WAAW1B,SAASpU,EAAOC,GAElC,MAOF,YAAAkX,gBAAP,WAEE,IADA,IAAMjX,EAAsC,GACnCtI,EAAI,EAAGA,EAAIsC,KAAKK,SAAU3C,EAAG,CACpC,IAAMoI,EAAQ9F,KAAK8b,cAAcpe,IAAM,EACjCqI,EAA8B,IAAxB/F,KAAK8b,cAAcpe,GAC3BqI,EAAMD,EAAQ,IAChBE,EAAOtI,GAAKsC,KAAK4b,WAAW7R,MAAMjE,EAAOC,IAG7C,OAAOC,GAOF,YAAAkX,SAAP,SAAgBne,GACd,IAAIsB,EACJ,KAAIL,KAAKgc,iBACF3b,EAASL,KAAKkc,YAAclc,KAAK6b,iBAAmB7b,KAAKK,SAC1DL,KAAKkc,aAAelc,KAAKic,kBAF/B,CAOA,IAAMkB,EAAQnd,KAAKkc,YAAclc,KAAK4b,WAAa5b,KAAK0b,OAClD0B,EAAMD,EAAM9c,EAAS,GAC3B8c,EAAM9c,EAAS,IAAM+c,EAAM7T,KAAKsB,IAAU,GAANuS,EAAWre,EA3NjC,YA2NqDA,IAEvE,EAtMA,GAAa,EAAAsd,U,8ECxBb,YACA,OAIA,0BACU,KAAAgB,OAAS,EACT,KAAAC,KAAO,EACP,KAAAC,UAA6C/e,OAAOY,OAAO,MAC3D,KAAAoe,WAAqC,aAoJ/C,OAlJS,YAAAC,WAAP,SAAkBC,EAAehW,QACD/G,IAA1BX,KAAKud,UAAUG,KACjB1d,KAAKud,UAAUG,GAAS,IAE1B,IAAMC,EAAc3d,KAAKud,UAAUG,GAEnC,OADAC,EAAYxd,KAAKuH,GACV,CACLtH,QAAS,WACP,IAAMwd,EAAeD,EAAY9b,QAAQ6F,IACnB,IAAlBkW,GACFD,EAAYrd,OAAOsd,EAAc,MAKlC,YAAAC,WAAP,SAAkBH,EAAehW,GAC/B1H,KAAKud,UAAUG,GAAS,CAAChW,IAEpB,YAAAoW,aAAP,SAAoBJ,GACd1d,KAAKud,UAAUG,WAAe1d,KAAKud,UAAUG,IAE5C,YAAAK,mBAAP,SAA0BrW,GACxB1H,KAAKwd,WAAa9V,GAGb,YAAAtH,QAAP,WACEJ,KAAKud,UAAY/e,OAAOY,OAAO,MAC/BY,KAAKwd,WAAa,cAGb,YAAAX,MAAP,WAEsB,IAAhB7c,KAAKqd,QACPrd,KAAK+F,KAAI,GAEX/F,KAAKsd,KAAO,EACZtd,KAAKqd,OAAS,GAGR,YAAAW,OAAR,WACE,IAAMC,EAAWje,KAAKud,UAAUvd,KAAKsd,KACrC,GAAKW,EAGH,IAAK,IAAIC,EAAID,EAAS5d,OAAS,EAAG6d,GAAK,EAAGA,IACxCD,EAASC,GAAGpY,aAHd9F,KAAKwd,WAAWxd,KAAKsd,IAAK,UAQtB,YAAAa,KAAR,SAAatY,EAAmBC,EAAeC,GAC7C,IAAMkY,EAAWje,KAAKud,UAAUvd,KAAKsd,KACrC,GAAKW,EAGH,IAAK,IAAIC,EAAID,EAAS5d,OAAS,EAAG6d,GAAK,EAAGA,IACxCD,EAASC,GAAGE,IAAIvY,EAAMC,EAAOC,QAH/B/F,KAAKwd,WAAWxd,KAAKsd,IAAK,MAAO,EAAAe,cAAcxY,EAAMC,EAAOC,KAQxD,YAAAuY,KAAR,SAAaC,GAIX,IAAMN,EAAWje,KAAKud,UAAUvd,KAAKsd,KACrC,GAAKW,EAEE,CAEL,IADA,IAAIC,EAAID,EAAS5d,OAAS,EACnB6d,GAAK,IACuB,IAA7BD,EAASC,GAAGnY,IAAIwY,GADPL,KAOf,IAFAA,IAEOA,GAAK,EAAGA,IACbD,EAASC,GAAGnY,KAAI,QAXlB/F,KAAKwd,WAAWxd,KAAKsd,IAAK,MAAOiB,IAgB9B,YAAAzY,MAAP,WAEE9F,KAAK6c,QACL7c,KAAKsd,KAAO,EACZtd,KAAKqd,OAAS,GAUT,YAAAe,IAAP,SAAWvY,EAAmBC,EAAeC,GAC3C,GAAoB,IAAhB/F,KAAKqd,OAAT,CAGA,GAAoB,IAAhBrd,KAAKqd,OACP,KAAOvX,EAAQC,GAAK,CAClB,IAAM/B,EAAO6B,EAAKC,KAClB,GAAa,KAAT9B,EAAe,CACjBhE,KAAKqd,OAAS,EACdrd,KAAKge,SACL,MAEF,GAAIha,EAAO,IAAQ,GAAOA,EAExB,YADAhE,KAAKqd,OAAS,IAGE,IAAdrd,KAAKsd,MACPtd,KAAKsd,IAAM,GAEbtd,KAAKsd,IAAiB,GAAXtd,KAAKsd,IAAWtZ,EAAO,GAGlB,IAAhBhE,KAAKqd,QAA+BtX,EAAMD,EAAQ,GACpD9F,KAAKme,KAAKtY,EAAMC,EAAOC,KASpB,YAAAA,IAAP,SAAWwY,GACW,IAAhBve,KAAKqd,SAIW,IAAhBrd,KAAKqd,SAIa,IAAhBrd,KAAKqd,QACPrd,KAAKge,SAEPhe,KAAKse,KAAKC,IAEZve,KAAKsd,KAAO,EACZtd,KAAKqd,OAAS,IAElB,EAxJA,GAAa,EAAAmB,YA8Jb,iBAIE,WAAoBC,GAAA,KAAAA,WAHZ,KAAAxF,MAAQ,GACR,KAAAyF,WAAqB,EA+B/B,OA3BS,YAAA5Y,MAAP,WACE9F,KAAKiZ,MAAQ,GACbjZ,KAAK0e,WAAY,GAGZ,YAAAN,IAAP,SAAWvY,EAAmBC,EAAeC,GACvC/F,KAAK0e,YAGT1e,KAAKiZ,OAAS,EAAAoF,cAAcxY,EAAMC,EAAOC,GACrC/F,KAAKiZ,MAAM5Y,OAAS,EAAAse,gBACtB3e,KAAKiZ,MAAQ,GACbjZ,KAAK0e,WAAY,KAId,YAAA3Y,IAAP,SAAWwY,GACT,IAAIK,EAQJ,OAPI5e,KAAK0e,UACPE,GAAM,EACGL,IACTK,EAAM5e,KAAKye,SAASze,KAAKiZ,QAE3BjZ,KAAKiZ,MAAQ,GACbjZ,KAAK0e,WAAY,EACVE,GAEX,EAjCA,GAAa,EAAAC,c,8EChHA,EAAAF,cAAgB,K,8EClD7B,WACA,QACA,QAEMG,EAAgC,GAEtC,0BACU,KAAAvB,UAA6C/e,OAAOY,OAAO,MAC3D,KAAA2f,QAAyBD,EACzB,KAAAE,OAAiB,EACjB,KAAAxB,WAAqC,aAsF/C,OApFS,YAAApd,QAAP,WACEJ,KAAKud,UAAY/e,OAAOY,OAAO,MAC/BY,KAAKwd,WAAa,cAGb,YAAAC,WAAP,SAAkBC,EAAehW,QACD/G,IAA1BX,KAAKud,UAAUG,KACjB1d,KAAKud,UAAUG,GAAS,IAE1B,IAAMC,EAAc3d,KAAKud,UAAUG,GAEnC,OADAC,EAAYxd,KAAKuH,GACV,CACLtH,QAAS,WACP,IAAMwd,EAAeD,EAAY9b,QAAQ6F,IACnB,IAAlBkW,GACFD,EAAYrd,OAAOsd,EAAc,MAMlC,YAAAC,WAAP,SAAkBH,EAAehW,GAC/B1H,KAAKud,UAAUG,GAAS,CAAChW,IAGpB,YAAAoW,aAAP,SAAoBJ,GACd1d,KAAKud,UAAUG,WAAe1d,KAAKud,UAAUG,IAG5C,YAAAK,mBAAP,SAA0BrW,GACxB1H,KAAKwd,WAAa9V,GAGb,YAAAmV,MAAP,WACM7c,KAAK+e,QAAQ1e,QACfL,KAAKif,QAAO,GAEdjf,KAAK+e,QAAUD,EACf9e,KAAKgf,OAAS,GAGT,YAAAE,KAAP,SAAYxB,EAAehC,GAKzB,GAHA1b,KAAK6c,QACL7c,KAAKgf,OAAStB,EACd1d,KAAK+e,QAAU/e,KAAKud,UAAUG,IAAUoB,EACnC9e,KAAK+e,QAAQ1e,OAGhB,IAAK,IAAI6d,EAAIle,KAAK+e,QAAQ1e,OAAS,EAAG6d,GAAK,EAAGA,IAC5Cle,KAAK+e,QAAQb,GAAGgB,KAAKxD,QAHvB1b,KAAKwd,WAAWxd,KAAKgf,OAAQ,OAAQtD,IAQlC,YAAA0C,IAAP,SAAWvY,EAAmBC,EAAeC,GAC3C,GAAK/F,KAAK+e,QAAQ1e,OAGhB,IAAK,IAAI6d,EAAIle,KAAK+e,QAAQ1e,OAAS,EAAG6d,GAAK,EAAGA,IAC5Cle,KAAK+e,QAAQb,GAAGE,IAAIvY,EAAMC,EAAOC,QAHnC/F,KAAKwd,WAAWxd,KAAKgf,OAAQ,MAAO,EAAAX,cAAcxY,EAAMC,EAAOC,KAQ5D,YAAAkZ,OAAP,SAAcV,GACZ,GAAKve,KAAK+e,QAAQ1e,OAEX,CAEL,IADA,IAAI6d,EAAIle,KAAK+e,QAAQ1e,OAAS,EACvB6d,GAAK,IAC8B,IAApCle,KAAK+e,QAAQb,GAAGe,OAAOV,GADdL,KAOf,IAFAA,IAEOA,GAAK,EAAGA,IACble,KAAK+e,QAAQb,GAAGe,QAAO,QAXzBjf,KAAKwd,WAAWxd,KAAKgf,OAAQ,SAAUT,GAczCve,KAAK+e,QAAUD,EACf9e,KAAKgf,OAAS,GAElB,EA1FA,GAAa,EAAAG,YAgGb,iBAKE,WAAoBV,GAAA,KAAAA,WAJZ,KAAAxF,MAAQ,GAER,KAAAyF,WAAqB,EAiC/B,OA7BS,YAAAQ,KAAP,SAAYxD,GACV1b,KAAKof,QAAU1D,EAAOpX,QACtBtE,KAAKiZ,MAAQ,GACbjZ,KAAK0e,WAAY,GAGZ,YAAAN,IAAP,SAAWvY,EAAmBC,EAAeC,GACvC/F,KAAK0e,YAGT1e,KAAKiZ,OAAS,EAAAoF,cAAcxY,EAAMC,EAAOC,GACrC/F,KAAKiZ,MAAM5Y,OAAS,EAAAse,gBACtB3e,KAAKiZ,MAAQ,GACbjZ,KAAK0e,WAAY,KAId,YAAAO,OAAP,SAAcV,GACZ,IAAIK,EASJ,OARI5e,KAAK0e,UACPE,GAAM,EACGL,IACTK,EAAM5e,KAAKye,SAASze,KAAKiZ,MAAOjZ,KAAKof,QAAUpf,KAAKof,QAAU,IAAI,EAAA/C,SAEpErc,KAAKof,aAAUze,EACfX,KAAKiZ,MAAQ,GACbjZ,KAAK0e,WAAY,EACVE,GAEX,EApCA,GAAa,EAAAS,c,8ECxGb,YAEA,QAaMC,EAAyC,GAM/C,4BACE9L,EACA+L,EACAC,EACA3L,EACAC,GAKA,IAHA,IAAM2L,EAAY,EAAAC,eAAe7L,EAAiBC,EAAkBN,EAASgM,GAGpE9hB,EAAI,EAAGA,EAAI4hB,EAAejf,OAAQ3C,IAAK,CAC9C,IACMiiB,GADAC,EAAQN,EAAe5hB,IACFmiB,QAAQhe,QAAQ0d,GAC3C,GAAII,GAAgB,EAAG,CACrB,GAAI,EAAAG,aAAaF,EAAMG,OAAQN,GAC7B,OAAOG,EAAMI,MAGc,IAAzBJ,EAAMC,QAAQxf,QAChBuf,EAAMI,MAAM5f,UACZkf,EAAehf,OAAO5C,EAAG,IAEzBkiB,EAAMC,QAAQvf,OAAOqf,EAAc,GAErC,OAKJ,IAASjiB,EAAI,EAAGA,EAAI4hB,EAAejf,OAAQ3C,IAAK,CAC9C,IAAMkiB,EAAQN,EAAe5hB,GAC7B,GAAI,EAAAoiB,aAAaF,EAAMG,OAAQN,GAG7B,OADAG,EAAMC,QAAQ1f,KAAKof,GACZK,EAAMI,MAIjB,IAAMC,EAAiC,CACrCD,MAAO,IAAI,EAAAE,iBACT1O,SACAiO,GAEFM,OAAQN,EACRI,QAAS,CAACN,IAGZ,OADAD,EAAenf,KAAK8f,GACbA,EAASD,OAMlB,mCAAwCT,GACtC,IAAK,IAAI7hB,EAAI,EAAGA,EAAI4hB,EAAejf,OAAQ3C,IAAK,CAC9C,IAAMkE,EAAQ0d,EAAe5hB,GAAGmiB,QAAQhe,QAAQ0d,GAChD,IAAe,IAAX3d,EAAc,CACyB,IAArC0d,EAAe5hB,GAAGmiB,QAAQxf,QAE5Bif,EAAe5hB,GAAGsiB,MAAM5f,UACxBkf,EAAehf,OAAO5C,EAAG,IAGzB4hB,EAAe5hB,GAAGmiB,QAAQvf,OAAOsB,EAAO,GAE1C,U,8ECrFN,WAIA,0BAA+BiS,EAAyBC,EAA0BN,EAA2BgM,GAE3G,IAAMW,EAAiC,CACrC7J,WAAYkJ,EAAOlJ,WACnBnB,WAAYqK,EAAOrK,WACnBiL,YAAQzf,EACR0f,kBAAc1f,EACd2f,eAAW3f,EAGX0V,KAAMmJ,EAAOnJ,KAAKtM,MAAM,EAAG,KAE7B,MAAO,CACL6K,iBAAkBjX,OAAOiX,iBACzBf,gBAAe,EACfC,iBAAgB,EAChBkD,WAAYxD,EAAQwD,WACpBD,SAAUvD,EAAQuD,SAClBD,WAAYtD,EAAQsD,WACpBD,eAAgBrD,EAAQqD,eACxB0J,kBAAmB/M,EAAQ+M,kBAC3Bf,OAAQW,IAIZ,wBAA6B1iB,EAAqBmL,GAChD,IAAK,IAAIlL,EAAI,EAAGA,EAAID,EAAE+hB,OAAOnJ,KAAKhW,OAAQ3C,IACxC,GAAID,EAAE+hB,OAAOnJ,KAAK3Y,GAAG0K,OAASQ,EAAE4W,OAAOnJ,KAAK3Y,GAAG0K,KAC7C,OAAO,EAGX,OAAO3K,EAAEmX,mBAAqBhM,EAAEgM,kBAC5BnX,EAAEuZ,aAAepO,EAAEoO,YACnBvZ,EAAEsZ,WAAanO,EAAEmO,UACjBtZ,EAAEqZ,aAAelO,EAAEkO,YACnBrZ,EAAEoZ,iBAAmBjO,EAAEiO,gBACvBpZ,EAAE8iB,oBAAsB3X,EAAE2X,mBAC1B9iB,EAAEoW,kBAAoBjL,EAAEiL,iBACxBpW,EAAEqW,mBAAqBlL,EAAEkL,kBACzBrW,EAAE+hB,OAAOlJ,aAAe1N,EAAE4W,OAAOlJ,YACjC7Y,EAAE+hB,OAAOrK,aAAevM,EAAE4W,OAAOrK,YAGvC,sBAA2BqL,GACzB,OAAOA,EAAY,EAAAze,gB,8EC/CrB,YACA,QAEM0e,EAAqB,EAAAzX,IAAIW,QAAQ,WACjC+W,EAAqB,EAAA1X,IAAIW,QAAQ,WACjCgX,EAAiB,EAAA3X,IAAIW,QAAQ,WAC7BiX,EAAwB,EAAA5X,IAAIW,QAAQ,WACpCkX,EAAoB,CACxB7X,IAAK,2BACLZ,KAAM,YAKK,EAAA0Y,oBAAsB,WAyBjC,IAxBA,IAAMtB,EAAS,CAEb,EAAAxW,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,WAEZ,EAAAX,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,YAKRoX,EAAI,CAAC,EAAM,GAAM,IAAM,IAAM,IAAM,KAChCrjB,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC5B,IAAMkB,EAAImiB,EAAGrjB,EAAI,GAAM,EAAI,GACrBiL,EAAIoY,EAAGrjB,EAAI,EAAK,EAAI,GACpBkL,EAAImY,EAAErjB,EAAI,GAChB8hB,EAAOrf,KAAK,CACV6I,IAAK,EAAAd,SAASQ,MAAM9J,EAAG+J,EAAGC,GAC1BR,KAAM,EAAAF,SAASW,OAAOjK,EAAG+J,EAAGC,KAKhC,IAASlL,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAMS,EAAI,EAAQ,GAAJT,EACd8hB,EAAOrf,KAAK,CACV6I,IAAK,EAAAd,SAASQ,MAAMvK,EAAGA,EAAGA,GAC1BiK,KAAM,EAAAF,SAASW,OAAO1K,EAAGA,EAAGA,KAIhC,OAAOqhB,EA5C0B,GAkDnC,iBAME,WAAYhO,EAA2B+O,GAAA,KAAAA,oBACrC,IAAMS,EAASxP,EAASC,cAAc,UACtCuP,EAAO/M,MAAQ,EACf+M,EAAO7M,OAAS,EAChB,IAAM8M,EAAMD,EAAO7O,WAAW,MAC9B,IAAK8O,EACH,MAAM,IAAI1I,MAAM,mCAElBvY,KAAKiS,KAAOgP,EACZjhB,KAAKiS,KAAKiP,yBAA2B,OACrClhB,KAAKmhB,aAAenhB,KAAKiS,KAAKmP,qBAAqB,EAAG,EAAG,EAAG,GAC5DphB,KAAKqhB,eAAiB,IAAI,EAAAC,mBAC1BthB,KAAKwf,OAAS,CACZlJ,WAAYmK,EACZtL,WAAYuL,EACZN,OAAQO,EACRN,aAAcO,EACdN,UAAWO,EACXU,gBAAiB,EAAAzY,MAAMC,MAAM2X,EAAoBG,GACjDxK,KAAM,EAAAyK,oBAAoB/W,QAC1BoN,cAAenX,KAAKqhB,gBA4G1B,OAxGS,YAAAG,gBAAP,SAAuBniB,GACT,yBAARA,GACFW,KAAKqhB,eAAelb,SASjB,YAAAsb,SAAP,SAAgBC,QAAA,IAAAA,MAAA,IACd1hB,KAAKwf,OAAOlJ,WAAatW,KAAK2hB,YAAYD,EAAMpL,WAAYmK,GAC5DzgB,KAAKwf,OAAOrK,WAAanV,KAAK2hB,YAAYD,EAAMvM,WAAYuL,GAC5D1gB,KAAKwf,OAAOY,OAASpgB,KAAK2hB,YAAYD,EAAMtB,OAAQO,GAAgB,GACpE3gB,KAAKwf,OAAOa,aAAergB,KAAK2hB,YAAYD,EAAMrB,aAAcO,GAAuB,GACvF5gB,KAAKwf,OAAOc,UAAYtgB,KAAK2hB,YAAYD,EAAMpB,UAAWO,GAAmB,GAC7E7gB,KAAKwf,OAAO+B,gBAAkB,EAAAzY,MAAMC,MAAM/I,KAAKwf,OAAOrK,WAAYnV,KAAKwf,OAAOc,WAC9EtgB,KAAKwf,OAAOnJ,KAAK,GAAKrW,KAAK2hB,YAAYD,EAAME,MAAO,EAAAd,oBAAoB,IACxE9gB,KAAKwf,OAAOnJ,KAAK,GAAKrW,KAAK2hB,YAAYD,EAAMG,IAAK,EAAAf,oBAAoB,IACtE9gB,KAAKwf,OAAOnJ,KAAK,GAAKrW,KAAK2hB,YAAYD,EAAMI,MAAO,EAAAhB,oBAAoB,IACxE9gB,KAAKwf,OAAOnJ,KAAK,GAAKrW,KAAK2hB,YAAYD,EAAMK,OAAQ,EAAAjB,oBAAoB,IACzE9gB,KAAKwf,OAAOnJ,KAAK,GAAKrW,KAAK2hB,YAAYD,EAAMM,KAAM,EAAAlB,oBAAoB,IACvE9gB,KAAKwf,OAAOnJ,KAAK,GAAKrW,KAAK2hB,YAAYD,EAAMO,QAAS,EAAAnB,oBAAoB,IAC1E9gB,KAAKwf,OAAOnJ,KAAK,GAAKrW,KAAK2hB,YAAYD,EAAMQ,KAAM,EAAApB,oBAAoB,IACvE9gB,KAAKwf,OAAOnJ,KAAK,GAAKrW,KAAK2hB,YAAYD,EAAMS,MAAO,EAAArB,oBAAoB,IACxE9gB,KAAKwf,OAAOnJ,KAAK,GAAKrW,KAAK2hB,YAAYD,EAAMU,YAAa,EAAAtB,oBAAoB,IAC9E9gB,KAAKwf,OAAOnJ,KAAK,GAAKrW,KAAK2hB,YAAYD,EAAMW,UAAW,EAAAvB,oBAAoB,IAC5E9gB,KAAKwf,OAAOnJ,KAAK,IAAMrW,KAAK2hB,YAAYD,EAAMY,YAAa,EAAAxB,oBAAoB,KAC/E9gB,KAAKwf,OAAOnJ,KAAK,IAAMrW,KAAK2hB,YAAYD,EAAMa,aAAc,EAAAzB,oBAAoB,KAChF9gB,KAAKwf,OAAOnJ,KAAK,IAAMrW,KAAK2hB,YAAYD,EAAMc,WAAY,EAAA1B,oBAAoB,KAC9E9gB,KAAKwf,OAAOnJ,KAAK,IAAMrW,KAAK2hB,YAAYD,EAAMe,cAAe,EAAA3B,oBAAoB,KACjF9gB,KAAKwf,OAAOnJ,KAAK,IAAMrW,KAAK2hB,YAAYD,EAAMgB,WAAY,EAAA5B,oBAAoB,KAC9E9gB,KAAKwf,OAAOnJ,KAAK,IAAMrW,KAAK2hB,YAAYD,EAAMiB,YAAa,EAAA7B,oBAAoB,KAE/E9gB,KAAKqhB,eAAelb,SAGd,YAAAwb,YAAR,SACE3Y,EACA4Z,EACArC,GAEA,QAFA,IAAAA,MAA6BvgB,KAAKugB,wBAEtB5f,IAARqI,EACF,OAAO4Z,EAQT,GAFA5iB,KAAKiS,KAAKiD,UAAYlV,KAAKmhB,aAC3BnhB,KAAKiS,KAAKiD,UAAYlM,EACa,iBAAxBhJ,KAAKiS,KAAKiD,UAEnB,OADA2N,QAAQC,KAAK,UAAU9Z,EAAG,8BAA8B4Z,EAAS5Z,KAC1D4Z,EAGT5iB,KAAKiS,KAAKyC,SAAS,EAAG,EAAG,EAAG,GAC5B,IAAM7O,EAAO7F,KAAKiS,KAAK8Q,aAAa,EAAG,EAAG,EAAG,GAAGld,KAGhD,GAAgB,MAAZA,EAAK,GAAa,CACpB,IAAK0a,EAqBH,OAJAsC,QAAQC,KACN,UAAU9Z,EAAG,0EACK4Z,EAAS5Z,IAAG,KAEzB4Z,EAKH,oHAAChkB,EAAA,KAAG+J,EAAA,KAAGC,EAAA,KAAGnL,EAAA,KACV2U,EAAQ7I,KAAKC,MAAU,IAAJ/L,GAEzB,MAAO,CACL2K,KAFmB,EAAAF,SAASW,OAAOjK,EAAG+J,EAAGC,EAAGwJ,GAG5CpJ,IAAG,GAIP,MAAO,CAGLA,IAAKhJ,KAAKiS,KAAKiD,UACf9M,KAAM,EAAAF,SAASW,OAAOhD,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,MAG5D,EAtIA,GAAa,EAAAmd,gB,8EClEb,wBAAgCjkB,GAC9B,IAAKA,EACH,MAAM,IAAIwZ,MAAM,2BAElB,OAAOxZ,I,8ZCFT,WACA,OACA,OAGA,cASE,WAAYkkB,EAAsB9R,EAAe8C,GAAjD,MACE,cAAO,K,OANF,EAAAhR,QAAkB,EAGlB,EAAAG,aAAuB,GAI5B,EAAKF,GAAK+f,EAAU/f,GACpB,EAAKC,GAAK8f,EAAU9f,GACpB,EAAKC,aAAe+N,EACpB,EAAK+R,OAASjP,E,EA6BlB,OA3CoC,OAiB3B,YAAAxQ,WAAP,WAEE,OAAO,SAGF,YAAAC,SAAP,WACE,OAAO1D,KAAKkjB,QAGP,YAAAvf,SAAP,WACE,OAAO3D,KAAKoD,cAGP,YAAAS,QAAP,WAGE,OAAO,SAGF,YAAAL,gBAAP,SAAuBzE,GACrB,MAAM,IAAIwZ,MAAM,oBAGX,YAAArU,cAAP,WACE,MAAO,CAAClE,KAAKkD,GAAIlD,KAAK2D,WAAY3D,KAAK0D,WAAY1D,KAAK6D,YAE5D,EA3CA,CAAoC,EAAAM,eAAvB,EAAAgf,iBA6Cb,iBAME,WAAoBzS,GAAA,KAAAA,iBAJZ,KAAA0S,kBAAwC,GACxC,KAAAC,uBAAiC,EACjC,KAAAC,UAAsB,IAAI,EAAA/f,SAwQpC,OApQS,YAAAggB,wBAAP,SAA+B7b,GAC7B,IAAM8b,EAA2B,CAC/BnT,GAAIrQ,KAAKqjB,yBACT3b,QAAO,GAIT,OADA1H,KAAKojB,kBAAkBjjB,KAAKqjB,GACrBA,EAAOnT,IAGT,YAAAoT,0BAAP,SAAiCC,GAC/B,IAAK,IAAIhmB,EAAI,EAAGA,EAAIsC,KAAKojB,kBAAkB/iB,OAAQ3C,IACjD,GAAIsC,KAAKojB,kBAAkB1lB,GAAG2S,KAAOqT,EAEnC,OADA1jB,KAAKojB,kBAAkB9iB,OAAO5C,EAAG,IAC1B,EAIX,OAAO,GAGF,YAAAimB,oBAAP,SAA2BC,GACzB,GAAsC,IAAlC5jB,KAAKojB,kBAAkB/iB,OACzB,MAAO,GAGT,IAAMga,EAAOra,KAAK0Q,eAAemT,OAAOC,MAAMnlB,IAAIilB,GAClD,IAAKvJ,GAAwB,IAAhBA,EAAKha,OAChB,MAAO,GAgBT,IAbA,IAAM0jB,EAA6B,GAC7BC,EAAU3J,EAAKW,mBAAkB,GAMnCiJ,EAAmB,EACnBC,EAAqB,EACrBC,EAAwB,EACxBC,EAAc/J,EAAKhB,MAAM,GACzBgL,EAAchK,EAAKf,MAAM,GAEpB9E,EAAI,EAAGA,EAAI6F,EAAKG,mBAAoBhG,IAG3C,GAFA6F,EAAKX,SAASlF,EAAGxU,KAAKsjB,WAEY,IAA9BtjB,KAAKsjB,UAAU5f,WAAnB,CAMA,GAAI1D,KAAKsjB,UAAUpgB,KAAOkhB,GAAepkB,KAAKsjB,UAAUngB,KAAOkhB,EAAa,CAG1E,GAAI7P,EAAIyP,EAAmB,EAQzB,IAPA,IAAMK,EAAetkB,KAAKukB,iBACxBP,EACAG,EACAD,EACA7J,EACA4J,GAEOvmB,EAAI,EAAGA,EAAI4mB,EAAajkB,OAAQ3C,IACvCqmB,EAAO5jB,KAAKmkB,EAAa5mB,IAK7BumB,EAAmBzP,EACnB2P,EAAwBD,EACxBE,EAAcpkB,KAAKsjB,UAAUpgB,GAC7BmhB,EAAcrkB,KAAKsjB,UAAUngB,GAG/B+gB,GAAsBlkB,KAAKsjB,UAAU3f,WAAWtD,QAAU,EAAAmC,qBAAqBnC,OAIjF,GAAIL,KAAK0Q,eAAeiG,KAAOsN,EAAmB,EAQhD,IAPMK,EAAetkB,KAAKukB,iBACxBP,EACAG,EACAD,EACA7J,EACA4J,GAEOvmB,EAAI,EAAGA,EAAI4mB,EAAajkB,OAAQ3C,IACvCqmB,EAAO5jB,KAAKmkB,EAAa5mB,IAI7B,OAAOqmB,GAWD,YAAAQ,iBAAR,SAAyBlK,EAAcV,EAAoB6K,EAAkBC,EAAuBvJ,GAMlG,IALA,IAAMwJ,EAAOrK,EAAKsK,UAAUhL,EAAY6K,GAIlCF,EAAmCtkB,KAAKojB,kBAAkB,GAAG1b,QAAQgd,GAClEhnB,EAAI,EAAGA,EAAIsC,KAAKojB,kBAAkB/iB,OAAQ3C,IAGjD,IADA,IAAMknB,EAAe5kB,KAAKojB,kBAAkB1lB,GAAGgK,QAAQgd,GAC9CxG,EAAI,EAAGA,EAAI0G,EAAavkB,OAAQ6d,IACvC2G,EAAwBC,aAAaR,EAAcM,EAAa1G,IAIpE,OADAle,KAAK+kB,0BAA0BT,EAAcG,EAAUvJ,GAChDoJ,GAWD,YAAAS,0BAAR,SAAkChB,EAA4B1J,EAAmBa,GAC/E,IAAI8J,EAAoB,EACpBC,GAAsB,EACtBf,EAAqB,EACrBgB,EAAenB,EAAOiB,GAG1B,GAAKE,EAAL,CAIA,IAAK,IAAI1Q,EAAI0G,EAAU1G,EAAIxU,KAAK0Q,eAAeiG,KAAMnC,IAAK,CACxD,IAAMP,EAAQoG,EAAK3W,SAAS8Q,GACtB,EAAS6F,EAAKZ,UAAUjF,GAAGnU,QAAU,EAAAmC,qBAAqBnC,OAIhE,GAAc,IAAV4T,EAAJ,CAWA,IANKgR,GAAuBC,EAAa,IAAMhB,IAC7CgB,EAAa,GAAK1Q,EAClByQ,GAAsB,GAIpBC,EAAa,IAAMhB,EAAoB,CAOzC,GANAgB,EAAa,GAAK1Q,IAGlB0Q,EAAenB,IAASiB,IAItB,MAOEE,EAAa,IAAMhB,GACrBgB,EAAa,GAAK1Q,EAClByQ,GAAsB,GAEtBA,GAAsB,EAM1Bf,GAAsB,GAKpBgB,IACFA,EAAa,GAAKllB,KAAK0Q,eAAeiG,QAY3B,EAAAmO,aAAf,SAA4Bf,EAA4BoB,GAEtD,IADA,IAAIC,GAAU,EACL1nB,EAAI,EAAGA,EAAIqmB,EAAO1jB,OAAQ3C,IAAK,CACtC,IAAM2nB,EAAQtB,EAAOrmB,GACrB,GAAK0nB,EAAL,CAwBE,GAAID,EAAS,IAAME,EAAM,GAIvB,OADAtB,EAAOrmB,EAAI,GAAG,GAAKynB,EAAS,GACrBpB,EAGT,GAAIoB,EAAS,IAAME,EAAM,GAKvB,OAFAtB,EAAOrmB,EAAI,GAAG,GAAK6L,KAAKmB,IAAIya,EAAS,GAAIE,EAAM,IAC/CtB,EAAOzjB,OAAO5C,EAAG,GACVqmB,EAKTA,EAAOzjB,OAAO5C,EAAG,GACjBA,QA1CF,CACE,GAAIynB,EAAS,IAAME,EAAM,GAGvB,OADAtB,EAAOzjB,OAAO5C,EAAG,EAAGynB,GACbpB,EAGT,GAAIoB,EAAS,IAAME,EAAM,GAIvB,OADAA,EAAM,GAAK9b,KAAKsB,IAAIsa,EAAS,GAAIE,EAAM,IAChCtB,EAGLoB,EAAS,GAAKE,EAAM,KAGtBA,EAAM,GAAK9b,KAAKsB,IAAIsa,EAAS,GAAIE,EAAM,IACvCD,GAAU,IAoChB,OARIA,EAEFrB,EAAOA,EAAO1jB,OAAS,GAAG,GAAK8kB,EAAS,GAGxCpB,EAAO5jB,KAAKglB,GAGPpB,GAEX,EA5QA,GAAa,EAAAc,2B,6BCpDb,SAAgBS,EAA2BC,EAA2CC,GACpF,IAAM9O,EAAO8O,EAAQC,wBACrB,MAAO,CAACF,EAAMG,QAAUhP,EAAKiP,KAAMJ,EAAMK,QAAUlP,EAAKmP,K,iDAF1D,+BAiBA,qBAA0BN,EAA2CC,EAAsBM,EAAkBC,EAAkBC,EAA2BC,EAAyBC,EAA0BC,GAE3M,GAAKH,EAAL,CAIA,IAAMI,EAASd,EAA2BC,EAAOC,GACjD,GAAKY,EAaL,OATAA,EAAO,GAAK7c,KAAKoB,MAAMyb,EAAO,IAAMD,EAAcF,EAAkB,EAAI,IAAMA,GAC9EG,EAAO,GAAK7c,KAAKoB,KAAKyb,EAAO,GAAKF,GAKlCE,EAAO,GAAK7c,KAAKsB,IAAItB,KAAKmB,IAAI0b,EAAO,GAAI,GAAIN,GAAYK,EAAc,EAAI,IAC3EC,EAAO,GAAK7c,KAAKsB,IAAItB,KAAKmB,IAAI0b,EAAO,GAAI,GAAIL,GAEtCK,IAQT,4BAAiCA,GAC/B,GAAKA,EAKL,MAAO,CAAE5R,EAAG4R,EAAO,GAAK,GAAI3R,EAAG2R,EAAO,GAAK,M,8EC9C7C,iBAME,WACUC,GAAA,KAAAA,kBA6CZ,OAzCS,YAAAjmB,QAAP,WACMJ,KAAKsmB,kBACP3oB,OAAO4oB,qBAAqBvmB,KAAKsmB,iBACjCtmB,KAAKsmB,qBAAkB3lB,IAIpB,YAAA6lB,QAAP,SAAeC,EAAkBC,EAAgBX,GAAjD,WACE/lB,KAAK2mB,UAAYZ,EAEjBU,OAAwB9lB,IAAb8lB,EAAyBA,EAAW,EAC/CC,OAAoB/lB,IAAX+lB,EAAuBA,EAAS1mB,KAAK2mB,UAAY,EAE1D3mB,KAAK4mB,eAA+BjmB,IAAnBX,KAAK4mB,UAA0Brd,KAAKsB,IAAI7K,KAAK4mB,UAAWH,GAAYA,EACrFzmB,KAAK6mB,aAA2BlmB,IAAjBX,KAAK6mB,QAAwBtd,KAAKmB,IAAI1K,KAAK6mB,QAASH,GAAUA,EAEzE1mB,KAAKsmB,kBAITtmB,KAAKsmB,gBAAkB3oB,OAAOmpB,uBAAsB,WAAM,SAAKC,qBAGzD,YAAAA,cAAR,gBAEyBpmB,IAAnBX,KAAK4mB,gBAA4CjmB,IAAjBX,KAAK6mB,cAA4ClmB,IAAnBX,KAAK2mB,YAKvE3mB,KAAK4mB,UAAYrd,KAAKmB,IAAI1K,KAAK4mB,UAAW,GAC1C5mB,KAAK6mB,QAAUtd,KAAKsB,IAAI7K,KAAK6mB,QAAS7mB,KAAK2mB,UAAY,GAGvD3mB,KAAKqmB,gBAAgBrmB,KAAK4mB,UAAW5mB,KAAK6mB,SAG1C7mB,KAAK4mB,eAAYjmB,EACjBX,KAAK6mB,aAAUlmB,EACfX,KAAKsmB,qBAAkB3lB,IAE3B,EApDA,GAAa,EAAAqmB,mB,8ZCLb,IAcA,yE,OACU,EAAAC,yBAAmCtpB,OAAOiX,iB,EAgDpD,OAjDsC,OAM7B,YAAAsS,YAAP,SAAmBhnB,GAAnB,WACMF,KAAKmnB,WACPnnB,KAAKonB,gBAEPpnB,KAAKmnB,UAAYjnB,EACjBF,KAAKqnB,eAAiB,WACf,EAAKF,YAGV,EAAKA,UAAUxpB,OAAOiX,iBAAkB,EAAKqS,0BAC7C,EAAKK,eAEPtnB,KAAKsnB,cAGA,YAAAlnB,QAAP,WACE,YAAMA,QAAO,WACbJ,KAAKonB,iBAGC,YAAAE,WAAR,WACOtnB,KAAKunB,2BAA8BvnB,KAAKqnB,iBAK7CrnB,KAAKunB,0BAA0BC,eAAexnB,KAAKqnB,gBAGnDrnB,KAAKinB,yBAA2BtpB,OAAOiX,iBACvC5U,KAAKunB,0BAA4B5pB,OAAO8pB,WAAW,2BAA2B9pB,OAAOiX,iBAAgB,SACrG5U,KAAKunB,0BAA0BG,YAAY1nB,KAAKqnB,kBAG3C,YAAAD,cAAP,WACOpnB,KAAKunB,2BAA8BvnB,KAAKmnB,WAAcnnB,KAAKqnB,iBAGhErnB,KAAKunB,0BAA0BC,eAAexnB,KAAKqnB,gBACnDrnB,KAAKunB,+BAA4B5mB,EACjCX,KAAKmnB,eAAYxmB,EACjBX,KAAKqnB,oBAAiB1mB,IAE1B,EAjDA,CAdA,KAcsCmB,YAAzB,EAAA6lB,oB,8ECXb,iBAAgBrjB,EAASsjB,EAAQC,GAC/B,QAD+B,IAAAA,MAAA,GACZ,iBAARD,EACT,OAAOA,EAIT,IAAME,EAAoBxL,MAAMyL,QAAQH,GAAO,GAAK,GAEpD,IAAK,IAAMvoB,KAAOuoB,EAEhBE,EAAazoB,GAAOwoB,GAAS,EAAID,EAAIvoB,GAAQuoB,EAAIvoB,GAAOiF,EAAMsjB,EAAIvoB,GAAMwoB,EAAQ,GAAKD,EAAIvoB,GAG3F,OAAOyoB,I,8ECZT,WACA,QACA,QACA,OACA,QAGA,aAKE,WAAYtU,GACVxT,KAAKgoB,MAAQ,IAAI,EAAAC,SAAazU,GAC9BxT,KAAKkoB,cAAgB,IAAI,EAAAC,aAyK7B,OAtKE,sBAAW,2BAAY,C,IAAvB,WAA0C,OAAOnoB,KAAKgoB,MAAMvV,c,gCAC5D,sBAAW,yBAAU,C,IAArB,WAAwC,OAAOzS,KAAKgoB,MAAMI,Y,gCAC1D,sBAAW,gCAAiB,C,IAA5B,WAA+C,OAAOpoB,KAAKgoB,MAAMK,mB,gCACjE,sBAAW,qBAAM,C,IAAjB,WAAsC,OAAOroB,KAAKgoB,MAAMM,Q,gCACxD,sBAAW,uBAAQ,C,IAAnB,WAAwC,OAAOtoB,KAAKgoB,MAAMO,U,gCAC1D,sBAAW,4BAAa,C,IAAxB,WAA6C,OAAOvoB,KAAKgoB,MAAMQ,e,gCAC/D,sBAAW,uBAAQ,C,IAAnB,WAAwC,OAAOxoB,KAAKgoB,MAAMS,U,gCAC1D,sBAAW,oBAAK,C,IAAhB,WAAuE,OAAOzoB,KAAKgoB,MAAMU,O,gCACzF,sBAAW,uBAAQ,C,IAAnB,WAAgE,OAAO1oB,KAAKgoB,MAAMW,U,gCAClF,sBAAW,uBAAQ,C,IAAnB,WAAgE,OAAO3oB,KAAKgoB,MAAMY,U,gCAElF,sBAAW,sBAAO,C,IAAlB,WAAgD,OAAO5oB,KAAKgoB,MAAMxC,S,gCAClE,sBAAW,qBAAM,C,IAAjB,WAIE,OAHKxlB,KAAK6oB,UACR7oB,KAAK6oB,QAAU,IAAIC,EAAU9oB,KAAKgoB,QAE7BhoB,KAAK6oB,S,gCAEd,sBAAW,sBAAO,C,IAAlB,WACE,OAAO,IAAIE,EAAW/oB,KAAKgoB,Q,gCAE7B,sBAAW,uBAAQ,C,IAAnB,WAAyD,OAAOhoB,KAAKgoB,MAAMgB,U,gCAC3E,sBAAW,mBAAI,C,IAAf,WAA4B,OAAOhpB,KAAKgoB,MAAM1U,M,gCAC9C,sBAAW,mBAAI,C,IAAf,WAA4B,OAAOtT,KAAKgoB,MAAMrR,M,gCAC9C,sBAAW,qBAAM,C,IAAjB,WAA2C,OAAO,IAAIsS,EAAmBjpB,KAAKgoB,MAAMkB,U,gCACpF,sBAAW,sBAAO,C,IAAlB,WAA+C,OAAOlpB,KAAKgoB,MAAMmB,S,gCAC1D,YAAAC,KAAP,WACEppB,KAAKgoB,MAAMoB,QAEN,YAAAC,MAAP,WACErpB,KAAKgoB,MAAMqB,SAEN,YAAA3V,OAAP,SAAc4V,EAAiBhW,GAC7BtT,KAAKupB,gBAAgBD,EAAShW,GAC9BtT,KAAKgoB,MAAMtU,OAAO4V,EAAShW,IAEtB,YAAAkW,KAAP,SAAYC,GACVzpB,KAAKgoB,MAAMwB,KAAKC,IAEX,YAAAC,4BAAP,SAAmCC,GACjC3pB,KAAKgoB,MAAM0B,4BAA4BC,IAElC,YAAAC,oBAAP,SAA2BC,EAAeniB,EAAmD8L,GAC3F,OAAOxT,KAAKgoB,MAAM4B,oBAAoBC,EAAOniB,EAAS8L,IAEjD,YAAAsW,sBAAP,SAA6BC,GAC3B/pB,KAAKgoB,MAAM8B,sBAAsBC,IAE5B,YAAAC,qBAAP,SAA4BC,GAC1B,OAAOjqB,KAAKgoB,MAAMgC,qBAAqBC,IAElC,YAAA1G,wBAAP,SAA+B7b,GAC7B,OAAO1H,KAAKgoB,MAAMzE,wBAAwB7b,IAErC,YAAA+b,0BAAP,SAAiCC,GAC/B1jB,KAAKgoB,MAAMvE,0BAA0BC,IAEhC,YAAAwG,eAAP,SAAsBC,GAEpB,OADAnqB,KAAKupB,gBAAgBY,GACdnqB,KAAKgoB,MAAMoC,UAAUD,IAEvB,YAAAC,UAAP,SAAiBD,GACf,OAAOnqB,KAAKkqB,eAAeC,IAEtB,YAAAE,aAAP,WACE,OAAOrqB,KAAKgoB,MAAMqC,gBAEb,YAAAC,OAAP,SAAcC,EAAgB3G,EAAavjB,GACzCL,KAAKupB,gBAAgBgB,EAAQ3G,EAAKvjB,GAClCL,KAAKgoB,MAAMsC,OAAOC,EAAQ3G,EAAKvjB,IAE1B,YAAAmqB,aAAP,WACE,OAAOxqB,KAAKgoB,MAAMwC,gBAEb,YAAAC,qBAAP,WACE,OAAOzqB,KAAKgoB,MAAMyC,wBAEb,YAAAC,eAAP,WACE1qB,KAAKgoB,MAAM0C,kBAEN,YAAAC,UAAP,WACE3qB,KAAKgoB,MAAM2C,aAEN,YAAAC,YAAP,SAAmB9kB,EAAeC,GAChC/F,KAAKupB,gBAAgBzjB,EAAOC,GAC5B/F,KAAKgoB,MAAM4C,YAAY9kB,EAAOC,IAEzB,YAAA3F,QAAP,WACEJ,KAAKkoB,cAAc9nB,UACnBJ,KAAKgoB,MAAM5nB,WAEN,YAAAyqB,YAAP,SAAmBC,GACjB9qB,KAAKupB,gBAAgBuB,GACrB9qB,KAAKgoB,MAAM6C,YAAYC,IAElB,YAAAC,YAAP,SAAmBC,GACjBhrB,KAAKupB,gBAAgByB,GACrBhrB,KAAKgoB,MAAM+C,YAAYC,IAElB,YAAAC,YAAP,WACEjrB,KAAKgoB,MAAMiD,eAEN,YAAAC,eAAP,WACElrB,KAAKgoB,MAAMkD,kBAEN,YAAAC,aAAP,SAAoB9Q,GAClBra,KAAKupB,gBAAgBlP,GACrBra,KAAKgoB,MAAMmD,aAAa9Q,IAEnB,YAAAlU,MAAP,WACEnG,KAAKgoB,MAAM7hB,SAEN,YAAAilB,MAAP,SAAavlB,EAA2BwlB,GACtCrrB,KAAKgoB,MAAMoD,MAAMvlB,EAAMwlB,IAElB,YAAAC,UAAP,SAAiBzlB,EAAkBwlB,GACjCrrB,KAAKgoB,MAAMoD,MAAMvlB,EAAMwlB,IAElB,YAAAE,QAAP,SAAe1lB,EAA2BwlB,GACxCrrB,KAAKgoB,MAAMoD,MAAMvlB,GACjB7F,KAAKgoB,MAAMoD,MAAM,OAAQC,IAEpB,YAAAG,MAAP,SAAa3lB,GACX7F,KAAKgoB,MAAMwD,MAAM3lB,IAMZ,YAAA4lB,UAAP,SAAiBpsB,GACf,OAAOW,KAAKgoB,MAAM0D,eAAeD,UAAUpsB,IAYtC,YAAAssB,UAAP,SAAiBtsB,EAAUN,GACzBiB,KAAKgoB,MAAM0D,eAAeC,UAAUtsB,EAAKN,IAEpC,YAAAynB,QAAP,SAAe1gB,EAAeC,GAC5B/F,KAAKupB,gBAAgBzjB,EAAOC,GAC5B/F,KAAKgoB,MAAMxB,QAAQ1gB,EAAOC,IAErB,YAAA8W,MAAP,WACE7c,KAAKgoB,MAAMnL,SAEN,YAAA+O,UAAP,SAAiBC,GACf,OAAO7rB,KAAKkoB,cAAc0D,UAAU5rB,KAAM6rB,IAE5C,sBAAkB,YAAO,C,IAAzB,WACE,OAAOC,G,gCAGD,YAAAvC,gBAAR,W,IAAwB,sDACtBnN,EAAO3a,SAAQ,SAAA1C,GACb,GAAIA,IAAUgtB,KAAYC,MAAMjtB,IAAUA,EAAQ,GAAM,EACtD,MAAM,IAAIwZ,MAAM,sCAIxB,EAhLA,GAAa,EAAA0P,WAkLb,iBACE,WACUgE,EACQ5kB,GADR,KAAA4kB,UACQ,KAAA5kB,OAqBpB,OAlBS,YAAA6kB,KAAP,SAAYrI,GAEV,OADA7jB,KAAKisB,QAAUpI,EACR7jB,MAGT,sBAAW,sBAAO,C,IAAlB,WAA+B,OAAOA,KAAKisB,QAAQxX,G,gCACnD,sBAAW,sBAAO,C,IAAlB,WAA+B,OAAOzU,KAAKisB,QAAQzX,G,gCACnD,sBAAW,wBAAS,C,IAApB,WAAiC,OAAOxU,KAAKisB,QAAQE,O,gCACrD,sBAAW,oBAAK,C,IAAhB,WAA6B,OAAOnsB,KAAKisB,QAAQG,O,gCACjD,sBAAW,qBAAM,C,IAAjB,WAA8B,OAAOpsB,KAAKisB,QAAQnI,MAAMzjB,Q,gCACjD,YAAAgsB,QAAP,SAAe5X,GACb,IAAM4F,EAAOra,KAAKisB,QAAQnI,MAAMnlB,IAAI8V,GACpC,GAAK4F,EAGL,OAAO,IAAIiS,EAAkBjS,IAExB,YAAAkS,YAAP,WAAuC,OAAO,IAAI,EAAAhpB,UACpD,EAxBA,GA0BA,aAME,WAAoBipB,GAApB,WAAoB,KAAAA,WAHZ,KAAAC,gBAAkB,IAAI,EAAA7rB,aAI5BZ,KAAK0sB,QAAU,IAAIC,EAAc3sB,KAAKwsB,SAASI,OAAQ,UACvD5sB,KAAK6sB,WAAa,IAAIF,EAAc3sB,KAAKwsB,SAASM,IAAK,aACvD9sB,KAAKwsB,SAASO,kBAAiB,WAAM,SAAKN,gBAAgBlsB,KAAK,EAAKysB,WAaxE,OAlBE,sBAAW,6BAAc,C,IAAzB,WAAkD,OAAOhtB,KAAKysB,gBAAgBlH,O,gCAO9E,sBAAW,qBAAM,C,IAAjB,WACE,GAAIvlB,KAAKwsB,SAASQ,SAAWhtB,KAAKwsB,SAASI,OAAU,OAAO5sB,KAAK4sB,OACjE,GAAI5sB,KAAKwsB,SAASQ,SAAWhtB,KAAKwsB,SAASM,IAAO,OAAO9sB,KAAKitB,UAC9D,MAAM,IAAI1U,MAAM,kD,gCAElB,sBAAW,qBAAM,C,IAAjB,WACE,OAAOvY,KAAK0sB,QAAQR,KAAKlsB,KAAKwsB,SAASI,S,gCAEzC,sBAAW,wBAAS,C,IAApB,WACE,OAAO5sB,KAAK6sB,WAAWX,KAAKlsB,KAAKwsB,SAASM,M,gCAE9C,EAtBA,GAwBA,aACE,WAAoBI,GAAA,KAAAA,QAkBtB,OAhBE,sBAAW,wBAAS,C,IAApB,WAAkC,OAAOltB,KAAKktB,MAAMnU,W,gCACpD,sBAAW,qBAAM,C,IAAjB,WAA8B,OAAO/Y,KAAKktB,MAAM7sB,Q,gCACzC,YAAA8sB,QAAP,SAAe3Y,EAAWc,GACxB,KAAId,EAAI,GAAKA,GAAKxU,KAAKktB,MAAM7sB,QAI7B,OAAIiV,GACFtV,KAAKktB,MAAMxT,SAASlF,EAAcc,GAC3BA,GAEFtV,KAAKktB,MAAMxT,SAASlF,EAAG,IAAI,EAAAjR,WAE7B,YAAAyX,kBAAP,SAAyBC,EAAqBmS,EAAsBC,GAClE,OAAOrtB,KAAKktB,MAAMlS,kBAAkBC,EAAWmS,EAAaC,IAEhE,EAnBA,GAqBA,aACE,WAAoBrF,GAAA,KAAAA,QA0BtB,OAxBS,YAAAsF,mBAAP,SAA0Bjd,EAAyBgb,GACjD,OAAOrrB,KAAKgoB,MAAMuF,cAAcld,GAAI,SAACqL,GAAoB,OAAA2P,EAAS3P,EAAOiB,eAEpE,YAAA4Q,cAAP,SAAqBld,EAAyBgb,GAC5C,OAAOrrB,KAAKstB,mBAAmBjd,EAAIgb,IAE9B,YAAAmC,mBAAP,SAA0Bnd,EAAyBgb,GACjD,OAAOrrB,KAAKgoB,MAAMyF,cAAcpd,GAAI,SAACxK,EAAc6V,GAAoB,OAAA2P,EAASxlB,EAAM6V,EAAOiB,eAExF,YAAA8Q,cAAP,SAAqBpd,EAAyBgb,GAC5C,OAAOrrB,KAAKwtB,mBAAmBnd,EAAIgb,IAE9B,YAAAqC,mBAAP,SAA0Brd,EAAyB3I,GACjD,OAAO1H,KAAKgoB,MAAM2F,cAActd,EAAI3I,IAE/B,YAAAimB,cAAP,SAAqBtd,EAAyB3I,GAC5C,OAAO1H,KAAK0tB,mBAAmBrd,EAAI3I,IAE9B,YAAAkmB,mBAAP,SAA0BlQ,EAAe2N,GACvC,OAAOrrB,KAAKgoB,MAAM6F,cAAcnQ,EAAO2N,IAElC,YAAAwC,cAAP,SAAqBnQ,EAAe2N,GAClC,OAAOrrB,KAAK4tB,mBAAmBlQ,EAAO2N,IAE1C,EA3BA,GA6BA,aACE,WAAoBrD,GAAA,KAAAA,QAiBtB,OAfS,YAAAtmB,SAAP,SAAgBosB,GACd9tB,KAAKgoB,MAAM+F,eAAersB,SAASosB,IAGrC,sBAAW,uBAAQ,C,IAAnB,WACE,OAAO9tB,KAAKgoB,MAAM+F,eAAeC,U,gCAGnC,sBAAW,4BAAa,C,IAAxB,WACE,OAAOhuB,KAAKgoB,MAAM+F,eAAeE,e,IAGnC,SAAyBC,GACvBluB,KAAKgoB,MAAM+F,eAAeE,cAAgBC,G,gCAE9C,EAlBA,I,8ZC7QA,YACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,QAEA,QAEA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,QACA,OAEA,QAEA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QAGM1c,EAA8B,oBAAX7T,OAA0BA,OAAO6T,SAAW,KAGrE,cAsHE,WACEgC,QAAA,IAAAA,MAAA,IADF,MAGE,cAAO,K,OA5GF,EAAA2a,QAAyBC,EA8BzB,EAAAC,YAAW,EAcV,EAAAC,iBAA2B,EAc3B,EAAAC,WAA0B,KAK1B,EAAAC,cAAgB,IAAI,EAAA5tB,aAEpB,EAAA6tB,QAAU,IAAI,EAAA7tB,aAEd,EAAA8tB,UAAY,IAAI,EAAA9tB,aAEhB,EAAA+tB,OAAS,IAAI,EAAA/tB,aAEb,EAAAguB,YAAc,IAAI,EAAAhuB,aAElB,EAAAiuB,UAAY,IAAI,EAAAjuB,aAEhB,EAAAkuB,UAAY,IAAI,EAAAluB,aAEhB,EAAAmuB,UAAY,IAAI,EAAAnuB,aAEhB,EAAAouB,mBAAqB,IAAI,EAAApuB,aAEzB,EAAAquB,eAAiB,IAAI,EAAAruB,aAGrB,EAAAsuB,SAAW,IAAI,EAAAtuB,aAEf,EAAAuuB,QAAU,IAAI,EAAAvuB,aAEf,EAAAwuB,kBAAoB,IAAI,EAAAxuB,aAExB,EAAAyuB,iBAAmB,IAAI,EAAAzuB,aAqB5B,EAAK0uB,sBAAwB,IAAI,EAAAC,qBACjC,EAAK7D,eAAiB,IAAI,EAAA8D,eAAehc,GACzC,EAAK8b,sBAAsBG,WAAW,EAAApuB,gBAAiB,EAAKqqB,gBAC5D,EAAKhb,eAAiB,EAAK4e,sBAAsBI,eAAe,EAAAC,eAChE,EAAKL,sBAAsBG,WAAW,EAAA5uB,eAAgB,EAAK6P,gBAC3D,EAAKkf,YAAc,EAAKN,sBAAsBI,eAAe,EAAAG,YAC7D,EAAKP,sBAAsBG,WAAW,EAAAruB,YAAa,EAAKwuB,aACxD,EAAKE,aAAe,EAAKR,sBAAsBI,eAAe,EAAAK,aAAa,WAAM,SAAK7E,oBACtF,EAAKoE,sBAAsBG,WAAW,EAAAzuB,aAAc,EAAK8uB,cACzD,EAAKA,aAAaxH,QAAO,SAAA0H,GAAK,SAAKvB,QAAQluB,KAAKyvB,MAChD,EAAKF,aAAavH,UAAS,SAAAyH,GAAK,SAAKtB,UAAUnuB,KAAKyvB,MACpD,EAAKC,kBAAoB,EAAKX,sBAAsBI,eAAe,EAAAQ,kBACnE,EAAKZ,sBAAsBG,WAAW,EAAA1uB,kBAAmB,EAAKkvB,mBAC9D,EAAKE,iBAAmB,EAAKb,sBAAsBI,eAAe,EAAAU,iBAClE,EAAKd,sBAAsBG,WAAW,EAAAvuB,iBAAkB,EAAKivB,kBAC7D,EAAKpC,eAAiB,EAAKuB,sBAAsBI,eAAe,EAAAW,gBAChE,EAAKf,sBAAsBG,WAAW,EAAAnuB,gBAAiB,EAAKysB,gBAC5D,EAAKuC,gBAAkB,EAAKhB,sBAAsBI,eAAe,EAAAa,gBACjE,EAAKjB,sBAAsBG,WAAW,EAAAxuB,gBAAiB,EAAKqvB,iBAE5D,EAAKE,yBACL,EAAKC,SAEL,EAAKC,aAAe,IAAI,EAAAC,aAAY,SAAA9qB,GAAQ,SAAK+qB,cAAcC,MAAMhrB,M,EA0xCzE,OA76C8B,OAgB5B,sBAAW,sBAAO,C,IAAlB,WAAyC,OAAO7F,KAAK0rB,eAAelY,S,gCAyDpE,sBAAW,mBAAI,C,IAAf,WAA4B,OAAOxT,KAAK0Q,eAAeiG,M,gCACvD,sBAAW,mBAAI,C,IAAf,WAA4B,OAAO3W,KAAK0Q,eAAe4C,M,gCAGvD,sBAAW,2BAAY,C,IAAvB,WAA0C,OAAOtT,KAAKwuB,cAAcjJ,O,gCAEpE,sBAAW,qBAAM,C,IAAjB,WAAsC,OAAOvlB,KAAKyuB,QAAQlJ,O,gCAE1D,sBAAW,uBAAQ,C,IAAnB,WAAwC,OAAOvlB,KAAK0uB,UAAUnJ,O,gCAE9D,sBAAW,oBAAK,C,IAAhB,WAAuE,OAAOvlB,KAAK2uB,OAAOpJ,O,gCAE1F,sBAAW,yBAAU,C,IAArB,WAAwC,OAAOvlB,KAAK4uB,YAAYrJ,O,gCAEhE,sBAAW,uBAAQ,C,IAAnB,WAAgE,OAAOvlB,KAAK6uB,UAAUtJ,O,gCAEtF,sBAAW,uBAAQ,C,IAAnB,WAAgE,OAAOvlB,KAAK8uB,UAAUvJ,O,gCAEtF,sBAAW,uBAAQ,C,IAAnB,WAAwC,OAAOvlB,KAAK+uB,UAAUxJ,O,gCAE9D,sBAAW,gCAAiB,C,IAA5B,WAA+C,OAAOvlB,KAAKgvB,mBAAmBzJ,O,gCAE9E,sBAAW,4BAAa,C,IAAxB,WAA6C,OAAOvlB,KAAKivB,eAAe1J,O,gCAGxE,sBAAW,sBAAO,C,IAAlB,WAAqC,OAAOvlB,KAAKkvB,SAAS3J,O,gCAE1D,sBAAW,qBAAM,C,IAAjB,WAAoC,OAAOvlB,KAAKmvB,QAAQ5J,O,gCAExD,sBAAW,yBAAU,C,IAArB,WAA0C,OAAOvlB,KAAKovB,kBAAkB7J,O,gCAExE,sBAAW,wBAAS,C,IAApB,WAAyC,OAAOvlB,KAAKqvB,iBAAiB9J,O,gCA8C/D,YAAAnlB,QAAP,W,YACMJ,KAAKwB,cAGT,YAAMpB,QAAO,WACI,QAAjB,EAAAJ,KAAK8wB,oBAAY,SAAE1wB,UACnBJ,KAAK8wB,kBAAenwB,EACD,QAAnB,EAAAX,KAAK+wB,sBAAc,SAAE3wB,UACrBJ,KAAKgxB,uBAAyB,KAC9BhxB,KAAKorB,MAAQ,aACW,QAAxB,EAAY,QAAZ,EAAAprB,KAAKwlB,eAAO,eAAEyL,kBAAU,SAAElf,YAAY/R,KAAKwlB,WAGrC,YAAAiL,OAAR,sBACEzwB,KAAKgxB,uBAAyB,KAG9BhxB,KAAKkxB,YAAa,EAClBlxB,KAAKmxB,oBAAqB,EAE1BnxB,KAAKoxB,gBAAiB,EAElBpxB,KAAK4wB,cACP5wB,KAAK4wB,cAAc/T,SAGnB7c,KAAK4wB,cAAgB,IAAI,EAAAS,aAAarxB,KAAMA,KAAK0Q,eAAgB1Q,KAAKswB,gBAAiBtwB,KAAK8vB,aAAc9vB,KAAKmwB,iBAAkBnwB,KAAK4vB,YAAa5vB,KAAK0rB,eAAgB1rB,KAAKiwB,kBAAmBjwB,KAAK+tB,eAAgB/tB,KAAKsvB,uBAC1NtvB,KAAK4wB,cAAcU,eAAc,WAAM,SAAKC,UAC5CvxB,KAAK4wB,cAAcY,sBAAqB,SAAC1rB,EAAOC,GAAQ,SAAKygB,QAAQ1gB,EAAOC,MAC5E/F,KAAK4wB,cAAca,gBAAe,WAAM,SAAK5U,WAC7C7c,KAAK4wB,cAAcne,cAAa,WAAM,SAAK+b,cAAcjuB,UACzDP,KAAK4wB,cAAcxI,YAAW,WAAM,SAAKwG,YAAYruB,UACrDP,KAAK0B,SAAS1B,KAAK4wB,gBAGhB5wB,KAAK0xB,YACR1xB,KAAK0xB,UAAY,IAAI,EAAAC,UAAU3xB,KAAK0Q,eAAgB1Q,KAAK4vB,YAAa5vB,KAAK0rB,eAAgB1rB,KAAK+tB,iBAE7F/tB,KAAK4xB,aACR5xB,KAAK4xB,WAAa,IAAI,EAAAC,WAAW7xB,KAAK0Q,iBAGpC1Q,KAAKwT,QAAQse,aACf9xB,KAAK+xB,sBAID,YAAAA,mBAAR,sBACE,IAAK/xB,KAAK8wB,aAAc,CACtB,IAAM,EAA6B,GACnC,EAAY3wB,KAAKH,KAAKooB,WAAW,EAAA4J,8BAA8B1yB,KAAK,KAAMU,KAAK0Q,kBAC/E,EAAYvQ,KAAKH,KAAKutB,cAAc,CAAE0E,MAAO,MAAO,WAElD,OADA,EAAAD,8BAA8B,EAAKthB,iBAC5B,MAET1Q,KAAK8wB,aAAe,CAClB1wB,QAAS,WACP,EAAYqB,SAAQ,SAAArD,GAAK,OAAAA,EAAEgC,iBASnC,sBAAW,qBAAM,C,IAAjB,WACE,OAAOJ,KAAKkpB,QAAQ8D,Q,gCAGtB,sBAAW,sBAAO,C,IAAlB,WACE,OAAOhtB,KAAK0Q,eAAewY,S,gCAMtB,YAAAG,MAAP,WACMrpB,KAAKgpB,UACPhpB,KAAKgpB,SAASK,MAAM,CAAE6I,eAAe,KAIjC,YAAA1B,uBAAR,sBAEExwB,KAAK0rB,eAAeyG,gBAAe,SAAA9yB,G,cACjC,OAAQA,GACN,IAAK,aACL,IAAK,WAEgB,QAAnB,IAAK0xB,sBAAc,SAAE5qB,QACA,QAArB,IAAKisB,wBAAgB,SAAEC,UACvB,MACF,IAAK,cACL,IAAK,cAEH,EAAK7L,QAAQ,EAAK3C,OAAOpP,EAAG,EAAKoP,OAAOpP,GACxC,MACF,IAAK,6BACL,IAAK,gBACL,IAAK,aACL,IAAK,aACL,IAAK,iBACL,IAAK,uBAEC,EAAKsc,iBACP,EAAKA,eAAe5qB,QACpB,EAAK4qB,eAAenI,SAAS,EAAKjS,KAAM,EAAKrD,MAC7C,EAAKkT,QAAQ,EAAG,EAAKlT,KAAO,IAE9B,MACF,IAAK,eACC,EAAKyd,iBACP,EAAKA,eAAeuB,YAAY,EAAKC,mBACrC,EAAKxB,eAAenI,SAAS,EAAKjS,KAAM,EAAKrD,OAE/C,MACF,IAAK,aACH,EAAK4V,QAAQxV,OAAO,EAAKiD,KAAM,EAAKrD,MACvB,QAAb,IAAKkf,gBAAQ,SAAEC,iBACf,MACF,IAAK,mBACC,EAAK/G,eAAelY,QAAQkf,kBACzB,EAAKC,uBAAyB,EAAK5B,iBACtC,EAAK4B,sBAAwB,IAAI,EAAAC,qBAAqB,EAAM,EAAK7B,kBAGzC,QAA1B,IAAK4B,6BAAqB,SAAEvyB,UAC5B,EAAKuyB,sBAAwB,MAE/B,MACF,IAAK,eAAgB,EAAKzJ,QAAQ2J,gBAAiB,MACnD,IAAK,QACH,EAAKC,UAAU,EAAKpH,eAAelY,QAAQkO,OAC3C,MACF,IAAK,cACC,EAAKgK,eAAelY,QAAQse,YAC9B,EAAKC,sBAEY,QAAjB,IAAKjB,oBAAY,SAAE1wB,UACnB,EAAK0wB,kBAAenwB,QAUtB,YAAAoyB,iBAAR,SAAyBC,GACnBhzB,KAAKizB,WACPjzB,KAAK8vB,aAAaoD,iBAAiB,EAAAlnB,GAAG4B,IAAM,MAE9C5N,KAAKmzB,kBAAkBH,GACvBhzB,KAAKwlB,QAAQ9T,UAAUC,IAAI,SAC3B3R,KAAKozB,aACLpzB,KAAKkvB,SAAS3uB,QAOT,YAAA6oB,KAAP,WACE,OAAOppB,KAAKgpB,SAASI,QAMf,YAAAiK,gBAAR,WAGErzB,KAAKgpB,SAASjqB,MAAQ,GACtBiB,KAAKwmB,QAAQxmB,KAAK6jB,OAAOpP,EAAGzU,KAAK6jB,OAAOpP,GACpCzU,KAAKizB,WACPjzB,KAAK8vB,aAAaoD,iBAAiB,EAAAlnB,GAAG4B,IAAM,MAE9C5N,KAAKwlB,QAAQ9T,UAAU4hB,OAAO,SAC9BtzB,KAAKmvB,QAAQ5uB,QAMP,YAAAgzB,YAAR,sBACEvzB,KAAKwzB,YAGLxzB,KAAK0B,SAAS,EAAA+xB,yBAAyBzzB,KAAKwlB,QAAS,QAAQ,SAACD,GAGvD,EAAK8E,gBAGV,EAAAqJ,YAAYnO,EAAO,EAAKoO,uBAE1B,IAAMC,EAAsB,SAACrO,GAAgC,SAAAsO,iBAAiBtO,EAAO,EAAKyD,SAAU,EAAKmI,mBAAoB,EAAKrB,eAClI9vB,KAAK0B,SAAS,EAAA+xB,yBAAyBzzB,KAAKgpB,SAAU,QAAS4K,IAC/D5zB,KAAK0B,SAAS,EAAA+xB,yBAAyBzzB,KAAKwlB,QAAS,QAASoO,IAG1DxF,EAAQ5iB,UAEVxL,KAAK0B,SAAS,EAAA+xB,yBAAyBzzB,KAAKwlB,QAAS,aAAa,SAACD,GAC5C,IAAjBA,EAAMuO,QACR,EAAAC,kBAAkBxO,EAAO,EAAKyD,SAAU,EAAKgL,cAAe,EAAKL,kBAAmB,EAAKngB,QAAQygB,2BAIrGj0B,KAAK0B,SAAS,EAAA+xB,yBAAyBzzB,KAAKwlB,QAAS,eAAe,SAACD,GACnE,EAAAwO,kBAAkBxO,EAAO,EAAKyD,SAAU,EAAKgL,cAAe,EAAKL,kBAAmB,EAAKngB,QAAQygB,2BAOjG7F,EAAQriB,SAGV/L,KAAK0B,SAAS,EAAA+xB,yBAAyBzzB,KAAKwlB,QAAS,YAAY,SAACD,GAC3C,IAAjBA,EAAMuO,QACR,EAAAI,6BAA6B3O,EAAO,EAAKyD,SAAU,EAAKgL,oBASxD,YAAAR,UAAR,sBACExzB,KAAK0B,SAAS,EAAA+xB,yBAAyBzzB,KAAKgpB,SAAU,SAAS,SAACgK,GAAsB,SAAKmB,OAAOnB,MAAK,IACvGhzB,KAAK0B,SAAS,EAAA+xB,yBAAyBzzB,KAAKgpB,SAAU,WAAW,SAACgK,GAAsB,SAAKoB,SAASpB,MAAK,IAC3GhzB,KAAK0B,SAAS,EAAA+xB,yBAAyBzzB,KAAKgpB,SAAU,YAAY,SAACgK,GAAsB,SAAKqB,UAAUrB,MAAK,IAC7GhzB,KAAK0B,SAAS,EAAA+xB,yBAAyBzzB,KAAKgpB,SAAU,oBAAoB,WAAM,SAAKsL,mBAAmBC,uBACxGv0B,KAAK0B,SAAS,EAAA+xB,yBAAyBzzB,KAAKgpB,SAAU,qBAAqB,SAACgH,GAAwB,SAAKsE,mBAAmBE,kBAAkBxE,OAC9IhwB,KAAK0B,SAAS,EAAA+xB,yBAAyBzzB,KAAKgpB,SAAU,kBAAkB,WAAM,SAAKsL,mBAAmBG,qBACtGz0B,KAAK0B,SAAS1B,KAAK2oB,UAAS,WAAM,SAAK2L,mBAAmBI,gCAC1D10B,KAAK0B,SAAS1B,KAAK2oB,UAAS,SAAAqH,GAAK,SAAK2E,oBAAoB3E,EAAElqB,MAAOkqB,EAAEjqB,UAQhE,YAAAyjB,KAAP,SAAYC,GAAZ,WACE,IAAKA,EACH,MAAM,IAAIlR,MAAM,uCAGb/G,EAASojB,KAAKvpB,SAASoe,IAC1BzpB,KAAK4vB,YAAYiF,MAAM,2EAGzB70B,KAAK80B,UAAYrL,EAAOsL,cAGxB/0B,KAAKwlB,QAAUxlB,KAAK80B,UAAUrjB,cAAc,OAC5CzR,KAAKwlB,QAAQwP,IAAM,MACnBh1B,KAAKwlB,QAAQ9T,UAAUC,IAAI,YAC3B3R,KAAKwlB,QAAQ9T,UAAUC,IAAI,SAC3B3R,KAAKwlB,QAAQyP,aAAa,WAAY,KACtCxL,EAAO3X,YAAY9R,KAAKwlB,SAIxB,IAAM0P,EAAW1jB,EAAS2jB,yBAC1Bn1B,KAAKo1B,iBAAmB5jB,EAASC,cAAc,OAC/CzR,KAAKo1B,iBAAiB1jB,UAAUC,IAAI,kBACpCujB,EAASpjB,YAAY9R,KAAKo1B,kBAC1Bp1B,KAAKq1B,oBAAsB7jB,EAASC,cAAc,OAClDzR,KAAKq1B,oBAAoB3jB,UAAUC,IAAI,qBACvC3R,KAAKo1B,iBAAiBtjB,YAAY9R,KAAKq1B,qBAEvCr1B,KAAKg0B,cAAgBxiB,EAASC,cAAc,OAC5CzR,KAAKg0B,cAActiB,UAAUC,IAAI,gBAGjC3R,KAAKs1B,iBAAmB9jB,EAASC,cAAc,OAC/CzR,KAAKs1B,iBAAiB5jB,UAAUC,IAAI,iBACpC3R,KAAKg0B,cAAcliB,YAAY9R,KAAKs1B,kBACpCJ,EAASpjB,YAAY9R,KAAKg0B,eAE1Bh0B,KAAKgpB,SAAWxX,EAASC,cAAc,YACvCzR,KAAKgpB,SAAStX,UAAUC,IAAI,yBAC5B3R,KAAKgpB,SAASiM,aAAa,aAAcnJ,EAAQ1Q,aACjDpb,KAAKgpB,SAASiM,aAAa,iBAAkB,SAC7Cj1B,KAAKgpB,SAASiM,aAAa,cAAe,OAC1Cj1B,KAAKgpB,SAASiM,aAAa,iBAAkB,OAC7Cj1B,KAAKgpB,SAASiM,aAAa,aAAc,SACzCj1B,KAAKgpB,SAASuM,SAAW,EACzBv1B,KAAK0B,SAAS,EAAA+xB,yBAAyBzzB,KAAKgpB,SAAU,SAAS,SAACgK,GAAsB,SAAKD,iBAAiBC,OAC5GhzB,KAAK0B,SAAS,EAAA+xB,yBAAyBzzB,KAAKgpB,SAAU,QAAQ,WAAM,SAAKqK,sBACzErzB,KAAKs1B,iBAAiBxjB,YAAY9R,KAAKgpB,UAEvC,IAAMwM,EAAqBx1B,KAAKsvB,sBAAsBI,eAAe,EAAA+F,mBAAoBz1B,KAAKgpB,UAC9FhpB,KAAKsvB,sBAAsBG,WAAW,EAAA7sB,oBAAqB4yB,GAE3Dx1B,KAAKoyB,iBAAmBpyB,KAAKsvB,sBAAsBI,eAAe,EAAAgG,gBAAiB11B,KAAK80B,UAAW90B,KAAKs1B,kBACxGt1B,KAAKsvB,sBAAsBG,WAAW,EAAA9sB,iBAAkB3C,KAAKoyB,kBAE7DpyB,KAAK21B,iBAAmBnkB,EAASC,cAAc,OAC/CzR,KAAK21B,iBAAiBjkB,UAAUC,IAAI,oBACpC3R,KAAKs0B,mBAAqBt0B,KAAKsvB,sBAAsBI,eAAe,EAAAkG,kBAAmB51B,KAAKgpB,SAAUhpB,KAAK21B,kBAC3G31B,KAAKs1B,iBAAiBxjB,YAAY9R,KAAK21B,kBAGvC31B,KAAKwlB,QAAQ1T,YAAYojB,GAEzBl1B,KAAK61B,OAAS71B,KAAKwT,QAAQkO,OAAS1hB,KAAK61B,OACzC71B,KAAKwT,QAAQkO,WAAQ/gB,EACrBX,KAAK81B,cAAgB,IAAI,EAAA9S,aAAaxR,EAAUxR,KAAKwT,QAAQ+M,mBAC7DvgB,KAAK0rB,eAAeyG,gBAAe,SAAAnC,GAAK,SAAK8F,cAActU,gBAAgBwO,MAC3EhwB,KAAK81B,cAAcrU,SAASzhB,KAAK61B,QAEjC,IAAME,EAAW/1B,KAAKuyB,kBACtBvyB,KAAK+wB,eAAiB/wB,KAAKsvB,sBAAsBI,eAAe,EAAAsG,cAAeD,EAAU/1B,KAAKsT,KAAMtT,KAAKg0B,eACzGh0B,KAAKsvB,sBAAsBG,WAAW,EAAA3sB,eAAgB9C,KAAK+wB,gBAC3D/wB,KAAK+wB,eAAepI,UAAS,SAAAqH,GAAK,SAAKnB,UAAUtuB,KAAKyvB,MACtDhwB,KAAK4oB,UAAS,SAAAoH,GAAK,SAAKe,eAAerd,OAAOsc,EAAErZ,KAAMqZ,EAAE1c,SAExDtT,KAAKi2B,cAAgBj2B,KAAKsvB,sBAAsBI,eAAe,EAAAwG,cAC/Dl2B,KAAKsvB,sBAAsBG,WAAW,EAAAzsB,cAAehD,KAAKi2B,eAC1Dj2B,KAAKm2B,cAAgBn2B,KAAKsvB,sBAAsBI,eAAe,EAAA0G,cAC/Dp2B,KAAKsvB,sBAAsBG,WAAW,EAAA5sB,cAAe7C,KAAKm2B,eAE1Dn2B,KAAKwyB,SAAWxyB,KAAKsvB,sBAAsBI,eAAe,EAAA2G,UACxD,SAACvL,EAAgBwL,GAA2B,SAAKzL,YAAYC,EAAQwL,KACrEt2B,KAAKo1B,iBACLp1B,KAAKq1B,qBAEPr1B,KAAKwyB,SAAS+D,cAAcv2B,KAAK81B,cAActW,QAC/Cxf,KAAK0B,SAAS1B,KAAKwyB,UAEnBxyB,KAAK0B,SAAS1B,KAAKyS,cAAa,WAAM,SAAKse,eAAete,mBAC1DzS,KAAK0B,SAAS1B,KAAK4oB,UAAS,WAAM,SAAKmI,eAAenI,SAAS,EAAKjS,KAAM,EAAKrD,UAC/EtT,KAAK0B,SAAS1B,KAAKuS,QAAO,WAAM,SAAKwe,eAAexe,aACpDvS,KAAK0B,SAAS1B,KAAKwS,SAAQ,WAAM,SAAKue,eAAeve,cACrDxS,KAAK0B,SAAS1B,KAAK+wB,eAAeyF,oBAAmB,WAAM,SAAKhE,SAASC,qBAEzEzyB,KAAK2zB,kBAAoB3zB,KAAKsvB,sBAAsBI,eAAe,EAAA+G,kBACjE,SAAC3L,EAAgBwL,GAA2B,SAAKzL,YAAYC,EAAQwL,KACrEt2B,KAAKwlB,QACLxlB,KAAKg0B,eACPh0B,KAAKsvB,sBAAsBG,WAAW,EAAA1sB,kBAAmB/C,KAAK2zB,mBAC9D3zB,KAAK0B,SAAS1B,KAAK2zB,kBAAkBtL,mBAAkB,WAAM,SAAK2G,mBAAmBzuB,WACrFP,KAAK0B,SAAS1B,KAAK2zB,kBAAkB+C,iBAAgB,SAAA1G,GAAK,SAAKe,eAAele,mBAAmBmd,EAAElqB,MAAOkqB,EAAEjqB,IAAKiqB,EAAEld,sBACnH9S,KAAK0B,SAAS1B,KAAK2zB,kBAAkBgD,uBAAsB,SAAAjS,GAIzD,EAAKsE,SAASjqB,MAAQ2lB,EACtB,EAAKsE,SAASK,QACd,EAAKL,SAASsB,aAEhBtqB,KAAK0B,SAAS1B,KAAKyoB,UAAS,WAC1B,EAAK+J,SAASC,iBACd,EAAKkB,kBAAkBnN,cAEzBxmB,KAAK0B,SAAS,EAAA+xB,yBAAyBzzB,KAAKo1B,iBAAkB,UAAU,WAAM,SAAKzB,kBAAkBnN,cAErGxmB,KAAK42B,kBAAoB52B,KAAKsvB,sBAAsBI,eAAe,EAAAmH,iBAAkB72B,KAAKwlB,QAASxlB,KAAKg0B,eACxGh0B,KAAK0B,SAAS1B,KAAK42B,mBACnB52B,KAAK0B,SAAS1B,KAAKyoB,UAAS,WAAM,SAAKmO,kBAAkBE,eACzD92B,KAAK0xB,UAAUqF,YAAY/2B,KAAKwlB,QAASxlB,KAAK42B,mBAC9C52B,KAAK4xB,WAAWmF,YAAY/2B,KAAKwlB,QAASxlB,KAAKm2B,cAAen2B,KAAK+wB,gBAGnE/wB,KAAK0B,SAAS,EAAA+xB,yBAAyBzzB,KAAKwlB,QAAS,aAAa,SAACwK,GAAkB,SAAK2D,kBAAkBqD,YAAYhH,OAGpHhwB,KAAKquB,aACPruB,KAAK2zB,kBAAkBsD,UACvBj3B,KAAKwlB,QAAQ9T,UAAUC,IAAI,wBAE3B3R,KAAK2zB,kBAAkBuD,SAGrBl3B,KAAKwT,QAAQkf,mBAGf1yB,KAAK2yB,sBAAwB,IAAI,EAAAC,qBAAqB5yB,KAAMA,KAAK+wB,iBAInE/wB,KAAKoyB,iBAAiBC,UAGtBryB,KAAKwmB,QAAQ,EAAGxmB,KAAKsT,KAAO,GAG5BtT,KAAKuzB,cAILvzB,KAAKm3B,aAGC,YAAA5E,gBAAR,WACE,OAAQvyB,KAAKwT,QAAQ4jB,cACnB,IAAK,SAAU,OAAOp3B,KAAKsvB,sBAAsBI,eAAe,EAAA2H,SAAUr3B,KAAK81B,cAActW,OAAQxf,KAAKg0B,cAAeh0B,KAAK0xB,UAAW1xB,KAAK4xB,YAC9I,IAAK,MAAO,OAAO5xB,KAAKsvB,sBAAsBI,eAAe,EAAA4H,YAAat3B,KAAK81B,cAActW,OAAQxf,KAAKwlB,QAASxlB,KAAKg0B,cAAeh0B,KAAKo1B,iBAAkBp1B,KAAK0xB,UAAW1xB,KAAK4xB,YACnL,QAAS,MAAM,IAAIrZ,MAAM,8BAA8BvY,KAAKwT,QAAQ4jB,aAAY,OAQ5E,YAAAtE,UAAR,SAAkBpR,G,UAChB1hB,KAAK61B,OAASnU,EACI,QAAlB,EAAA1hB,KAAK81B,qBAAa,SAAErU,SAASC,GACV,QAAnB,EAAA1hB,KAAK+wB,sBAAc,SAAEhe,UAAU/S,KAAK81B,cAActW,QACrC,QAAb,EAAAxf,KAAKwyB,gBAAQ,SAAE+D,cAAcv2B,KAAK81B,cAActW,SAkB3C,YAAA2X,UAAP,sBACQI,EAAOv3B,KACPuL,EAAKvL,KAAKwlB,QAGhB,SAASgS,EAAUxE,GAEjB,IAKIyE,EACAC,EANEvwB,EAAMowB,EAAKpB,cAAcwB,iBAAiB3E,EAAIuE,EAAKvD,cAAeuD,EAAK5gB,KAAM4gB,EAAKjkB,MACxF,IAAKnM,EACH,OAAO,EAKT,OAAc6rB,EAAI4E,cAAgB5E,EAAG3rB,MACnC,IAAK,YACHqwB,EAAS,QACU/2B,IAAfqyB,EAAG6E,SAELJ,EAAM,OACY92B,IAAdqyB,EAAGc,SACL2D,EAAMzE,EAAGc,OAAS,EAAId,EAAGc,OAAS,IAIpC2D,EAAmB,EAAbzE,EAAG6E,QAAc,EACR,EAAb7E,EAAG6E,QAAc,EACF,EAAb7E,EAAG6E,QAAc,E,EAGvB,MACF,IAAK,UACHH,EAAS,EACTD,EAAMzE,EAAGc,OAAS,EAAId,EAAGc,OAAS,EAClC,MACF,IAAK,YACH4D,EAAS,EACTD,EAAMzE,EAAGc,OAAS,EAAId,EAAGc,OAAS,EAClC,MACF,IAAK,QAE+B,IAA7Bd,EAAkB8E,SACrBJ,EAAU1E,EAAkB8E,OAAS,EAAI,EAAqB,GAEhEL,EAAM,EACN,MACF,QAEE,OAAO,EAKX,aAAe92B,IAAX+2B,QAAgC/2B,IAAR82B,GAAqBA,EAAM,IAIhDF,EAAKtH,kBAAkB8H,kBAAkB,CAC9CC,IAAK7wB,EAAIqN,EAAI,GACboP,IAAKzc,EAAIsN,EAAI,GACbqf,OAAQ2D,EACRC,OAAM,EACNO,KAAMjF,EAAGkF,QACTpL,IAAKkG,EAAGmF,OACRC,MAAOpF,EAAGqF,WAYd,IAAMC,EAAmE,CACvEC,QAAS,KACTC,MAAO,KACPC,UAAW,KACXC,UAAW,MAEPC,EACK,SAAC3F,GASR,OARAwE,EAAUxE,GACLA,EAAG6E,UAEN,EAAK/C,UAAUhtB,oBAAoB,UAAWwwB,EAAgBC,SAC1DD,EAAgBG,WAClB,EAAK3D,UAAUhtB,oBAAoB,YAAawwB,EAAgBG,YAG7D,EAAKG,OAAO5F,IAVjB2F,EAYG,SAAC3F,GAGN,OAFAwE,EAAUxE,GACVA,EAAG6F,iBACI,EAAKD,OAAO5F,IAfjB2F,EAiBO,SAAC3F,GAENA,EAAG6E,SACLL,EAAUxE,IApBV2F,EAuBO,SAAC3F,GAELA,EAAG6E,SACNL,EAAUxE,IAIhBhzB,KAAKiwB,kBAAkB6I,kBAAiB,SAAAC,GAEtC,EAAK1K,YAAc0K,EACfA,GAC2C,UAAzC,EAAKrN,eAAelY,QAAQwlB,UAC9B,EAAKpJ,YAAYiF,MAAM,2BAA4B,EAAK5E,kBAAkBgJ,cAAcF,IAE1F,EAAKvT,QAAQ9T,UAAUC,IAAI,uBAC3B,EAAKgiB,kBAAkBsD,YAEvB,EAAKrH,YAAYiF,MAAM,gCACvB,EAAKrP,QAAQ9T,UAAU4hB,OAAO,uBAC9B,EAAKK,kBAAkBuD,UAKV,EAAT6B,EAGMT,EAAgBI,YAC1BntB,EAAG3D,iBAAiB,YAAa+wB,GACjCL,EAAgBI,UAAYC,IAJ5BptB,EAAGzD,oBAAoB,YAAawwB,EAAgBI,WACpDJ,EAAgBI,UAAY,MAMf,GAATK,EAGMT,EAAgBE,QAC1BjtB,EAAG3D,iBAAiB,QAAS+wB,GAC7BL,EAAgBE,MAAQG,IAJxBptB,EAAGzD,oBAAoB,QAASwwB,EAAgBE,OAChDF,EAAgBE,MAAQ,MAMX,EAATO,EAGMT,EAAgBC,UAC1BD,EAAgBC,QAAUI,IAH1B,EAAK7D,UAAUhtB,oBAAoB,UAAWwwB,EAAgBC,SAC9DD,EAAgBC,QAAU,MAKb,EAATQ,EAGMT,EAAgBG,YAC1BH,EAAgBG,UAAYE,IAH5B,EAAK7D,UAAUhtB,oBAAoB,YAAawwB,EAAgBG,WAChEH,EAAgBG,UAAY,SAMhCz4B,KAAKiwB,kBAAkBiJ,eAAiBl5B,KAAKiwB,kBAAkBiJ,eAK/Dl5B,KAAK0B,SAAS,EAAA+xB,yBAAyBloB,EAAI,aAAa,SAACynB,GAOvD,GANAA,EAAG6F,iBACH,EAAKxP,QAKA,EAAKgF,cAAe,EAAKsF,kBAAkBwF,qBAAqBnG,GAiBrE,OAbAwE,EAAUxE,GAMNsF,EAAgBC,SAClB,EAAKzD,UAAUltB,iBAAiB,UAAW0wB,EAAgBC,SAEzDD,EAAgBG,WAClB,EAAK3D,UAAUltB,iBAAiB,YAAa0wB,EAAgBG,WAGxD,EAAKG,OAAO5F,OAGrBhzB,KAAK0B,SAAS,EAAA+xB,yBAAyBloB,EAAI,SAAS,SAACynB,GACnD,GAAKsF,EAAgBE,YAGnB,IAAK,EAAK3U,OAAOuV,cAAe,CAC9B,IAAMtO,EAAS,EAAK0H,SAAS6G,iBAAiBrG,GAG9C,GAAe,IAAXlI,EACF,OAMF,IAFA,IAAMwO,EAAW,EAAAttB,GAAG4B,KAAO,EAAKkiB,aAAayJ,gBAAgBC,sBAAwB,IAAM,MAAQxG,EAAG8E,OAAS,EAAI,IAAM,KACrHjyB,EAAO,GACFnI,EAAI,EAAGA,EAAI6L,KAAKkwB,IAAI3O,GAASptB,IACpCmI,GAAQyzB,EAEV,EAAKxJ,aAAaoD,iBAAiBrtB,GAAM,QAQ/C7F,KAAK0B,SAAS,EAAA+xB,yBAAyBloB,EAAI,SAAS,SAACynB,GACnD,IAAIsF,EAAgBE,MACpB,OAAK,EAAKhG,SAASkH,QAAQ1G,QAA3B,EACS,EAAK4F,OAAO5F,OAIvBhzB,KAAK0B,SAAS,EAAA+xB,yBAAyBloB,EAAI,cAAc,SAACynB,GACxD,IAAI,EAAK3E,YAET,OADA,EAAKmE,SAASmH,aAAa3G,GACpB,EAAK4F,OAAO5F,OAGrBhzB,KAAK0B,SAAS,EAAA+xB,yBAAyBloB,EAAI,aAAa,SAACynB,GACvD,IAAI,EAAK3E,YACT,OAAK,EAAKmE,SAASoH,YAAY5G,QAA/B,EACS,EAAK4F,OAAO5F,QAYlB,YAAAxM,QAAP,SAAe1gB,EAAeC,G,MACT,QAAnB,EAAA/F,KAAK+wB,sBAAc,SAAE8I,YAAY/zB,EAAOC,IAQlC,YAAA4uB,oBAAR,SAA4B7uB,EAAeC,G,MAC3B,QAAd,EAAA/F,KAAK0xB,iBAAS,SAAEoI,YAAYh0B,EAAOC,IAM9B,YAAAotB,kBAAP,SAAyBH,GACnBhzB,KAAK2zB,mBAAqB3zB,KAAK2zB,kBAAkBoG,mBAAmB/G,GACtEhzB,KAAKwlB,QAAQ9T,UAAUC,IAAI,iBAE3B3R,KAAKwlB,QAAQ9T,UAAU4hB,OAAO,kBAO3B,YAAAF,WAAP,WACOpzB,KAAK8vB,aAAakK,sBACrBh6B,KAAK8vB,aAAakK,qBAAsB,EACxCh6B,KAAKwmB,QAAQxmB,KAAK6jB,OAAOpP,EAAGzU,KAAK6jB,OAAOpP,KAQrC,YAAAwlB,OAAP,SAAclgB,EAA2BhB,GACvC,IAAIuB,OADmC,IAAAvB,OAAA,IAEvCuB,EAAUta,KAAKuuB,aACCjU,EAAQja,SAAWL,KAAK2W,MAAQ2D,EAAQjB,MAAM,KAAOU,EAAU7W,IAAMoX,EAAQhB,MAAM,KAAOS,EAAU5W,KAClHmX,EAAUta,KAAK6jB,OAAOqW,aAAangB,EAAWhB,GAC9C/Y,KAAKuuB,WAAajU,GAEpBA,EAAQvB,UAAYA,EAEpB,IAAMohB,EAASn6B,KAAK6jB,OAAOuI,MAAQpsB,KAAK6jB,OAAOuW,UACzCC,EAAYr6B,KAAK6jB,OAAOuI,MAAQpsB,KAAK6jB,OAAOyW,aAElD,GAA8B,IAA1Bt6B,KAAK6jB,OAAOuW,UAAiB,CAE/B,IAAMG,EAAsBv6B,KAAK6jB,OAAOC,MAAM0W,OAG1CH,IAAcr6B,KAAK6jB,OAAOC,MAAMzjB,OAAS,EACvCk6B,EACFv6B,KAAK6jB,OAAOC,MAAM2W,UAAUrgB,SAASE,GAErCta,KAAK6jB,OAAOC,MAAM3jB,KAAKma,EAAQhW,SAGjCtE,KAAK6jB,OAAOC,MAAMxjB,OAAO+5B,EAAY,EAAG,EAAG/f,EAAQhW,SAIhDi2B,EASCv6B,KAAKoxB,iBACPpxB,KAAK6jB,OAAOsI,MAAQ5iB,KAAKmB,IAAI1K,KAAK6jB,OAAOsI,MAAQ,EAAG,KATtDnsB,KAAK6jB,OAAOuI,QAEPpsB,KAAKoxB,gBACRpxB,KAAK6jB,OAAOsI,aASX,CAGL,IAAMuO,EAAqBL,EAAYF,EAAS,EAChDn6B,KAAK6jB,OAAOC,MAAM6W,cAAcR,EAAS,EAAGO,EAAqB,GAAI,GACrE16B,KAAK6jB,OAAOC,MAAMtL,IAAI6hB,EAAW/f,EAAQhW,SAKtCtE,KAAKoxB,iBACRpxB,KAAK6jB,OAAOsI,MAAQnsB,KAAK6jB,OAAOuI,OAIlCpsB,KAAKmwB,iBAAiByK,eAAe56B,KAAK6jB,OAAOuW,UAAWp6B,KAAK6jB,OAAOyW,cAExEt6B,KAAK+uB,UAAUxuB,KAAKP,KAAK6jB,OAAOsI,QAU3B,YAAAtB,YAAP,SAAmBgQ,EAAcC,GAC/B,GAAID,EAAO,EAAG,CACZ,GAA0B,IAAtB76B,KAAK6jB,OAAOsI,MACd,OAEFnsB,KAAKoxB,gBAAiB,OACbyJ,EAAO76B,KAAK6jB,OAAOsI,OAASnsB,KAAK6jB,OAAOuI,QACjDpsB,KAAKoxB,gBAAiB,GAGxB,IAAM2J,EAAW/6B,KAAK6jB,OAAOsI,MAC7BnsB,KAAK6jB,OAAOsI,MAAQ5iB,KAAKmB,IAAInB,KAAKsB,IAAI7K,KAAK6jB,OAAOsI,MAAQ0O,EAAM76B,KAAK6jB,OAAOuI,OAAQ,GAGhF2O,IAAa/6B,KAAK6jB,OAAOsI,QAIxB2O,GACH96B,KAAK+uB,UAAUxuB,KAAKP,KAAK6jB,OAAOsI,OAGlCnsB,KAAKwmB,QAAQ,EAAGxmB,KAAKsT,KAAO,KAOvB,YAAAyX,YAAP,SAAmBC,GACjBhrB,KAAK6qB,YAAYG,GAAahrB,KAAKsT,KAAO,KAMrC,YAAA2X,YAAP,WACEjrB,KAAK6qB,aAAa7qB,KAAK6jB,OAAOsI,QAMzB,YAAAjB,eAAP,WACElrB,KAAK6qB,YAAY7qB,KAAK6jB,OAAOuI,MAAQpsB,KAAK6jB,OAAOsI,QAG5C,YAAAhB,aAAP,SAAoB9Q,GAClB,IAAM2gB,EAAe3gB,EAAOra,KAAK6jB,OAAOsI,MACnB,IAAjB6O,GACFh7B,KAAK6qB,YAAYmQ,IAId,YAAAxP,MAAP,SAAa3lB,GACX,EAAA2lB,MAAM3lB,EAAM7F,KAAKgpB,SAAUhpB,KAAKmxB,mBAAoBnxB,KAAK8vB,eAYpD,YAAApG,4BAAP,SAAmCC,GACjC3pB,KAAKgxB,uBAAyBrH,GAIzB,YAAAgE,cAAP,SAAqBtd,EAAyBgb,GAC5C,OAAOrrB,KAAK4wB,cAAcjD,cAActd,EAAIgb,IAIvC,YAAAoC,cAAP,SAAqBpd,EAAyBgb,GAC5C,OAAOrrB,KAAK4wB,cAAcnD,cAAcpd,EAAIgb,IAIvC,YAAAkC,cAAP,SAAqBld,EAAyBgb,GAC5C,OAAOrrB,KAAK4wB,cAAcrD,cAAcld,EAAIgb,IAGvC,YAAAwC,cAAP,SAAqBnQ,EAAe2N,GAClC,OAAOrrB,KAAK4wB,cAAc/C,cAAcnQ,EAAO2N,IAa1C,YAAAzB,oBAAP,SAA2BC,EAAeniB,EAA6B8L,GACrE,IAAMuW,EAAY/pB,KAAK0xB,UAAU9H,oBAAoBC,EAAOniB,EAAS8L,GAErE,OADAxT,KAAKwmB,QAAQ,EAAGxmB,KAAKsT,KAAO,GACrByW,GAOF,YAAAD,sBAAP,SAA6BC,GACvB/pB,KAAK0xB,UAAU5H,sBAAsBC,IACvC/pB,KAAKwmB,QAAQ,EAAGxmB,KAAKsT,KAAO,IAIzB,YAAA0W,qBAAP,SAA4BC,GAC1B,OAAOjqB,KAAK4xB,WAAW5H,qBAAqBC,IAGvC,YAAA1G,wBAAP,SAA+B7b,GAC7B,IAAMgc,EAAW1jB,KAAK+wB,eAAexN,wBAAwB7b,GAE7D,OADA1H,KAAKwmB,QAAQ,EAAGxmB,KAAKsT,KAAO,GACrBoQ,GAGF,YAAAD,0BAAP,SAAiCC,GAC3B1jB,KAAK+wB,eAAetN,0BAA0BC,IAChD1jB,KAAKwmB,QAAQ,EAAGxmB,KAAKsT,KAAO,IAIhC,sBAAW,sBAAO,C,IAAlB,WACE,OAAOtT,KAAK6jB,OAAOsF,S,gCAGd,YAAAiB,UAAP,SAAiBD,GAEf,GAAInqB,KAAK6jB,SAAW7jB,KAAKkpB,QAAQ0D,OAIjC,OAAO5sB,KAAK6jB,OAAOuG,UAAUpqB,KAAK6jB,OAAOuI,MAAQpsB,KAAK6jB,OAAOpP,EAAI0V,IAM5D,YAAAE,aAAP,WACE,QAAOrqB,KAAK2zB,mBAAoB3zB,KAAK2zB,kBAAkBtJ,cASlD,YAAAC,OAAP,SAAcC,EAAgB3G,EAAavjB,GACzCL,KAAK2zB,kBAAkBsH,aAAa1Q,EAAQ3G,EAAKvjB,IAO5C,YAAAmqB,aAAP,WACE,OAAOxqB,KAAK2zB,kBAAoB3zB,KAAK2zB,kBAAkBuH,cAAgB,IAGlE,YAAAzQ,qBAAP,WACE,GAAKzqB,KAAK2zB,kBAAkBtJ,aAI5B,MAAO,CACL+C,YAAaptB,KAAK2zB,kBAAkBwH,eAAe,GACnDxoB,SAAU3S,KAAK2zB,kBAAkBwH,eAAe,GAChD9N,UAAWrtB,KAAK2zB,kBAAkByH,aAAa,GAC/CxoB,OAAQ5S,KAAK2zB,kBAAkByH,aAAa,KAOzC,YAAA1Q,eAAP,W,MACwB,QAAtB,EAAA1qB,KAAK2zB,yBAAiB,SAAEjJ,kBAMnB,YAAAC,UAAP,W,MACwB,QAAtB,EAAA3qB,KAAK2zB,yBAAiB,SAAEhJ,aAGnB,YAAAC,YAAP,SAAmB9kB,EAAeC,G,MACV,QAAtB,EAAA/F,KAAK2zB,yBAAiB,SAAE/I,YAAY9kB,EAAOC,IASnC,YAAAquB,SAAV,SAAmB7O,GAGjB,GAFAvlB,KAAKsuB,iBAAkB,EAEnBtuB,KAAKgxB,yBAAiE,IAAvChxB,KAAKgxB,uBAAuBzL,GAC7D,OAAO,EAGT,IAAKvlB,KAAKs0B,mBAAmB+G,QAAQ9V,GAInC,OAHIvlB,KAAK6jB,OAAOuI,QAAUpsB,KAAK6jB,OAAOsI,OACpCnsB,KAAKkrB,kBAEA,EAGT,IAAMllB,EAAS,EAAAs1B,sBAAsB/V,EAAOvlB,KAAK8vB,aAAayJ,gBAAgBC,sBAAuBx5B,KAAKmuB,QAAQxiB,MAAO3L,KAAKwT,QAAQ+nB,iBAItI,GAFAv7B,KAAKmzB,kBAAkB5N,GAEH,IAAhBvf,EAAOqB,MAAyD,IAAhBrB,EAAOqB,KAAqC,CAC9F,IAAMm0B,EAAcx7B,KAAKsT,KAAO,EAEhC,OADAtT,KAAK6qB,YAA4B,IAAhB7kB,EAAOqB,MAAuCm0B,EAAcA,GACtEx7B,KAAK44B,OAAOrT,GAAO,GAO5B,OAJoB,IAAhBvf,EAAOqB,MACTrH,KAAK2qB,cAGH3qB,KAAKy7B,mBAAmBz7B,KAAKmuB,QAAS5I,KAItCvf,EAAO4yB,QAET54B,KAAK44B,OAAOrT,GAAO,IAGhBvf,EAAO3G,MAOR2G,EAAO3G,MAAQ,EAAA2M,GAAGI,KAAOpG,EAAO3G,MAAQ,EAAA2M,GAAGc,KAC7C9M,KAAKgpB,SAASjqB,MAAQ,IAGxBiB,KAAK2uB,OAAOpuB,KAAK,CAAElB,IAAK2G,EAAO3G,IAAKq8B,SAAUnW,IAC9CvlB,KAAKozB,aACLpzB,KAAK8vB,aAAaoD,iBAAiBltB,EAAO3G,KAAK,GAM1CW,KAAK0rB,eAAelY,QAAQkf,sBAIjC1yB,KAAKsuB,iBAAkB,GAHdtuB,KAAK44B,OAAOrT,GAAO,MAMtB,YAAAkW,mBAAR,SAA2BtN,EAAmB6E,GAC5C,IAAM2I,EACHxN,EAAQxiB,QAAU3L,KAAKwT,QAAQ+nB,iBAAmBvI,EAAGmF,SAAWnF,EAAGkF,UAAYlF,EAAG4I,SAClFzN,EAAQriB,WAAaknB,EAAGmF,QAAUnF,EAAGkF,UAAYlF,EAAG4I,QAEvD,MAAgB,aAAZ5I,EAAG3rB,KACEs0B,EAIFA,KAAmB3I,EAAG6I,SAAW7I,EAAG6I,QAAU,KAG7C,YAAA1H,OAAV,SAAiBnB,GACXhzB,KAAKgxB,yBAA8D,IAApChxB,KAAKgxB,uBAAuBgC,KA6OnE,SAAiCA,GAC/B,OAAsB,KAAfA,EAAG6I,SACO,KAAf7I,EAAG6I,SACY,KAAf7I,EAAG6I,QA5OEC,CAAwB9I,IAC3BhzB,KAAKqpB,QAGPrpB,KAAKmzB,kBAAkBH,KASf,YAAAqB,UAAV,SAAoBrB,GAClB,IAAI3zB,EAEJ,GAAIW,KAAKsuB,gBACP,OAAO,EAGT,GAAItuB,KAAKgxB,yBAA8D,IAApChxB,KAAKgxB,uBAAuBgC,GAC7D,OAAO,EAKT,GAFAhzB,KAAK44B,OAAO5F,GAERA,EAAG+I,SACL18B,EAAM2zB,EAAG+I,cACJ,GAAiB,OAAb/I,EAAGgJ,YAA+Br7B,IAAbqyB,EAAGgJ,MACjC38B,EAAM2zB,EAAG6I,YACJ,IAAiB,IAAb7I,EAAGgJ,OAA+B,IAAhBhJ,EAAG+I,SAG9B,OAAO,EAFP18B,EAAM2zB,EAAGgJ,MAKX,SAAK38B,IACF2zB,EAAGmF,QAAUnF,EAAGkF,SAAWlF,EAAG4I,WAAa57B,KAAKy7B,mBAAmBz7B,KAAKmuB,QAAS6E,MAKpF3zB,EAAMsG,OAAOC,aAAavG,GAE1BW,KAAK2uB,OAAOpuB,KAAK,CAAElB,IAAG,EAAEq8B,SAAU1I,IAClChzB,KAAKozB,aACLpzB,KAAK8vB,aAAaoD,iBAAiB7zB,GAAK,IAEjC,IAOF,YAAAkyB,KAAP,sBACMvxB,KAAKi8B,cACPj8B,KAAKi2B,cAAciG,gBAGjBl8B,KAAKm8B,gBACPn8B,KAAKwlB,QAAQ9T,UAAUC,IAAI,sBAC3ByqB,aAAap8B,KAAKq8B,kBAClBr8B,KAAKq8B,iBAAmB1+B,OAAO2+B,YAAW,WACxC,EAAK9W,QAAQ9T,UAAU4hB,OAAO,wBAC7B,OAUA,YAAA5f,OAAP,SAAcc,EAAWC,G,QACnBuX,MAAMxX,IAAMwX,MAAMvX,KAIlBD,IAAMxU,KAAK2W,MAAQlC,IAAMzU,KAAKsT,MAQ9BkB,EAAI,EAAA+nB,eAAc/nB,EAAI,EAAA+nB,cACtB9nB,EAAI,EAAA+nB,eAAc/nB,EAAI,EAAA+nB,cAE1Bx8B,KAAKkpB,QAAQxV,OAAOc,EAAGC,GAEvBzU,KAAK0Q,eAAegD,OAAOc,EAAGC,GAC9BzU,KAAKkpB,QAAQ2J,cAAc7yB,KAAK2W,MAEX,QAArB,EAAA3W,KAAKoyB,wBAAgB,SAAEC,UAIV,QAAb,EAAAryB,KAAKwyB,gBAAQ,SAAEC,gBAAe,GAE9BzyB,KAAKwmB,QAAQ,EAAGxmB,KAAKsT,KAAO,GAC5BtT,KAAK8uB,UAAUvuB,KAAK,CAAEoW,KAAMnC,EAAGlB,KAAMmB,KArB/BzU,KAAKoyB,mBAAqBpyB,KAAKoyB,iBAAiBqK,cAClDz8B,KAAKoyB,iBAAiBC,YA0BrB,YAAAlsB,MAAP,WACE,GAA0B,IAAtBnG,KAAK6jB,OAAOuI,OAAiC,IAAlBpsB,KAAK6jB,OAAOpP,EAA3C,CAIAzU,KAAK6jB,OAAOC,MAAMtL,IAAI,EAAGxY,KAAK6jB,OAAOC,MAAMnlB,IAAIqB,KAAK6jB,OAAOuI,MAAQpsB,KAAK6jB,OAAOpP,IAC/EzU,KAAK6jB,OAAOC,MAAMzjB,OAAS,EAC3BL,KAAK6jB,OAAOsI,MAAQ,EACpBnsB,KAAK6jB,OAAOuI,MAAQ,EACpBpsB,KAAK6jB,OAAOpP,EAAI,EAChB,IAAK,IAAI/W,EAAI,EAAGA,EAAIsC,KAAKsT,KAAM5V,IAC7BsC,KAAK6jB,OAAOC,MAAM3jB,KAAKH,KAAK6jB,OAAOqW,aAAa,EAAAthB,oBAElD5Y,KAAKwmB,QAAQ,EAAGxmB,KAAKsT,KAAO,GAC5BtT,KAAK+uB,UAAUxuB,KAAKP,KAAK6jB,OAAOsI,SAO3B,YAAAuQ,GAAP,SAAUC,GACR,OAAsD,KAA9C38B,KAAKwT,QAAQopB,SAAW,IAAI/6B,QAAQ86B,IA6BvC,YAAAE,YAAP,SAAmBC,GACjB98B,KAAKivB,eAAe1uB,KAAKu8B,IAWpB,YAAAjgB,MAAP,W,QAKE7c,KAAKwT,QAAQF,KAAOtT,KAAKsT,KACzBtT,KAAKwT,QAAQmD,KAAO3W,KAAK2W,KACzB,IAAMgT,EAAwB3pB,KAAKgxB,uBAC7B+L,EAAgB/8B,KAAKoxB,eAE3BpxB,KAAKywB,SACLzwB,KAAK0Q,eAAemM,QACpB7c,KAAKswB,gBAAgBzT,QACrB7c,KAAK8vB,aAAajT,QAClB7c,KAAKiwB,kBAAkBpT,QACD,QAAtB,EAAA7c,KAAK2zB,yBAAiB,SAAE9W,QAGxB7c,KAAKgxB,uBAAyBrH,EAC9B3pB,KAAKoxB,eAAiB2L,EAGtB/8B,KAAKwmB,QAAQ,EAAGxmB,KAAKsT,KAAO,GACf,QAAb,EAAAtT,KAAKwyB,gBAAQ,SAAEC,kBAIV,YAAAmG,OAAP,SAAc5F,EAAWgK,GACvB,GAAKh9B,KAAKwT,QAAQypB,cAAiBD,EAKnC,OAFAhK,EAAG6F,iBACH7F,EAAGkK,mBACI,GAGD,YAAAf,YAAR,WACE,OAAO,GAKD,YAAAF,WAAR,WACE,MAAkC,UAA3Bj8B,KAAKwT,QAAQ2pB,WAKf,YAAA/R,MAAP,SAAavlB,EAA2BwlB,GACtCrrB,KAAK0wB,aAAatF,MAAMvlB,EAAMwlB,IAGzB,YAAA+R,UAAP,SAAiBv3B,GACf7F,KAAK0wB,aAAa0M,UAAUv3B,IAEhC,EA76CA,CAA8B,EAAA/D,YAAjB,EAAAmmB,Y,mfCpEb,WACA,OAYA,aAkBE,WACmBoV,EACA1H,EACgBjlB,EACCC,EACCyhB,EACJtC,GALd,KAAAuN,YACA,KAAA1H,mBACgB,KAAAjlB,iBACC,KAAAC,kBACC,KAAAyhB,mBACJ,KAAAtC,eAE/B9vB,KAAKs9B,cAAe,EACpBt9B,KAAKu9B,uBAAwB,EAC7Bv9B,KAAKw9B,qBAAuB,CAAE13B,MAAO,EAAGC,IAAK,GAuLjD,OAjLS,YAAAwuB,iBAAP,WACEv0B,KAAKs9B,cAAe,EACpBt9B,KAAKw9B,qBAAqB13B,MAAQ9F,KAAKq9B,UAAUt+B,MAAMsB,OACvDL,KAAK21B,iBAAiB8H,YAAc,GACpCz9B,KAAK21B,iBAAiBjkB,UAAUC,IAAI,WAO/B,YAAA6iB,kBAAP,SAAyBxB,GAAzB,WACEhzB,KAAK21B,iBAAiB8H,YAAczK,EAAGntB,KACvC7F,KAAK00B,4BACL4H,YAAW,WACT,EAAKkB,qBAAqBz3B,IAAM,EAAKs3B,UAAUt+B,MAAMsB,SACpD,IAOE,YAAAo0B,eAAP,WACEz0B,KAAK09B,sBAAqB,IAQrB,YAAArC,QAAP,SAAerI,GACb,GAAIhzB,KAAKs9B,cAAgBt9B,KAAKu9B,sBAAuB,CACnD,GAAmB,MAAfvK,EAAG6I,QAEL,OAAO,EAET,GAAmB,KAAf7I,EAAG6I,SAAiC,KAAf7I,EAAG6I,SAAiC,KAAf7I,EAAG6I,QAE/C,OAAO,EAIT77B,KAAK09B,sBAAqB,GAG5B,OAAmB,MAAf1K,EAAG6I,UAGL77B,KAAK29B,6BACE,IAcH,YAAAD,qBAAR,SAA6BE,GAA7B,WAKE,GAJA59B,KAAK21B,iBAAiBjkB,UAAU4hB,OAAO,UACvCtzB,KAAKs9B,cAAe,EACpBt9B,KAAK69B,yBAEAD,EAKE,CAGL,IAAM,EAA6B,CACjC93B,MAAO9F,KAAKw9B,qBAAqB13B,MACjCC,IAAK/F,KAAKw9B,qBAAqBz3B,KAWjC/F,KAAKu9B,uBAAwB,EAC7BjB,YAAW,WAET,GAAI,EAAKiB,sBAAuB,CAC9B,EAAKA,uBAAwB,EAC7B,IAAIl3B,OAAK,EAGPA,EAFE,EAAKi3B,aAEC,EAAKD,UAAUt+B,MAAM4lB,UAAU,EAA2B7e,MAAO,EAA2BC,KAK5F,EAAKs3B,UAAUt+B,MAAM4lB,UAAU,EAA2B7e,OAEpE,EAAKgqB,aAAaoD,iBAAiB7sB,GAAO,MAE3C,OAtCoB,CAEvBrG,KAAKu9B,uBAAwB,EAC7B,IAAMl3B,EAAQrG,KAAKq9B,UAAUt+B,MAAM4lB,UAAU3kB,KAAKw9B,qBAAqB13B,MAAO9F,KAAKw9B,qBAAqBz3B,KACxG/F,KAAK8vB,aAAaoD,iBAAiB7sB,GAAO,KA4CtC,YAAAs3B,0BAAR,sBACQG,EAAW99B,KAAKq9B,UAAUt+B,MAChCu9B,YAAW,WAET,IAAK,EAAKgB,aAAc,CACtB,IACMS,EADW,EAAKV,UAAUt+B,MACVi/B,QAAQF,EAAU,IACpCC,EAAK19B,OAAS,GAChB,EAAKyvB,aAAaoD,iBAAiB6K,GAAM,MAG5C,IASE,YAAArJ,0BAAP,SAAiCuJ,GAAjC,WACE,GAAKj+B,KAAKs9B,aAAV,CAIA,GAAIt9B,KAAK0Q,eAAemT,OAAOqa,mBAAoB,CACjD,IAAMC,EAAa50B,KAAKoB,KAAK3K,KAAKoyB,iBAAiBje,OAASnU,KAAK2Q,gBAAgB6C,QAAQ4qB,YACnFC,EAAYr+B,KAAK0Q,eAAemT,OAAOpP,EAAI0pB,EAC3CG,EAAat+B,KAAK0Q,eAAemT,OAAOrP,EAAIxU,KAAKoyB,iBAAiBne,MAExEjU,KAAK21B,iBAAiB/jB,MAAM+T,KAAO2Y,EAAa,KAChDt+B,KAAK21B,iBAAiB/jB,MAAMiU,IAAMwY,EAAY,KAC9Cr+B,KAAK21B,iBAAiB/jB,MAAMuC,OAASgqB,EAAa,KAClDn+B,KAAK21B,iBAAiB/jB,MAAMwsB,WAAaD,EAAa,KACtDn+B,KAAK21B,iBAAiB/jB,MAAMoF,WAAahX,KAAK2Q,gBAAgB6C,QAAQwD,WACtEhX,KAAK21B,iBAAiB/jB,MAAMmF,SAAW/W,KAAK2Q,gBAAgB6C,QAAQuD,SAAW,KAG/E,IAAMwnB,EAAwBv+B,KAAK21B,iBAAiBlQ,wBACpDzlB,KAAKq9B,UAAUzrB,MAAM+T,KAAO2Y,EAAa,KACzCt+B,KAAKq9B,UAAUzrB,MAAMiU,IAAMwY,EAAY,KACvCr+B,KAAKq9B,UAAUzrB,MAAMqC,MAAQsqB,EAAsBtqB,MAAQ,KAC3DjU,KAAKq9B,UAAUzrB,MAAMuC,OAASoqB,EAAsBpqB,OAAS,KAC7DnU,KAAKq9B,UAAUzrB,MAAMwsB,WAAaG,EAAsBpqB,OAAS,KAG9D8pB,GACH3B,YAAW,WAAM,SAAK5H,2BAA0B,KAAO,KAQnD,YAAAmJ,uBAAR,WACE79B,KAAKq9B,UAAUzrB,MAAM+T,KAAO,GAC5B3lB,KAAKq9B,UAAUzrB,MAAMiU,IAAM,IAjNlB+P,EAAiB,GAqBzB,MAAA/0B,gBACA,MAAAQ,iBACA,MAAAsB,kBACA,MAAA3B,eAxBQ40B,GAAb,GAAa,EAAAA,qB,+zBCbb,WACA,OAEA,OACA,OAQA,cAiBE,WACmB4I,EACApJ,EACAqJ,EACgB/tB,EACCC,EACCyhB,EACFrB,GAPnC,MASE,cAAO,K,OARU,EAAAyN,eACA,EAAApJ,mBACA,EAAAqJ,cACgB,EAAA/tB,iBACC,EAAAC,kBACC,EAAAyhB,mBACF,EAAArB,iBAvB5B,EAAA2N,eAAyB,EACxB,EAAAC,kBAA4B,EAC5B,EAAAC,0BAAoC,EACpC,EAAAC,4BAAsC,EACtC,EAAAC,0BAAoC,EACpC,EAAAC,YAAsB,EACtB,EAAAC,eAAyB,EAKzB,EAAAC,oBAA8B,EAE9B,EAAAC,uBAAwC,KACxC,EAAAC,wBAAkC,EAgBxC,EAAKT,eAAkB,EAAKtJ,iBAAiBgK,YAAc,EAAKX,YAAYW,aArC9C,GAsC9B,EAAK19B,SAAS,EAAA+xB,yBAAyB,EAAK2B,iBAAkB,SAAU,EAAKrG,UAAUzvB,KAAK,KAG5Fg9B,YAAW,WAAM,SAAK7J,mBAAkB,G,EAsN5C,OAzP8B,OAsCrB,YAAA8D,cAAP,SAAqB/W,GACnBxf,KAAKo1B,iBAAiBxjB,MAAMytB,gBAAkB7f,EAAOrK,WAAWnM,KAO1D,YAAAs2B,SAAR,SAAiBC,GAAjB,WACE,GAAIA,EAKF,OAJAv/B,KAAK+mB,qBAC+B,OAAhC/mB,KAAKk/B,wBACP3Y,qBAAqBvmB,KAAKk/B,yBAIM,OAAhCl/B,KAAKk/B,yBACPl/B,KAAKk/B,uBAAyBpY,uBAAsB,WAAM,SAAKC,qBAI3D,YAAAA,cAAR,WACE,GAAI/mB,KAAKoyB,iBAAiBje,OAAS,EAAG,CACpCnU,KAAK2+B,kBAAoB3+B,KAAK+wB,eAAeyO,WAAW5rB,iBAAmBjW,OAAOiX,iBAClF5U,KAAK6+B,4BAA8B7+B,KAAKo1B,iBAAiBqK,aACzD,IAAMC,EAAkBn2B,KAAKC,MAAMxJ,KAAK2+B,kBAAoB3+B,KAAK4+B,4BAA8B5+B,KAAK6+B,4BAA8B7+B,KAAK+wB,eAAeyO,WAAWlrB,cAC7JtU,KAAK8+B,4BAA8BY,IACrC1/B,KAAK8+B,0BAA4BY,EACjC1/B,KAAKy+B,YAAY7sB,MAAMuC,OAASnU,KAAK8+B,0BAA4B,MAKrE,IAAM1E,EAAYp6B,KAAK0Q,eAAemT,OAAOsI,MAAQnsB,KAAK2+B,kBACtD3+B,KAAKo1B,iBAAiBgF,YAAcA,IAGtCp6B,KAAKm/B,wBAAyB,EAC9Bn/B,KAAKo1B,iBAAiBgF,UAAYA,GAGpCp6B,KAAKk/B,uBAAyB,MAKzB,YAAAzM,eAAP,SAAsB8M,GAEpB,QAFoB,IAAAA,OAAA,GAEhBv/B,KAAK4+B,4BAA8B5+B,KAAK0Q,eAAemT,OAAOC,MAAMzjB,OAGtE,OAFAL,KAAK4+B,0BAA4B5+B,KAAK0Q,eAAemT,OAAOC,MAAMzjB,YAClEL,KAAKs/B,SAASC,GAKhB,GAAIv/B,KAAK6+B,8BAAgC7+B,KAAK+wB,eAAeyO,WAAWlrB,aAAxE,CAMA,IAAMqrB,EAAe3/B,KAAK0Q,eAAemT,OAAOsI,MAAQnsB,KAAK2+B,kBACzD3+B,KAAKg/B,iBAAmBW,GAMxB3/B,KAAKg/B,iBAAmBh/B,KAAKo1B,iBAAiBgF,WAM9Cp6B,KAAK+wB,eAAeyO,WAAW5rB,iBAAmBjW,OAAOiX,mBAAqB5U,KAAK2+B,mBAXrF3+B,KAAKs/B,SAASC,QAPdv/B,KAAKs/B,SAASC,IA6BV,YAAAxQ,UAAR,SAAkBiE,GAMhB,GAJAhzB,KAAKg/B,eAAiBh/B,KAAKo1B,iBAAiBgF,UAIvCp6B,KAAKo1B,iBAAiBwK,aAK3B,GAAI5/B,KAAKm/B,uBACPn/B,KAAKm/B,wBAAyB,MADhC,CAKA,IACMpB,EADSx0B,KAAKC,MAAMxJ,KAAKg/B,eAAiBh/B,KAAK2+B,mBAC/B3+B,KAAK0Q,eAAemT,OAAOsI,MACjDnsB,KAAKw+B,aAAaT,GAAM,KAQlB,YAAA8B,cAAR,SAAsB7M,EAAWlI,GAC/B,IAAMgV,EAAmB9/B,KAAKo1B,iBAAiBgF,UAAYp6B,KAAK6+B,4BAChE,QAAK/T,EAAS,GAAyC,IAApC9qB,KAAKo1B,iBAAiBgF,WACtCtP,EAAS,GAAKgV,EAAmB9/B,KAAK8+B,6BACnC9L,EAAG+M,YACL/M,EAAG6F,kBAEE,IAWJ,YAAAa,QAAP,SAAe1G,GACb,IAAMlI,EAAS9qB,KAAKggC,mBAAmBhN,GACvC,OAAe,IAAXlI,IAGJ9qB,KAAKo1B,iBAAiBgF,WAAatP,EAC5B9qB,KAAK6/B,cAAc7M,EAAIlI,KAGxB,YAAAkV,mBAAR,SAA2BhN,GAEzB,GAAkB,IAAdA,EAAG8E,OACL,OAAO,EAIT,IAAIhN,EAAS9qB,KAAKigC,qBAAqBjN,EAAG8E,OAAQ9E,GAMlD,OALIA,EAAGkN,YAAcC,WAAWC,eAC9BtV,GAAU9qB,KAAK2+B,kBACN3L,EAAGkN,YAAcC,WAAWE,iBACrCvV,GAAU9qB,KAAK2+B,kBAAoB3+B,KAAK0Q,eAAe4C,MAElDwX,GAQF,YAAAuO,iBAAP,SAAwBrG,GAEtB,GAAkB,IAAdA,EAAG8E,OACL,OAAO,EAIT,IAAIhN,EAAS9qB,KAAKigC,qBAAqBjN,EAAG8E,OAAQ9E,GASlD,OARIA,EAAGkN,YAAcC,WAAWG,iBAC9BxV,GAAU9qB,KAAK2+B,kBAAoB,EACnC3+B,KAAKi/B,qBAAuBnU,EAC5BA,EAASvhB,KAAKg3B,MAAMh3B,KAAKkwB,IAAIz5B,KAAKi/B,uBAAyBj/B,KAAKi/B,oBAAsB,EAAI,GAAK,GAC/Fj/B,KAAKi/B,qBAAuB,GACnBjM,EAAGkN,YAAcC,WAAWE,iBACrCvV,GAAU9qB,KAAK0Q,eAAe4C,MAEzBwX,GAGD,YAAAmV,qBAAR,SAA6BnV,EAAgBkI,GAC3C,IAAMwN,EAAWxgC,KAAK2Q,gBAAgB6C,QAAQitB,mBAE9C,MAAkB,QAAbD,GAAsBxN,EAAGmF,QACd,SAAbqI,GAAuBxN,EAAGkF,SACb,UAAbsI,GAAwBxN,EAAGqF,SACrBvN,EAAS9qB,KAAK2Q,gBAAgB6C,QAAQktB,sBAAwB1gC,KAAK2Q,gBAAgB6C,QAAQmtB,kBAG7F7V,EAAS9qB,KAAK2Q,gBAAgB6C,QAAQmtB,mBAOxC,YAAAhH,aAAP,SAAoB3G,GAClBhzB,KAAK++B,YAAc/L,EAAG4N,QAAQ,GAAGC,OAO5B,YAAAjH,YAAP,SAAmB5G,GACjB,IAAM8E,EAAS93B,KAAK++B,YAAc/L,EAAG4N,QAAQ,GAAGC,MAEhD,OADA7gC,KAAK++B,YAAc/L,EAAG4N,QAAQ,GAAGC,MAClB,IAAX/I,IAGJ93B,KAAKo1B,iBAAiBgF,WAAatC,EAC5B93B,KAAK6/B,cAAc7M,EAAI8E,KAvPrBzB,EAAQ,GAqBhB,MAAAx1B,gBACA,MAAAQ,iBACA,MAAAsB,kBACA,MAAAG,iBAxBQuzB,GAAb,CAA8B,EAAAv0B,YAAjB,EAAAu0B,Y,6BCLb,SAAgByK,EAAuBpc,GACrC,OAAOA,EAAKsZ,QAAQ,SAAU,MAOhC,SAAgB+C,EAAoBrc,EAAcyM,GAChD,OAAIA,EACK,SAAczM,EAAO,SAEvBA,EA4BT,SAAgB8G,EAAM9G,EAAcsE,EAA+BmI,EAA6B6P,GAE9Ftc,EAAOqc,EADPrc,EAAOoc,EAAuBpc,GACGyM,GACjC6P,EAAY9N,iBAAiBxO,GAAM,GACnCsE,EAASjqB,MAAQ,GAQnB,SAAgBm1B,EAA6BlB,EAAgBhK,EAA+BgL,GAG1F,IAAM7sB,EAAM6sB,EAAcvO,wBACpBE,EAAOqN,EAAGtN,QAAUve,EAAIwe,KAAO,GAC/BE,EAAMmN,EAAGpN,QAAUze,EAAI0e,IAAM,GAGnCmD,EAASpX,MAAMqvB,SAAW,WAC1BjY,EAASpX,MAAMqC,MAAQ,OACvB+U,EAASpX,MAAMuC,OAAS,OACxB6U,EAASpX,MAAM+T,KAAUA,EAAI,KAC7BqD,EAASpX,MAAMiU,IAASA,EAAG,KAC3BmD,EAASpX,MAAMtB,OAAS,OAExB0Y,EAASK,QAITiT,YAAW,WACTtT,EAASpX,MAAMqvB,SAAW,GAC1BjY,EAASpX,MAAMqC,MAAQ,GACvB+U,EAASpX,MAAMuC,OAAS,GACxB6U,EAASpX,MAAM+T,KAAO,GACtBqD,EAASpX,MAAMiU,IAAM,GACrBmD,EAASpX,MAAMtB,OAAS,KACvB,K,iDA9EL,2BAQA,wBAWA,uBAA4B0iB,EAAoBkO,GAC1ClO,EAAGmO,eACLnO,EAAGmO,cAAcC,QAAQ,aAAcF,EAAiBhG,eAG1DlI,EAAG6F,kBAQL,4BAAiC7F,EAAoBhK,EAA+BmI,EAA6B6P,GAC/GhO,EAAGkK,kBACClK,EAAGmO,eAEL3V,EADawH,EAAGmO,cAAcE,QAAQ,cAC1BrY,EAAUmI,EAAoB6P,IAI9C,UAYA,iCAoCA,6BAAkChO,EAAgBhK,EAA+BgL,EAA4BkN,EAAqCI,GAChJpN,EAA6BlB,EAAIhK,EAAUgL,GAEvCsN,IAAqBJ,EAAiBK,mBAAmBvO,IAC3DkO,EAAiBM,mBAAmBxO,GAItChK,EAASjqB,MAAQmiC,EAAiBhG,cAClClS,EAASsB,W,8ZCtGX,YACA,QACA,QACA,OACA,QACA,OACA,QACA,OAEA,OACA,OACA,OAGA,QACA,QACA,OAKMmX,EAAkC,CAAC,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,GAqCtF,SAASC,EAAoBniC,EAAWoiC,GACtC,GAAIpiC,EAAI,GACN,OAAOoiC,EAAKC,cAAe,EAE7B,OAAQriC,GACN,KAAK,EAAG,QAASoiC,EAAKE,WACtB,KAAK,EAAG,QAASF,EAAKG,YACtB,KAAK,EAAG,QAASH,EAAKI,eACtB,KAAK,EAAG,QAASJ,EAAKK,iBACtB,KAAK,EAAG,QAASL,EAAKM,SACtB,KAAK,EAAG,QAASN,EAAKO,SACtB,KAAK,EAAG,QAASP,EAAKQ,WACtB,KAAK,EAAG,QAASR,EAAKS,gBACtB,KAAK,EAAG,QAAST,EAAKU,YACtB,KAAK,GAAI,QAASV,EAAKW,cACvB,KAAK,GAAI,QAASX,EAAKY,YACvB,KAAK,GAAI,QAASZ,EAAKa,eACvB,KAAK,GAAI,QAASb,EAAKc,iBACvB,KAAK,GAAI,QAASd,EAAKe,oBACvB,KAAK,GAAI,QAASf,EAAKgB,kBACvB,KAAK,GAAI,QAAShB,EAAKiB,gBACvB,KAAK,GAAI,QAASjB,EAAKkB,mBACvB,KAAK,GAAI,QAASlB,EAAKmB,aACvB,KAAK,GAAI,QAASnB,EAAKoB,YACvB,KAAK,GAAI,QAASpB,EAAKqB,UACvB,KAAK,GAAI,QAASrB,EAAKsB,SACvB,KAAK,GAAI,QAAStB,EAAKC,YAEzB,OAAO,EAoCT,iBAGE,WACUlxB,EACAof,EACAF,EACAjf,GAHA,KAAAD,iBACA,KAAAof,eACA,KAAAF,cACA,KAAAjf,kBANF,KAAAsI,MAAqB,IAAIC,YAAY,GAgD/C,OAvCE,YAAAgG,KAAA,SAAKxD,GACH1b,KAAKiZ,MAAQ,IAAIC,YAAY,IAG/B,YAAAkF,IAAA,SAAIvY,EAAmBC,EAAeC,GACpC/F,KAAKiZ,MAAQ,EAAAiqB,OAAOljC,KAAKiZ,MAAOpT,EAAKqU,SAASpU,EAAOC,KAGvD,YAAAkZ,OAAA,SAAOV,GACL,GAAKA,EAAL,CAIA,IAAM1Y,EAAO,EAAAwY,cAAcre,KAAKiZ,OAEhC,OADAjZ,KAAKiZ,MAAQ,IAAIC,YAAY,GACrBrT,GAEN,IAAK,KACH,OAAO7F,KAAK8vB,aAAaoD,iBAAoB,EAAAlnB,GAAG4B,IAAG,UAAU,EAAA5B,GAAG4B,IAAG,MACrE,IAAK,KACH,OAAO5N,KAAK8vB,aAAaoD,iBAAoB,EAAAlnB,GAAG4B,IAAG,aAAa,EAAA5B,GAAG4B,IAAG,MACxE,IAAK,IACH,IAAMu1B,EAAWnjC,KAAK0Q,eAAemT,OAAOuW,UAAY,EAChD,KAAOp6B,KAAK0Q,eAAemT,OAAOyW,aAAe,GAAK,IAC9D,OAAOt6B,KAAK8vB,aAAaoD,iBAAoB,EAAAlnB,GAAG4B,IAAG,OAAOu1B,EAAK,EAAAn3B,GAAG4B,IAAG,MACvE,IAAK,IAEH,OAAO5N,KAAK8vB,aAAaoD,iBAAoB,EAAAlnB,GAAG4B,IAAG,SAAS,EAAA5B,GAAG4B,IAAG,MACpE,IAAK,KACH,IACIgE,EADoC,CAAC,MAAS,EAAG,UAAa,EAAG,IAAO,GACzD5R,KAAK2Q,gBAAgB6C,QAAQ4vB,aAEhD,OADAxxB,GAAS5R,KAAK2Q,gBAAgB6C,QAAQ6vB,YAAc,EAAI,EACjDrjC,KAAK8vB,aAAaoD,iBAAoB,EAAAlnB,GAAG4B,IAAG,OAAOgE,EAAK,KAAK,EAAA5F,GAAG4B,IAAG,MAC5E,QAEE5N,KAAK4vB,YAAYiF,MAAM,oBAAqBhvB,GAC5C7F,KAAK8vB,aAAaoD,iBAAoB,EAAAlnB,GAAG4B,IAAG,OAAO,EAAA5B,GAAG4B,IAAG,YA1B3D5N,KAAKiZ,MAAQ,IAAIC,YAAY,IA6BnC,EAjDA,GAoFA,cA0BE,WACUoqB,EACS5yB,EACA4f,EACAR,EACAK,EACAP,EACAjf,EACAsf,EACAsT,EACAjU,EACAzG,QAAA,IAAAA,MAAA,IAAqC,EAAA2a,sBAXxD,MAaE,cAAO,KAZC,EAAAF,YACS,EAAA5yB,iBACA,EAAA4f,kBACA,EAAAR,eACA,EAAAK,mBACA,EAAAP,cACA,EAAAjf,kBACA,EAAAsf,oBACA,EAAAsT,kBACA,EAAAjU,wBACA,EAAAzG,UApCX,EAAA4a,aAA4B,IAAIvqB,YAAY,MAC5C,EAAAwqB,eAAgC,IAAI,EAAAj9B,cACpC,EAAAk9B,aAA4B,IAAI,EAAAn8B,YAChC,EAAA8b,UAAsB,IAAI,EAAA/f,SAC1B,EAAAqgC,aAAe,GACf,EAAAC,UAAY,GACZ,EAAAC,kBAA8B,GAC9B,EAAAC,eAA2B,GAE3B,EAAAC,aAA+B,EAAAprB,kBAAkBtU,QACjD,EAAA2/B,uBAAyC,EAAArrB,kBAAkBtU,QAE3D,EAAA4/B,sBAAwB,IAAI,EAAAtjC,aAE5B,EAAAujC,gBAAkB,IAAI,EAAAvjC,aAEtB,EAAAwjC,eAAiB,IAAI,EAAAxjC,aAErB,EAAA4tB,cAAgB,IAAI,EAAA5tB,aAEpB,EAAAguB,YAAc,IAAI,EAAAhuB,aAElB,EAAAmuB,UAAY,IAAI,EAAAnuB,aAiBtB,EAAKc,SAAS,EAAKmnB,SAKnB,EAAKA,QAAQwb,uBAAsB,SAAC3mB,EAAOhC,GACzC,EAAKkU,YAAYiF,MAAM,qBAAsB,CAAEyP,WAAY,EAAKzb,QAAQ0b,cAAc7mB,GAAQhC,OAAQA,EAAOiB,eAE/G,EAAKkM,QAAQ2b,uBAAsB,SAAA9mB,GACjC,EAAKkS,YAAYiF,MAAM,qBAAsB,CAAEyP,WAAY,EAAKzb,QAAQ0b,cAAc7mB,QAExF,EAAKmL,QAAQ4b,2BAA0B,SAAAzgC,GACrC,EAAK4rB,YAAYiF,MAAM,yBAA0B,CAAE7wB,KAAI,OAEzD,EAAK6kB,QAAQ6b,uBAAsB,SAACJ,EAAY5M,EAAQ7xB,GACtD,EAAK+pB,YAAYiF,MAAM,qBAAsB,CAAEyP,WAAU,EAAE5M,OAAM,EAAE7xB,KAAI,OAEzE,EAAKgjB,QAAQ8b,uBAAsB,SAACjnB,EAAOga,EAAQkN,GAClC,SAAXlN,IACFkN,EAAUA,EAAQjoB,WAEpB,EAAKiT,YAAYiF,MAAM,qBAAsB,CAAEyP,WAAY,EAAKzb,QAAQ0b,cAAc7mB,GAAQga,OAAM,EAAEkN,QAAO,OAM/G,EAAK/b,QAAQgc,iBAAgB,SAACh/B,EAAMC,EAAOC,GAAQ,SAAK++B,MAAMj/B,EAAMC,EAAOC,MAK3E,EAAK8iB,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAKspB,YAAYtpB,MACpE,EAAKmN,QAAQkc,cAAc,CAACE,cAAe,IAAKhT,MAAO,MAAM,SAAAvW,GAAU,SAAKwpB,WAAWxpB,MACvF,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAKypB,SAASzpB,MACjE,EAAKmN,QAAQkc,cAAc,CAACE,cAAe,IAAKhT,MAAO,MAAM,SAAAvW,GAAU,SAAK0pB,YAAY1pB,MACxF,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAK2pB,WAAW3pB,MACnE,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAK4pB,cAAc5pB,MACtE,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAK6pB,eAAe7pB,MACvE,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAK8pB,eAAe9pB,MACvE,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAK+pB,oBAAoB/pB,MAC5E,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAKgqB,mBAAmBhqB,MAC3E,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAKiqB,eAAejqB,MACvE,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAKkqB,iBAAiBlqB,MACzE,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAKmqB,eAAenqB,MACvE,EAAKmN,QAAQkc,cAAc,CAACe,OAAQ,IAAK7T,MAAO,MAAM,SAAAvW,GAAU,SAAKmqB,eAAenqB,MACpF,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAKqqB,YAAYrqB,MACpE,EAAKmN,QAAQkc,cAAc,CAACe,OAAQ,IAAK7T,MAAO,MAAM,SAAAvW,GAAU,SAAKqqB,YAAYrqB,MACjF,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAKsqB,YAAYtqB,MACpE,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAKuqB,YAAYvqB,MACpE,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAKwqB,YAAYxqB,MACpE,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAKyqB,SAASzqB,MACjE,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAK0qB,WAAW1qB,MACnE,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAK2qB,WAAW3qB,MACnE,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAK4qB,kBAAkB5qB,MAC1E,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAK6qB,gBAAgB7qB,MACxE,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAK8qB,kBAAkB9qB,MAC1E,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAK+qB,yBAAyB/qB,MACjF,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAKgrB,4BAA4BhrB,MACpF,EAAKmN,QAAQkc,cAAc,CAACe,OAAQ,IAAK7T,MAAO,MAAM,SAAAvW,GAAU,SAAKirB,8BAA8BjrB,MACnG,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAKkrB,gBAAgBlrB,MACxE,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAKmrB,kBAAkBnrB,MAC1E,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAKorB,WAAWprB,MACnE,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAKqrB,SAASrrB,MACjE,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAKsrB,QAAQtrB,MAChE,EAAKmN,QAAQkc,cAAc,CAACe,OAAQ,IAAK7T,MAAO,MAAM,SAAAvW,GAAU,SAAKurB,eAAevrB,MACpF,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAKwrB,UAAUxrB,MAClE,EAAKmN,QAAQkc,cAAc,CAACe,OAAQ,IAAK7T,MAAO,MAAM,SAAAvW,GAAU,SAAKyrB,iBAAiBzrB,MACtF,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAK0rB,eAAe1rB,MACvE,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAK2rB,aAAa3rB,MACrE,EAAKmN,QAAQkc,cAAc,CAACe,OAAQ,IAAK7T,MAAO,MAAM,SAAAvW,GAAU,SAAK4rB,oBAAoB5rB,MACzF,EAAKmN,QAAQkc,cAAc,CAACE,cAAe,IAAKhT,MAAO,MAAM,SAAAvW,GAAU,SAAK6rB,UAAU7rB,MACtF,EAAKmN,QAAQkc,cAAc,CAACE,cAAe,IAAKhT,MAAO,MAAM,SAAAvW,GAAU,SAAK8rB,eAAe9rB,MAC3F,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAK+rB,gBAAgB/rB,MACxE,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAKgsB,WAAWhsB,MACnE,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAKisB,cAAcjsB,MACtE,EAAKmN,QAAQkc,cAAc,CAAC9S,MAAO,MAAM,SAAAvW,GAAU,SAAKksB,cAAclsB,MACtE,EAAKmN,QAAQkc,cAAc,CAACE,cAAe,IAAMhT,MAAO,MAAM,SAAAvW,GAAU,SAAKmsB,cAAcnsB,MAC3F,EAAKmN,QAAQkc,cAAc,CAACE,cAAe,IAAMhT,MAAO,MAAM,SAAAvW,GAAU,SAAKosB,cAAcpsB,MAK3F,EAAKmN,QAAQkf,kBAAkB,EAAA/7B,GAAGQ,KAAK,WAAM,SAAK+kB,UAClD,EAAK1I,QAAQkf,kBAAkB,EAAA/7B,GAAGW,IAAI,WAAM,SAAKq7B,cACjD,EAAKnf,QAAQkf,kBAAkB,EAAA/7B,GAAGY,IAAI,WAAM,SAAKo7B,cACjD,EAAKnf,QAAQkf,kBAAkB,EAAA/7B,GAAGa,IAAI,WAAM,SAAKm7B,cACjD,EAAKnf,QAAQkf,kBAAkB,EAAA/7B,GAAGc,IAAI,WAAM,SAAKm7B,oBACjD,EAAKpf,QAAQkf,kBAAkB,EAAA/7B,GAAGS,IAAI,WAAM,SAAKy7B,eACjD,EAAKrf,QAAQkf,kBAAkB,EAAA/7B,GAAGU,IAAI,WAAM,SAAKy7B,SACjD,EAAKtf,QAAQkf,kBAAkB,EAAA/7B,GAAGe,IAAI,WAAM,SAAKq7B,cACjD,EAAKvf,QAAQkf,kBAAkB,EAAA/7B,GAAGgB,IAAI,WAAM,SAAKq7B,aAGjD,EAAKxf,QAAQkf,kBAAkB,EAAA55B,GAAGK,KAAK,WAAM,SAAK5M,WAClD,EAAKinB,QAAQkf,kBAAkB,EAAA55B,GAAGM,KAAK,WAAM,SAAK65B,cAClD,EAAKzf,QAAQkf,kBAAkB,EAAA55B,GAAGS,KAAK,WAAM,SAAK25B,YAMlD,EAAK1f,QAAQ2f,cAAc,EAAG,IAAI,EAAA3pB,YAAW,SAAChZ,GAAmB,EAAK4iC,SAAS5iC,GAAO,EAAK6iC,YAAY7iC,OAEvG,EAAKgjB,QAAQ2f,cAAc,EAAG,IAAI,EAAA3pB,YAAW,SAAChZ,GAAiB,SAAK6iC,YAAY7iC,OAEhF,EAAKgjB,QAAQ2f,cAAc,EAAG,IAAI,EAAA3pB,YAAW,SAAChZ,GAAiB,SAAK4iC,SAAS5iC,OAqC7E,EAAKgjB,QAAQ8f,cAAc,CAAC1W,MAAO,MAAM,WAAM,SAAKyV,gBACpD,EAAK7e,QAAQ8f,cAAc,CAAC1W,MAAO,MAAM,WAAM,SAAK2V,mBACpD,EAAK/e,QAAQ8f,cAAc,CAAC1W,MAAO,MAAM,WAAM,SAAKrwB,WACpD,EAAKinB,QAAQ8f,cAAc,CAAC1W,MAAO,MAAM,WAAM,SAAKqW,cACpD,EAAKzf,QAAQ8f,cAAc,CAAC1W,MAAO,MAAM,WAAM,SAAKsW,YACpD,EAAK1f,QAAQ8f,cAAc,CAAC1W,MAAO,MAAM,WAAM,SAAK2W,kBACpD,EAAK/f,QAAQ8f,cAAc,CAAC1W,MAAO,MAAM,WAAM,SAAK4W,2BACpD,EAAKhgB,QAAQ8f,cAAc,CAAC1W,MAAO,MAAM,WAAM,SAAK6W,uBACpD,EAAKjgB,QAAQ8f,cAAc,CAAC1W,MAAO,MAAM,WAAM,SAAK8W,eACpD,EAAKlgB,QAAQ8f,cAAc,CAAC1W,MAAO,MAAM,WAAM,SAAK+W,UAAU,MAC9D,EAAKngB,QAAQ8f,cAAc,CAAC1W,MAAO,MAAM,WAAM,SAAK+W,UAAU,MAC9D,EAAKngB,QAAQ8f,cAAc,CAAC1W,MAAO,MAAM,WAAM,SAAK+W,UAAU,MAC9D,EAAKngB,QAAQ8f,cAAc,CAAC1W,MAAO,MAAM,WAAM,SAAK+W,UAAU,MAC9D,EAAKngB,QAAQ8f,cAAc,CAAC1W,MAAO,MAAM,WAAM,SAAK+W,UAAU,MAC9D,EAAKngB,QAAQ8f,cAAc,CAAC1D,cAAe,IAAKhT,MAAO,MAAM,WAAM,SAAKgX,0BACxE,EAAKpgB,QAAQ8f,cAAc,CAAC1D,cAAe,IAAKhT,MAAO,MAAM,WAAM,SAAKgX,0B,eAC7DC,GACT,EAAKrgB,QAAQ8f,cAAc,CAAC1D,cAAe,IAAKhT,MAAOiX,IAAO,WAAM,SAAKC,cAAc,IAAMD,MAC7F,EAAKrgB,QAAQ8f,cAAc,CAAC1D,cAAe,IAAKhT,MAAOiX,IAAO,WAAM,SAAKC,cAAc,IAAMD,MAC7F,EAAKrgB,QAAQ8f,cAAc,CAAC1D,cAAe,IAAKhT,MAAOiX,IAAO,WAAM,SAAKC,cAAc,IAAMD,MAC7F,EAAKrgB,QAAQ8f,cAAc,CAAC1D,cAAe,IAAKhT,MAAOiX,IAAO,WAAM,SAAKC,cAAc,IAAMD,MAC7F,EAAKrgB,QAAQ8f,cAAc,CAAC1D,cAAe,IAAKhT,MAAOiX,IAAO,WAAM,SAAKC,cAAc,IAAMD,MAC7F,EAAKrgB,QAAQ8f,cAAc,CAAC1D,cAAe,IAAKhT,MAAOiX,IAAO,WAAM,SAAKC,cAAc,IAAMD,MAC7F,EAAKrgB,QAAQ8f,cAAc,CAAC1D,cAAe,IAAKhT,MAAOiX,IAAO,WAAM,SAAKC,cAAc,IAAMD,O,OAP/F,IAAK,IAAMA,KAAQ,EAAA5tB,S,EAAR4tB,G,OASX,EAAKrgB,QAAQ8f,cAAc,CAAC1D,cAAe,IAAKhT,MAAO,MAAM,WAAM,SAAKmX,4BAKxE,EAAKvgB,QAAQwgB,iBAAgB,SAACC,GAE5B,OADA,EAAK1Z,YAAY2Z,MAAM,kBAAmBD,GACnCA,KAMT,EAAKzgB,QAAQ2gB,cAAc,CAACvE,cAAe,IAAKhT,MAAO,KAAM,IAAIwX,EAAQ,EAAK/4B,eAAgB,EAAKof,aAAc,EAAKF,YAAa,EAAKjf,kB,EAizE5I,OA9gFkC,OAchC,sBAAW,mCAAoB,C,IAA/B,WAA4D,OAAO3Q,KAAKkkC,sBAAsB3e,O,gCAE9F,sBAAW,6BAAc,C,IAAzB,WAA4C,OAAOvlB,KAAKmkC,gBAAgB5e,O,gCAExE,sBAAW,4BAAa,C,IAAxB,WAA2C,OAAOvlB,KAAKokC,eAAe7e,O,gCAEtE,sBAAW,2BAAY,C,IAAvB,WAA0C,OAAOvlB,KAAKwuB,cAAcjJ,O,gCAEpE,sBAAW,yBAAU,C,IAArB,WAAwC,OAAOvlB,KAAK4uB,YAAYrJ,O,gCAEhE,sBAAW,uBAAQ,C,IAAnB,WAAwC,OAAOvlB,KAAK+uB,UAAUxJ,O,gCAwMvD,YAAAnlB,QAAP,WACE,YAAMA,QAAO,YAGR,YAAAywB,MAAP,SAAahrB,GACX,IAAIge,EAAS7jB,KAAK0Q,eAAemT,OAC3B6lB,EAAe7lB,EAAOrP,EACtBm1B,EAAe9lB,EAAOpP,EAe5B,GAbAzU,KAAK4vB,YAAYiF,MAAM,eAAgBhvB,GAGnC7F,KAAKyjC,aAAapjC,OAASwF,EAAKxF,QAC9BL,KAAKyjC,aAAapjC,OAzYG,SA0YvBL,KAAKyjC,aAAe,IAAIvqB,YAAY3P,KAAKsB,IAAIhF,EAAKxF,OA1Y3B,UA+Y3BL,KAAKmwB,iBAAiByZ,aAGlB/jC,EAAKxF,OAlZkB,OAmZzB,IAAK,IAAI3C,EAAI,EAAGA,EAAImI,EAAKxF,OAAQ3C,GAnZR,OAmZqC,CAC5D,IAAMqI,EAAMrI,EApZW,OAoZkBmI,EAAKxF,OAAS3C,EApZhC,OAoZ6DmI,EAAKxF,OACnFwpC,EAAuB,iBAAThkC,EAChB7F,KAAK0jC,eAAet9B,OAAOP,EAAK8e,UAAUjnB,EAAGqI,GAAM/F,KAAKyjC,cACxDzjC,KAAK2jC,aAAav9B,OAAOP,EAAKqU,SAASxc,EAAGqI,GAAM/F,KAAKyjC,cACzDzjC,KAAK6oB,QAAQgI,MAAM7wB,KAAKyjC,aAAcoG,OAEnC,CACCA,EAAuB,iBAAThkC,EAChB7F,KAAK0jC,eAAet9B,OAAOP,EAAM7F,KAAKyjC,cACtCzjC,KAAK2jC,aAAav9B,OAAOP,EAAM7F,KAAKyjC,cACxCzjC,KAAK6oB,QAAQgI,MAAM7wB,KAAKyjC,aAAcoG,IAGxChmB,EAAS7jB,KAAK0Q,eAAemT,QAClBrP,IAAMk1B,GAAgB7lB,EAAOpP,IAAMk1B,GAC5C3pC,KAAKwuB,cAAcjuB,OAIrBP,KAAKkkC,sBAAsB3jC,KAAKP,KAAKmwB,iBAAiBrqB,MAAO9F,KAAKmwB,iBAAiBpqB,MAG9E,YAAA++B,MAAP,SAAaj/B,EAAmBC,EAAeC,GAC7C,IAAI/B,EACA8lC,EACEjmB,EAAS7jB,KAAK0Q,eAAemT,OAC7BkmB,EAAU/pC,KAAKswB,gBAAgByZ,QAC/BrX,EAAmB1yB,KAAK2Q,gBAAgB6C,QAAQkf,iBAChD/b,EAAO3W,KAAK0Q,eAAeiG,KAC3BqzB,EAAiBhqC,KAAK8vB,aAAayJ,gBAAgB0Q,WACnD/Y,EAAalxB,KAAKsjC,UAAUpS,WAC5BgZ,EAAUlqC,KAAKgkC,aACjBmG,EAAYtmB,EAAOC,MAAMnlB,IAAIklB,EAAOpP,EAAIoP,EAAOuI,OAEnDpsB,KAAKmwB,iBAAiBia,UAAUvmB,EAAOpP,GAGnCoP,EAAOrP,GAAKzO,EAAMD,EAAQ,GAA0C,IAArCqkC,EAAUzmC,SAASmgB,EAAOrP,EAAI,IAC/D21B,EAAUvwB,qBAAqBiK,EAAOrP,EAAI,EAAG,EAAG,EAAG01B,EAAQhnC,GAAIgnC,EAAQ/mC,IAGzE,IAAK,IAAIgE,EAAMrB,EAAOqB,EAAMpB,IAAOoB,EAAK,CAUtC,GATAnD,EAAO6B,EAAKsB,GAIZ2iC,EAAU9pC,KAAKujC,gBAAgB8G,QAAQrmC,GAKnCA,EAAO,KAAO+lC,EAAS,CACzB,IAAMO,EAAKP,EAAQpkC,OAAOC,aAAa5B,IACnCsmC,IACFtmC,EAAOsmC,EAAGxmC,WAAW,IAYzB,GARI4uB,GACF1yB,KAAKsjC,UAAUlU,kBAAkB7uB,KAAK,EAAAqD,oBAAoBI,IAOvD8lC,IAAWjmB,EAAOrP,EAAvB,CAeA,GAAIqP,EAAOrP,EAAIs1B,EAAU,GAAKnzB,EAG5B,GAAIqzB,EACFnmB,EAAOrP,EAAI,EACXqP,EAAOpP,IACHoP,EAAOpP,IAAMoP,EAAOyW,aAAe,GACrCzW,EAAOpP,IACPzU,KAAKsjC,UAAUrJ,OAAOj6B,KAAKuqC,kBAAkB,KAEzC1mB,EAAOpP,GAAKzU,KAAK0Q,eAAe4C,OAClCuQ,EAAOpP,EAAIzU,KAAK0Q,eAAe4C,KAAO,GAIxCuQ,EAAOC,MAAMnlB,IAAIklB,EAAOpP,GAAGsE,WAAY,GAGzCoxB,EAAYtmB,EAAOC,MAAMnlB,IAAIklB,EAAOpP,EAAIoP,EAAOuI,YAG/C,GADAvI,EAAOrP,EAAImC,EAAO,EACF,IAAZmzB,EAGF,SAuBN,GAjBI5Y,IAEFiZ,EAAUrwB,YAAY+J,EAAOrP,EAAGs1B,EAASjmB,EAAO0I,YAAY2d,GAAUA,GAIjC,IAAjCC,EAAUzmC,SAASiT,EAAO,IAC5BwzB,EAAUvwB,qBAAqBjD,EAAO,EAAG,EAAApU,eAAgB,EAAAD,gBAAiB4nC,EAAQhnC,GAAIgnC,EAAQ/mC,KAKlGgnC,EAAUvwB,qBAAqBiK,EAAOrP,IAAKxQ,EAAM8lC,EAASI,EAAQhnC,GAAIgnC,EAAQ/mC,IAK1E2mC,EAAU,EACZ,OAASA,GAEPK,EAAUvwB,qBAAqBiK,EAAOrP,IAAK,EAAG,EAAG01B,EAAQhnC,GAAIgnC,EAAQ/mC,SAhElEgnC,EAAUzmC,SAASmgB,EAAOrP,EAAI,GAMjC21B,EAAUtwB,mBAAmBgK,EAAOrP,EAAI,EAAGxQ,GAF3CmmC,EAAUtwB,mBAAmBgK,EAAOrP,EAAI,EAAGxQ,GAoE7C+B,EAAMD,EAAQ,IAChBqkC,EAAUzwB,SAASmK,EAAOrP,EAAI,EAAGxU,KAAKsjB,WACJ,IAA9BtjB,KAAKsjB,UAAU5f,YAAoB1D,KAAKsjB,UAAUzf,UAAY,MAChE7D,KAAK6oB,QAAQ2hB,mBAAqB,EACzBxqC,KAAKsjB,UAAU7f,aACxBzD,KAAK6oB,QAAQ2hB,mBAAqBxqC,KAAKsjB,UAAU3f,WAAWG,WAAW,GAEvE9D,KAAK6oB,QAAQ2hB,mBAAqBxqC,KAAKsjB,UAAUrgB,SAKjD4gB,EAAOrP,EAAImC,GAAQ5Q,EAAMD,EAAQ,GAAsC,IAAjCqkC,EAAUzmC,SAASmgB,EAAOrP,KAAa21B,EAAU5wB,WAAWsK,EAAOrP,IAC3G21B,EAAUvwB,qBAAqBiK,EAAOrP,EAAG,EAAG,EAAG01B,EAAQhnC,GAAIgnC,EAAQ/mC,IAGrEnD,KAAKmwB,iBAAiBia,UAAUvmB,EAAOpP,IAMlC,YAAA8Y,cAAP,SAAqBld,EAAyBgb,GAA9C,WACE,MAAiB,MAAbhb,EAAG4hB,OAAkB5hB,EAAGy1B,QAAWz1B,EAAG40B,cASnCjlC,KAAK6oB,QAAQ0E,cAAcld,EAAIgb,GAP7BrrB,KAAK6oB,QAAQ0E,cAAcld,GAAI,SAAAqL,GACpC,OAAKgmB,EAAoBhmB,EAAOA,OAAO,GAAI,EAAK/K,gBAAgB6C,QAAQm0B,gBAGjEtc,EAAS3P,OASf,YAAA+R,cAAP,SAAqBpd,EAAyBgb,GAC5C,OAAOrrB,KAAK6oB,QAAQ4E,cAAcpd,EAAI,IAAI,EAAAgP,WAAWgM,KAMhD,YAAAsC,cAAP,SAAqBtd,EAAyBgb,GAC5C,OAAOrrB,KAAK6oB,QAAQ8E,cAActd,EAAIgb,IAMjC,YAAAwC,cAAP,SAAqBnQ,EAAe2N,GAClC,OAAOrrB,KAAK6oB,QAAQgF,cAAcnQ,EAAO,IAAI,EAAAmB,WAAWwM,KAWnD,YAAAkG,KAAP,WACEvxB,KAAKokC,eAAe7jC,QAaf,YAAAynC,SAAP,WAEE,IAAMnkB,EAAS7jB,KAAK0Q,eAAemT,OAEnC7jB,KAAKmwB,iBAAiBia,UAAUvmB,EAAOpP,GACnCzU,KAAK2Q,gBAAgB6C,QAAQi3B,aAC/B5mB,EAAOrP,EAAI,GAEbqP,EAAOpP,IACHoP,EAAOpP,IAAMoP,EAAOyW,aAAe,GACrCzW,EAAOpP,IACPzU,KAAKsjC,UAAUrJ,OAAOj6B,KAAKuqC,mBAClB1mB,EAAOpP,GAAKzU,KAAK0Q,eAAe4C,OACzCuQ,EAAOpP,EAAIzU,KAAK0Q,eAAe4C,KAAO,GAGpCuQ,EAAOrP,GAAKxU,KAAK0Q,eAAeiG,MAClCkN,EAAOrP,IAETxU,KAAKmwB,iBAAiBia,UAAUvmB,EAAOpP,GAEvCzU,KAAK4uB,YAAYruB,QASZ,YAAA0nC,eAAP,WACEjoC,KAAK0Q,eAAemT,OAAOrP,EAAI,GAS1B,YAAA0zB,UAAP,WACEloC,KAAK0qC,kBACD1qC,KAAK0Q,eAAemT,OAAOrP,EAAI,GACjCxU,KAAK0Q,eAAemT,OAAOrP,KAUxB,YAAA2zB,IAAP,WACE,KAAInoC,KAAK0Q,eAAemT,OAAOrP,GAAKxU,KAAK0Q,eAAeiG,MAAxD,CAGA,IAAMg0B,EAAY3qC,KAAK0Q,eAAemT,OAAOrP,EAC7CxU,KAAK0Q,eAAemT,OAAOrP,EAAIxU,KAAK0Q,eAAemT,OAAO+mB,WACtD5qC,KAAK2Q,gBAAgB6C,QAAQkf,kBAC/B1yB,KAAKsjC,UAAUjU,iBAAiB9uB,KAAKP,KAAK0Q,eAAemT,OAAOrP,EAAIm2B,KAWjE,YAAAvC,SAAP,WACEpoC,KAAKswB,gBAAgB0Y,UAAU,IAU1B,YAAAX,QAAP,WACEroC,KAAKswB,gBAAgB0Y,UAAU,IAMzB,YAAA0B,gBAAR,WACE1qC,KAAK0Q,eAAemT,OAAOrP,EAAIjL,KAAKsB,IAAI7K,KAAK0Q,eAAeiG,KAAO,EAAGpN,KAAKmB,IAAI,EAAG1K,KAAK0Q,eAAemT,OAAOrP,IAC7GxU,KAAK0Q,eAAemT,OAAOpP,EAAIzU,KAAK8vB,aAAayJ,gBAAgBsR,OAC7DthC,KAAKsB,IAAI7K,KAAK0Q,eAAemT,OAAOyW,aAAc/wB,KAAKmB,IAAI1K,KAAK0Q,eAAemT,OAAOuW,UAAWp6B,KAAK0Q,eAAemT,OAAOpP,IAC5HlL,KAAKsB,IAAI7K,KAAK0Q,eAAe4C,KAAO,EAAG/J,KAAKmB,IAAI,EAAG1K,KAAK0Q,eAAemT,OAAOpP,IAClFzU,KAAKmwB,iBAAiBia,UAAUpqC,KAAK0Q,eAAemT,OAAOpP,IAMrD,YAAAq2B,WAAR,SAAmBt2B,EAAWC,GAC5BzU,KAAKmwB,iBAAiBia,UAAUpqC,KAAK0Q,eAAemT,OAAOpP,GACvDzU,KAAK8vB,aAAayJ,gBAAgBsR,QACpC7qC,KAAK0Q,eAAemT,OAAOrP,EAAIA,EAC/BxU,KAAK0Q,eAAemT,OAAOpP,EAAIzU,KAAK0Q,eAAemT,OAAOuW,UAAY3lB,IAEtEzU,KAAK0Q,eAAemT,OAAOrP,EAAIA,EAC/BxU,KAAK0Q,eAAemT,OAAOpP,EAAIA,GAEjCzU,KAAK0qC,kBACL1qC,KAAKmwB,iBAAiBia,UAAUpqC,KAAK0Q,eAAemT,OAAOpP,IAMrD,YAAAs2B,YAAR,SAAoBv2B,EAAWC,GAG7BzU,KAAK0qC,kBACL1qC,KAAK8qC,WAAW9qC,KAAK0Q,eAAemT,OAAOrP,EAAIA,EAAGxU,KAAK0Q,eAAemT,OAAOpP,EAAIA,IAU5E,YAAA0wB,SAAP,SAAgBzpB,GAEd,IAAMsvB,EAAYhrC,KAAK0Q,eAAemT,OAAOpP,EAAIzU,KAAK0Q,eAAemT,OAAOuW,UACxE4Q,GAAa,EACfhrC,KAAK+qC,YAAY,GAAIxhC,KAAKsB,IAAImgC,EAAWtvB,EAAOA,OAAO,IAAM,IAE7D1b,KAAK+qC,YAAY,IAAKrvB,EAAOA,OAAO,IAAM,KAWvC,YAAA2pB,WAAP,SAAkB3pB,GAEhB,IAAMuvB,EAAejrC,KAAK0Q,eAAemT,OAAOyW,aAAet6B,KAAK0Q,eAAemT,OAAOpP,EACtFw2B,GAAgB,EAClBjrC,KAAK+qC,YAAY,EAAGxhC,KAAKsB,IAAIogC,EAAcvvB,EAAOA,OAAO,IAAM,IAE/D1b,KAAK+qC,YAAY,EAAGrvB,EAAOA,OAAO,IAAM,IAUrC,YAAA4pB,cAAP,SAAqB5pB,GACnB1b,KAAK+qC,YAAYrvB,EAAOA,OAAO,IAAM,EAAG,IASnC,YAAA6pB,eAAP,SAAsB7pB,GACpB1b,KAAK+qC,cAAcrvB,EAAOA,OAAO,IAAM,GAAI,IAWtC,YAAA8pB,eAAP,SAAsB9pB,GACpB1b,KAAKqlC,WAAW3pB,GAChB1b,KAAK0Q,eAAemT,OAAOrP,EAAI,GAW1B,YAAAixB,oBAAP,SAA2B/pB,GACzB1b,KAAKmlC,SAASzpB,GACd1b,KAAK0Q,eAAemT,OAAOrP,EAAI,GAS1B,YAAAkxB,mBAAP,SAA0BhqB,GACxB1b,KAAK8qC,YAAYpvB,EAAOA,OAAO,IAAM,GAAK,EAAG1b,KAAK0Q,eAAemT,OAAOpP,IAYnE,YAAAkxB,eAAP,SAAsBjqB,GACpB1b,KAAK8qC,WAEFpvB,EAAOrb,QAAU,GAAMqb,EAAOA,OAAO,IAAM,GAAK,EAAI,GAEpDA,EAAOA,OAAO,IAAM,GAAK,IAUvB,YAAA6qB,gBAAP,SAAuB7qB,GACrB1b,KAAK8qC,YAAYpvB,EAAOA,OAAO,IAAM,GAAK,EAAG1b,KAAK0Q,eAAemT,OAAOpP,IASnE,YAAA+xB,kBAAP,SAAyB9qB,GACvB1b,KAAK+qC,YAAYrvB,EAAOA,OAAO,IAAM,EAAG,IASnC,YAAAkrB,gBAAP,SAAuBlrB,GACrB1b,KAAK8qC,WAAW9qC,KAAK0Q,eAAemT,OAAOrP,GAAIkH,EAAOA,OAAO,IAAM,GAAK,IAUnE,YAAAmrB,kBAAP,SAAyBnrB,GACvB1b,KAAK+qC,YAAY,EAAGrvB,EAAOA,OAAO,IAAM,IAWnC,YAAAorB,WAAP,SAAkBprB,GAChB1b,KAAK2lC,eAAejqB,IAcf,YAAAqrB,SAAP,SAAgBrrB,GACd,IAAMwvB,EAAQxvB,EAAOA,OAAO,GACd,IAAVwvB,SACKlrC,KAAK0Q,eAAemT,OAAOsnB,KAAKnrC,KAAK0Q,eAAemT,OAAOrP,GAC/C,IAAV02B,IACTlrC,KAAK0Q,eAAemT,OAAOsnB,KAAO,KAU/B,YAAAvF,iBAAP,SAAwBlqB,GACtB,KAAI1b,KAAK0Q,eAAemT,OAAOrP,GAAKxU,KAAK0Q,eAAeiG,MAIxD,IADA,IAAIu0B,EAAQxvB,EAAOA,OAAO,IAAM,EACzBwvB,KACLlrC,KAAK0Q,eAAemT,OAAOrP,EAAIxU,KAAK0Q,eAAemT,OAAO+mB,YASvD,YAAAtE,kBAAP,SAAyB5qB,GACvB,KAAI1b,KAAK0Q,eAAemT,OAAOrP,GAAKxU,KAAK0Q,eAAeiG,MAQxD,IALA,IAAIu0B,EAAQxvB,EAAOA,OAAO,IAAM,EAG1BmI,EAAS7jB,KAAK0Q,eAAemT,OAE5BqnB,KACLrnB,EAAOrP,EAAIqP,EAAOunB,YAYd,YAAAC,mBAAR,SAA2B52B,EAAW3O,EAAeC,EAAaulC,QAAA,IAAAA,OAAA,GAChE,IAAMjxB,EAAOra,KAAK0Q,eAAemT,OAAOC,MAAMnlB,IAAIqB,KAAK0Q,eAAemT,OAAOuI,MAAQ3X,GACrF4F,EAAKJ,aACHnU,EACAC,EACA/F,KAAK0Q,eAAemT,OAAO0I,YAAYvsB,KAAKuqC,kBAC5CvqC,KAAKuqC,kBAEHe,IACFjxB,EAAKtB,WAAY,IASb,YAAAwyB,iBAAR,SAAyB92B,GACvB,IAAM4F,EAAOra,KAAK0Q,eAAemT,OAAOC,MAAMnlB,IAAIqB,KAAK0Q,eAAemT,OAAOuI,MAAQ3X,GACrF4F,EAAKzT,KAAK5G,KAAK0Q,eAAemT,OAAO0I,YAAYvsB,KAAKuqC,mBACtDlwB,EAAKtB,WAAY,GA2BZ,YAAA8sB,eAAP,SAAsBnqB,GAEpB,IAAIwC,EACJ,OAFAle,KAAK0qC,kBAEGhvB,EAAOA,OAAO,IACpB,KAAK,EAIH,IAHAwC,EAAIle,KAAK0Q,eAAemT,OAAOpP,EAC/BzU,KAAKmwB,iBAAiBia,UAAUlsB,GAChCle,KAAKqrC,mBAAmBntB,IAAKle,KAAK0Q,eAAemT,OAAOrP,EAAGxU,KAAK0Q,eAAeiG,KAAuC,IAAjC3W,KAAK0Q,eAAemT,OAAOrP,GACzG0J,EAAIle,KAAK0Q,eAAe4C,KAAM4K,IACnCle,KAAKurC,iBAAiBrtB,GAExBle,KAAKmwB,iBAAiBia,UAAUlsB,GAChC,MACF,KAAK,EASH,IARAA,EAAIle,KAAK0Q,eAAemT,OAAOpP,EAC/BzU,KAAKmwB,iBAAiBia,UAAUlsB,GAEhCle,KAAKqrC,mBAAmBntB,EAAG,EAAGle,KAAK0Q,eAAemT,OAAOrP,EAAI,GAAG,GAC5DxU,KAAK0Q,eAAemT,OAAOrP,EAAI,GAAKxU,KAAK0Q,eAAeiG,OAE1D3W,KAAK0Q,eAAemT,OAAOC,MAAMnlB,IAAIuf,EAAI,GAAGnF,WAAY,GAEnDmF,KACLle,KAAKurC,iBAAiBrtB,GAExBle,KAAKmwB,iBAAiBia,UAAU,GAChC,MACF,KAAK,EAGH,IAFAlsB,EAAIle,KAAK0Q,eAAe4C,KACxBtT,KAAKmwB,iBAAiBia,UAAUlsB,EAAI,GAC7BA,KACLle,KAAKurC,iBAAiBrtB,GAExBle,KAAKmwB,iBAAiBia,UAAU,GAChC,MACF,KAAK,EAEH,IAAMoB,EAAiBxrC,KAAK0Q,eAAemT,OAAOC,MAAMzjB,OAASL,KAAK0Q,eAAe4C,KACjFk4B,EAAiB,IACnBxrC,KAAK0Q,eAAemT,OAAOC,MAAM2nB,UAAUD,GAC3CxrC,KAAK0Q,eAAemT,OAAOuI,MAAQ7iB,KAAKmB,IAAI1K,KAAK0Q,eAAemT,OAAOuI,MAAQof,EAAgB,GAC/FxrC,KAAK0Q,eAAemT,OAAOsI,MAAQ5iB,KAAKmB,IAAI1K,KAAK0Q,eAAemT,OAAOsI,MAAQqf,EAAgB,GAE/FxrC,KAAK+uB,UAAUxuB,KAAK,MA4BrB,YAAAwlC,YAAP,SAAmBrqB,GAEjB,OADA1b,KAAK0qC,kBACGhvB,EAAOA,OAAO,IACpB,KAAK,EACH1b,KAAKqrC,mBAAmBrrC,KAAK0Q,eAAemT,OAAOpP,EAAGzU,KAAK0Q,eAAemT,OAAOrP,EAAGxU,KAAK0Q,eAAeiG,MACxG,MACF,KAAK,EACH3W,KAAKqrC,mBAAmBrrC,KAAK0Q,eAAemT,OAAOpP,EAAG,EAAGzU,KAAK0Q,eAAemT,OAAOrP,EAAI,GACxF,MACF,KAAK,EACHxU,KAAKqrC,mBAAmBrrC,KAAK0Q,eAAemT,OAAOpP,EAAG,EAAGzU,KAAK0Q,eAAeiG,MAGjF3W,KAAKmwB,iBAAiBia,UAAUpqC,KAAK0Q,eAAemT,OAAOpP,IAYtD,YAAAuxB,YAAP,SAAmBtqB,GACjB1b,KAAK0qC,kBACL,IAAIQ,EAAQxvB,EAAOA,OAAO,IAAM,EAG1BmI,EAAS7jB,KAAK0Q,eAAemT,OAEnC,KAAIA,EAAOpP,EAAIoP,EAAOyW,cAAgBzW,EAAOpP,EAAIoP,EAAOuW,WAAxD,CAQA,IAJA,IAAMxW,EAAcC,EAAOpP,EAAIoP,EAAOuI,MAEhCsf,EAAyB1rC,KAAK0Q,eAAe4C,KAAO,EAAIuQ,EAAOyW,aAC/DqR,EAAuB3rC,KAAK0Q,eAAe4C,KAAO,EAAIuQ,EAAOuI,MAAQsf,EAAyB,EAC7FR,KAGLrnB,EAAOC,MAAMxjB,OAAOqrC,EAAuB,EAAG,GAC9C9nB,EAAOC,MAAMxjB,OAAOsjB,EAAK,EAAGC,EAAOqW,aAAal6B,KAAKuqC,mBAGvDvqC,KAAKmwB,iBAAiByK,eAAe/W,EAAOpP,EAAGoP,EAAOyW,cACtDzW,EAAOrP,EAAI,IAYN,YAAAyxB,YAAP,SAAmBvqB,GACjB1b,KAAK0qC,kBACL,IAAIQ,EAAQxvB,EAAOA,OAAO,IAAM,EAG1BmI,EAAS7jB,KAAK0Q,eAAemT,OAEnC,KAAIA,EAAOpP,EAAIoP,EAAOyW,cAAgBzW,EAAOpP,EAAIoP,EAAOuW,WAAxD,CAIA,IAEIlc,EAFE0F,EAAcC,EAAOpP,EAAIoP,EAAOuI,MAKtC,IAFAlO,EAAIle,KAAK0Q,eAAe4C,KAAO,EAAIuQ,EAAOyW,aAC1Cpc,EAAIle,KAAK0Q,eAAe4C,KAAO,EAAIuQ,EAAOuI,MAAQlO,EAC3CgtB,KAGLrnB,EAAOC,MAAMxjB,OAAOsjB,EAAK,GACzBC,EAAOC,MAAMxjB,OAAO4d,EAAG,EAAG2F,EAAOqW,aAAal6B,KAAKuqC,mBAGrDvqC,KAAKmwB,iBAAiByK,eAAe/W,EAAOpP,EAAGoP,EAAOyW,cACtDzW,EAAOrP,EAAI,IAcN,YAAAwwB,YAAP,SAAmBtpB,GACjB1b,KAAK0qC,kBACL,IAAMrwB,EAAOra,KAAK0Q,eAAemT,OAAOC,MAAMnlB,IAAIqB,KAAK0Q,eAAemT,OAAOpP,EAAIzU,KAAK0Q,eAAemT,OAAOuI,OACxG/R,IACFA,EAAKP,YACH9Z,KAAK0Q,eAAemT,OAAOrP,EAC3BkH,EAAOA,OAAO,IAAM,EACpB1b,KAAK0Q,eAAemT,OAAO0I,YAAYvsB,KAAKuqC,kBAC5CvqC,KAAKuqC,kBAEPvqC,KAAKmwB,iBAAiBia,UAAUpqC,KAAK0Q,eAAemT,OAAOpP,KAexD,YAAAyxB,YAAP,SAAmBxqB,GACjB1b,KAAK0qC,kBACL,IAAMrwB,EAAOra,KAAK0Q,eAAemT,OAAOC,MAAMnlB,IAAIqB,KAAK0Q,eAAemT,OAAOpP,EAAIzU,KAAK0Q,eAAemT,OAAOuI,OACxG/R,IACFA,EAAKL,YACHha,KAAK0Q,eAAemT,OAAOrP,EAC3BkH,EAAOA,OAAO,IAAM,EACpB1b,KAAK0Q,eAAemT,OAAO0I,YAAYvsB,KAAKuqC,kBAC5CvqC,KAAKuqC,kBAEPvqC,KAAKmwB,iBAAiBia,UAAUpqC,KAAK0Q,eAAemT,OAAOpP,KAYxD,YAAA0xB,SAAP,SAAgBzqB,GAMd,IALA,IAAIwvB,EAAQxvB,EAAOA,OAAO,IAAM,EAG1BmI,EAAS7jB,KAAK0Q,eAAemT,OAE5BqnB,KACLrnB,EAAOC,MAAMxjB,OAAOujB,EAAOuI,MAAQvI,EAAOuW,UAAW,GACrDvW,EAAOC,MAAMxjB,OAAOujB,EAAOuI,MAAQvI,EAAOyW,aAAc,EAAGzW,EAAOqW,aAAal6B,KAAKuqC,mBAEtFvqC,KAAKmwB,iBAAiByK,eAAe/W,EAAOuW,UAAWvW,EAAOyW,eAQzD,YAAA8L,WAAP,SAAkB1qB,GAMhB,IALA,IAAIwvB,EAAQxvB,EAAOA,OAAO,IAAM,EAG1BmI,EAAS7jB,KAAK0Q,eAAemT,OAE5BqnB,KACLrnB,EAAOC,MAAMxjB,OAAOujB,EAAOuI,MAAQvI,EAAOyW,aAAc,GACxDzW,EAAOC,MAAMxjB,OAAOujB,EAAOuI,MAAQvI,EAAOuW,UAAW,EAAGvW,EAAOqW,aAAa,EAAAthB,oBAE9E5Y,KAAKmwB,iBAAiByK,eAAe/W,EAAOuW,UAAWvW,EAAOyW,eAqBzD,YAAA4K,WAAP,SAAkBxpB,GAChB,IAAMmI,EAAS7jB,KAAK0Q,eAAemT,OACnC,KAAIA,EAAOpP,EAAIoP,EAAOyW,cAAgBzW,EAAOpP,EAAIoP,EAAOuW,WAAxD,CAIA,IADA,IAAM8Q,EAAQxvB,EAAOA,OAAO,IAAM,EACzBjH,EAAIoP,EAAOuW,UAAW3lB,GAAKoP,EAAOyW,eAAgB7lB,EAAG,CAC5D,IAAM4F,EAAOwJ,EAAOC,MAAMnlB,IAAIklB,EAAOuI,MAAQ3X,GAC7C4F,EAAKL,YAAY,EAAGkxB,EAAOrnB,EAAO0I,YAAYvsB,KAAKuqC,kBAAmBvqC,KAAKuqC,kBAC3ElwB,EAAKtB,WAAY,EAEnB/Y,KAAKmwB,iBAAiByK,eAAe/W,EAAOuW,UAAWvW,EAAOyW,gBAsBzD,YAAA8K,YAAP,SAAmB1pB,GACjB,IAAMmI,EAAS7jB,KAAK0Q,eAAemT,OACnC,KAAIA,EAAOpP,EAAIoP,EAAOyW,cAAgBzW,EAAOpP,EAAIoP,EAAOuW,WAAxD,CAIA,IADA,IAAM8Q,EAAQxvB,EAAOA,OAAO,IAAM,EACzBjH,EAAIoP,EAAOuW,UAAW3lB,GAAKoP,EAAOyW,eAAgB7lB,EAAG,CAC5D,IAAM4F,EAAOwJ,EAAOC,MAAMnlB,IAAIklB,EAAOuI,MAAQ3X,GAC7C4F,EAAKP,YAAY,EAAGoxB,EAAOrnB,EAAO0I,YAAYvsB,KAAKuqC,kBAAmBvqC,KAAKuqC,kBAC3ElwB,EAAKtB,WAAY,EAEnB/Y,KAAKmwB,iBAAiByK,eAAe/W,EAAOuW,UAAWvW,EAAOyW,gBAYzD,YAAAuN,cAAP,SAAqBnsB,GACnB,IAAMmI,EAAS7jB,KAAK0Q,eAAemT,OACnC,KAAIA,EAAOpP,EAAIoP,EAAOyW,cAAgBzW,EAAOpP,EAAIoP,EAAOuW,WAAxD,CAIA,IADA,IAAM8Q,EAAQxvB,EAAOA,OAAO,IAAM,EACzBjH,EAAIoP,EAAOuW,UAAW3lB,GAAKoP,EAAOyW,eAAgB7lB,EAAG,CAC5D,IAAM4F,EAAOra,KAAK0Q,eAAemT,OAAOC,MAAMnlB,IAAIklB,EAAOuI,MAAQ3X,GACjE4F,EAAKP,YAAY+J,EAAOrP,EAAG02B,EAAOrnB,EAAO0I,YAAYvsB,KAAKuqC,kBAAmBvqC,KAAKuqC,kBAClFlwB,EAAKtB,WAAY,EAEnB/Y,KAAKmwB,iBAAiByK,eAAe/W,EAAOuW,UAAWvW,EAAOyW,gBAYzD,YAAAwN,cAAP,SAAqBpsB,GACnB,IAAMmI,EAAS7jB,KAAK0Q,eAAemT,OACnC,KAAIA,EAAOpP,EAAIoP,EAAOyW,cAAgBzW,EAAOpP,EAAIoP,EAAOuW,WAAxD,CAIA,IADA,IAAM8Q,EAAQxvB,EAAOA,OAAO,IAAM,EACzBjH,EAAIoP,EAAOuW,UAAW3lB,GAAKoP,EAAOyW,eAAgB7lB,EAAG,CAC5D,IAAM4F,EAAOwJ,EAAOC,MAAMnlB,IAAIklB,EAAOuI,MAAQ3X,GAC7C4F,EAAKL,YAAY6J,EAAOrP,EAAG02B,EAAOrnB,EAAO0I,YAAYvsB,KAAKuqC,kBAAmBvqC,KAAKuqC,kBAClFlwB,EAAKtB,WAAY,EAEnB/Y,KAAKmwB,iBAAiByK,eAAe/W,EAAOuW,UAAWvW,EAAOyW,gBAWzD,YAAA+L,WAAP,SAAkB3qB,GAChB1b,KAAK0qC,kBACL,IAAMrwB,EAAOra,KAAK0Q,eAAemT,OAAOC,MAAMnlB,IAAIqB,KAAK0Q,eAAemT,OAAOpP,EAAIzU,KAAK0Q,eAAemT,OAAOuI,OACxG/R,IACFA,EAAKJ,aACHja,KAAK0Q,eAAemT,OAAOrP,EAC3BxU,KAAK0Q,eAAemT,OAAOrP,GAAKkH,EAAOA,OAAO,IAAM,GACpD1b,KAAK0Q,eAAemT,OAAO0I,YAAYvsB,KAAKuqC,kBAC5CvqC,KAAKuqC,kBAEPvqC,KAAKmwB,iBAAiBia,UAAUpqC,KAAK0Q,eAAemT,OAAOpP,KA+BxD,YAAAgyB,yBAAP,SAAgC/qB,GAC9B,GAAK1b,KAAK6oB,QAAQ2hB,mBAAlB,CAMA,IAFA,IAAMnqC,EAASqb,EAAOA,OAAO,IAAM,EAC7B7V,EAAO,IAAIqT,YAAY7Y,GACpB3C,EAAI,EAAGA,EAAI2C,IAAU3C,EAC5BmI,EAAKnI,GAAKsC,KAAK6oB,QAAQ2hB,mBAEzBxqC,KAAK8kC,MAAMj/B,EAAM,EAAGA,EAAKxF,UA4BpB,YAAAqmC,4BAAP,SAAmChrB,GAC7BA,EAAOA,OAAO,GAAK,IAGnB1b,KAAKsjC,UAAU5G,GAAG,UAAY18B,KAAKsjC,UAAU5G,GAAG,iBAAmB18B,KAAKsjC,UAAU5G,GAAG,UACvF18B,KAAK8vB,aAAaoD,iBAAiB,EAAAlnB,GAAG4B,IAAM,UACnC5N,KAAKsjC,UAAU5G,GAAG,UAC3B18B,KAAK8vB,aAAaoD,iBAAiB,EAAAlnB,GAAG4B,IAAM,UA4BzC,YAAA+4B,8BAAP,SAAqCjrB,GAC/BA,EAAOA,OAAO,GAAK,IAMnB1b,KAAKsjC,UAAU5G,GAAG,SACpB18B,KAAK8vB,aAAaoD,iBAAiB,EAAAlnB,GAAG4B,IAAM,cACnC5N,KAAKsjC,UAAU5G,GAAG,gBAC3B18B,KAAK8vB,aAAaoD,iBAAiB,EAAAlnB,GAAG4B,IAAM,cACnC5N,KAAKsjC,UAAU5G,GAAG,SAG3B18B,KAAK8vB,aAAaoD,iBAAiBxX,EAAOA,OAAO,GAAK,KAC7C1b,KAAKsjC,UAAU5G,GAAG,WAC3B18B,KAAK8vB,aAAaoD,iBAAiB,EAAAlnB,GAAG4B,IAAM,mBAwBzC,YAAAo5B,QAAP,SAAetrB,GACb,IAAK,IAAIhe,EAAI,EAAGA,EAAIge,EAAOrb,OAAQ3C,IACjC,OAAQge,EAAOA,OAAOhe,IACpB,KAAK,EACHsC,KAAKsjC,UAAUpS,YAAa,IAyH7B,YAAA+V,eAAP,SAAsBvrB,GACpB,I,QAAShe,EAAI,EAAGA,EAAIge,EAAOrb,OAAQ3C,IACjC,OAAQge,EAAOA,OAAOhe,IACpB,KAAK,EACHsC,KAAK8vB,aAAayJ,gBAAgBC,uBAAwB,EAC1D,MACF,KAAK,EACHx5B,KAAKswB,gBAAgBsb,YAAY,EAAG,EAAArwB,iBACpCvb,KAAKswB,gBAAgBsb,YAAY,EAAG,EAAArwB,iBACpCvb,KAAKswB,gBAAgBsb,YAAY,EAAG,EAAArwB,iBACpCvb,KAAKswB,gBAAgBsb,YAAY,EAAG,EAAArwB,iBAEpC,MACF,KAAK,EAMCvb,KAAK2Q,gBAAgB6C,QAAQm0B,cAAc/F,cAC7C5hC,KAAKsjC,UAAU5vB,OAAO,IAAK1T,KAAK0Q,eAAe4C,MAC/CtT,KAAKmkC,gBAAgB5jC,QAEvB,MACF,KAAK,EACHP,KAAK8vB,aAAayJ,gBAAgBsR,QAAS,EAC3C7qC,KAAK8qC,WAAW,EAAG,GACnB,MACF,KAAK,EACH9qC,KAAK8vB,aAAayJ,gBAAgB0Q,YAAa,EAC/C,MACF,KAAK,GAEH,MACF,KAAK,GACHjqC,KAAK4vB,YAAYiF,MAAM,6CACvB70B,KAAK8vB,aAAayJ,gBAAgBsS,mBAAoB,EAC/B,QAAvB,EAAA7rC,KAAKsjC,UAAU9Q,gBAAQ,SAAEC,iBACzB,MACF,KAAK,EAEHzyB,KAAKiwB,kBAAkBiJ,eAAiB,MACxC,MACF,KAAK,IAEHl5B,KAAKiwB,kBAAkBiJ,eAAiB,QACxC,MACF,KAAK,KACHl5B,KAAKiwB,kBAAkBiJ,eAAiB,OACxC,MACF,KAAK,KAGHl5B,KAAKiwB,kBAAkBiJ,eAAiB,MACxC,MACF,KAAK,KAGHl5B,KAAKsjC,UAAUrQ,WAAY,EAC3B,MACF,KAAK,KACHjzB,KAAK4vB,YAAYiF,MAAM,yCACvB,MACF,KAAK,KACH70B,KAAKiwB,kBAAkB6b,eAAiB,MACxC,MACF,KAAK,KACH9rC,KAAK4vB,YAAYiF,MAAM,yCACvB,MACF,KAAK,GACH70B,KAAK8vB,aAAaic,gBAAiB,EACnC,MACF,KAAK,KACH/rC,KAAK0nC,aACL,MACF,KAAK,KACH1nC,KAAK0nC,aAEP,KAAK,GACL,KAAK,KACH1nC,KAAK0Q,eAAewY,QAAQ8iB,kBAAkBhsC,KAAKuqC,kBACnDvqC,KAAKkkC,sBAAsB3jC,KAAK,EAAGP,KAAK0Q,eAAe4C,KAAO,GACvC,QAAvB,EAAAtT,KAAKsjC,UAAU9Q,gBAAQ,SAAEC,iBACzBzyB,KAAKsjC,UAAUlQ,aACf,MACF,KAAK,KACHpzB,KAAKsjC,UAAUnS,oBAAqB,IA2BrC,YAAA+V,UAAP,SAAiBxrB,GACf,IAAK,IAAIhe,EAAI,EAAGA,EAAIge,EAAOrb,OAAQ3C,IACjC,OAAQge,EAAOA,OAAOhe,IACpB,KAAK,EACHsC,KAAKsjC,UAAUpS,YAAa,IAqH7B,YAAAiW,iBAAP,SAAwBzrB,GACtB,I,QAAShe,EAAI,EAAGA,EAAIge,EAAOrb,OAAQ3C,IACjC,OAAQge,EAAOA,OAAOhe,IACpB,KAAK,EACHsC,KAAK8vB,aAAayJ,gBAAgBC,uBAAwB,EAC1D,MACF,KAAK,EAMCx5B,KAAK2Q,gBAAgB6C,QAAQm0B,cAAc/F,cAC7C5hC,KAAKsjC,UAAU5vB,OAAO,GAAI1T,KAAK0Q,eAAe4C,MAC9CtT,KAAKmkC,gBAAgB5jC,QAEvB,MACF,KAAK,EACHP,KAAK8vB,aAAayJ,gBAAgBsR,QAAS,EAC3C7qC,KAAK8qC,WAAW,EAAG,GACnB,MACF,KAAK,EACH9qC,KAAK8vB,aAAayJ,gBAAgB0Q,YAAa,EAC/C,MACF,KAAK,GAEH,MACF,KAAK,GACHjqC,KAAK4vB,YAAYiF,MAAM,oCACvB70B,KAAK8vB,aAAayJ,gBAAgBsS,mBAAoB,EAC/B,QAAvB,EAAA7rC,KAAKsjC,UAAU9Q,gBAAQ,SAAEC,iBACzB,MACF,KAAK,EACL,KAAK,IACL,KAAK,KACL,KAAK,KACHzyB,KAAKiwB,kBAAkBiJ,eAAiB,OACxC,MACF,KAAK,KACHl5B,KAAKsjC,UAAUrQ,WAAY,EAC3B,MACF,KAAK,KACHjzB,KAAK4vB,YAAYiF,MAAM,yCACvB,MACF,KAAK,KACH70B,KAAKiwB,kBAAkB6b,eAAiB,UACxC,MACF,KAAK,KACH9rC,KAAK4vB,YAAYiF,MAAM,yCACvB,MACF,KAAK,GACH70B,KAAK8vB,aAAaic,gBAAiB,EACnC,MACF,KAAK,KACH/rC,KAAK4nC,gBACL,MACF,KAAK,KAEL,KAAK,GACL,KAAK,KAEH5nC,KAAK0Q,eAAewY,QAAQ+iB,uBACH,OAArBvwB,EAAOA,OAAOhe,IAChBsC,KAAK4nC,gBAEP5nC,KAAKkkC,sBAAsB3jC,KAAK,EAAGP,KAAK0Q,eAAe4C,KAAO,GACvC,QAAvB,EAAAtT,KAAKsjC,UAAU9Q,gBAAQ,SAAEC,iBACzBzyB,KAAKsjC,UAAUlQ,aACf,MACF,KAAK,KACHpzB,KAAKsjC,UAAUnS,oBAAqB,IAUpC,YAAA+a,cAAR,SAAsBxwB,EAAiBvU,EAAaglC,GAKlD,IAAMC,EAAO,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GAG1BC,EAAS,EAGTC,EAAU,EAEd,EAAG,CAED,GADAF,EAAKE,EAAUD,GAAU3wB,EAAOA,OAAOvU,EAAMmlC,GACzC5wB,EAAOoB,aAAa3V,EAAMmlC,GAAU,CACtC,IAAMC,EAAY7wB,EAAOsB,aAAa7V,EAAMmlC,GACxC5uC,EAAI,EACR,GACkB,IAAZ0uC,EAAK,KACPC,EAAS,GAEXD,EAAKE,EAAU5uC,EAAI,EAAI2uC,GAAUE,EAAU7uC,WAClCA,EAAI6uC,EAAUlsC,QAAU3C,EAAI4uC,EAAU,EAAID,EAASD,EAAK/rC,QACnE,MAGF,GAAiB,IAAZ+rC,EAAK,IAAYE,EAAUD,GAAU,GACtB,IAAZD,EAAK,IAAYE,EAAUD,GAAU,EAC3C,MAGED,EAAK,KACPC,EAAS,WAEFC,EAAUnlC,EAAMuU,EAAOrb,QAAUisC,EAAUD,EAASD,EAAK/rC,QAGpE,IAAS3C,EAAI,EAAGA,EAAI0uC,EAAK/rC,SAAU3C,GAChB,IAAb0uC,EAAK1uC,KACP0uC,EAAK1uC,GAAK,GAyBd,OApBgB,KAAZ0uC,EAAK,GACS,IAAZA,EAAK,IACPD,EAAKjpC,IAAM,SACXipC,EAAKjpC,KAAM,SACXipC,EAAKjpC,IAAM,EAAAiB,cAAcE,aAAa,CAAC+nC,EAAK,GAAIA,EAAK,GAAIA,EAAK,MACzC,IAAZA,EAAK,KACdD,EAAKjpC,KAAM,SACXipC,EAAKjpC,IAAM,SAAgC,IAAVkpC,EAAK,IAEnB,KAAZA,EAAK,KACE,IAAZA,EAAK,IACPD,EAAKhpC,IAAM,SACXgpC,EAAKhpC,KAAM,SACXgpC,EAAKhpC,IAAM,EAAAgB,cAAcE,aAAa,CAAC+nC,EAAK,GAAIA,EAAK,GAAIA,EAAK,MACzC,IAAZA,EAAK,KACdD,EAAKhpC,KAAM,SACXgpC,EAAKhpC,IAAM,SAAgC,IAAVipC,EAAK,KAInCE,GAwEF,YAAAlF,eAAP,SAAsB1rB,GAEpB,GAAsB,IAAlBA,EAAOrb,QAAqC,IAArBqb,EAAOA,OAAO,GAGvC,OAFA1b,KAAKgkC,aAAa9gC,GAAK,EAAA0V,kBAAkB1V,QACzClD,KAAKgkC,aAAa7gC,GAAK,EAAAyV,kBAAkBzV,IAQ3C,IAJA,IACIvD,EADE7B,EAAI2d,EAAOrb,OAEX8rC,EAAOnsC,KAAKgkC,aAETtmC,EAAI,EAAGA,EAAIK,EAAGL,KACrBkC,EAAI8b,EAAOA,OAAOhe,KACT,IAAMkC,GAAK,IAElBusC,EAAKjpC,KAAM,SACXipC,EAAKjpC,IAAM,SAAqBtD,EAAI,IAC3BA,GAAK,IAAMA,GAAK,IAEzBusC,EAAKhpC,KAAM,SACXgpC,EAAKhpC,IAAM,SAAqBvD,EAAI,IAC3BA,GAAK,IAAMA,GAAK,IAEzBusC,EAAKjpC,KAAM,SACXipC,EAAKjpC,IAAM,SAAqBtD,EAAI,IAC3BA,GAAK,KAAOA,GAAK,KAE1BusC,EAAKhpC,KAAM,SACXgpC,EAAKhpC,IAAM,SAAqBvD,EAAI,KACrB,IAANA,GAETusC,EAAKjpC,GAAK,EAAA0V,kBAAkB1V,GAC5BipC,EAAKhpC,GAAK,EAAAyV,kBAAkBzV,IACb,IAANvD,EAETusC,EAAKjpC,IAAM,UACI,IAANtD,EAETusC,EAAKhpC,IAAM,SACI,IAANvD,EAETusC,EAAKjpC,IAAM,UACI,IAANtD,EAETusC,EAAKjpC,IAAM,UACI,IAANtD,EAGTusC,EAAKjpC,IAAM,SACI,IAANtD,EAETusC,EAAKjpC,IAAM,WACI,IAANtD,EAETusC,EAAKhpC,IAAM,UACI,KAANvD,GAETusC,EAAKjpC,KAAM,UACXipC,EAAKhpC,KAAM,WACI,KAANvD,EAETusC,EAAKhpC,KAAM,SACI,KAANvD,EAETusC,EAAKjpC,KAAM,UACI,KAANtD,EAETusC,EAAKjpC,KAAM,UACI,KAANtD,EAETusC,EAAKjpC,KAAM,SACI,KAANtD,EAETusC,EAAKjpC,KAAM,WACI,KAANtD,GAETusC,EAAKjpC,KAAM,SACXipC,EAAKjpC,IAA6B,SAAvB,EAAA0V,kBAAkB1V,IACd,KAANtD,GAETusC,EAAKhpC,KAAM,SACXgpC,EAAKhpC,IAA6B,SAAvB,EAAAyV,kBAAkBzV,IACd,KAANvD,GAAkB,KAANA,EAErBlC,GAAKsC,KAAKksC,cAAcxwB,EAAQhe,EAAGyuC,GACpB,MAANvsC,GAETusC,EAAKjpC,KAAM,SACXipC,EAAKjpC,IAA6B,SAAvB,EAAA0V,kBAAkB1V,GAC7BipC,EAAKhpC,KAAM,SACXgpC,EAAKhpC,IAA6B,SAAvB,EAAAyV,kBAAkBzV,IAE7BnD,KAAK4vB,YAAYiF,MAAM,6BAA8Bj1B,IA8BpD,YAAAynC,aAAP,SAAoB3rB,GAClB,OAAQA,EAAOA,OAAO,IACpB,KAAK,EAEH1b,KAAK8vB,aAAaoD,iBAAoB,EAAAlnB,GAAG4B,IAAG,OAC5C,MACF,KAAK,EAEH,IAAM6G,EAAIzU,KAAK0Q,eAAemT,OAAOpP,EAAI,EACnCD,EAAIxU,KAAK0Q,eAAemT,OAAOrP,EAAI,EACzCxU,KAAK8vB,aAAaoD,iBAAoB,EAAAlnB,GAAG4B,IAAG,IAAI6G,EAAC,IAAID,EAAC,OAMrD,YAAA8yB,oBAAP,SAA2B5rB,GAGzB,OAAQA,EAAOA,OAAO,IACpB,KAAK,EAEH,IAAMjH,EAAIzU,KAAK0Q,eAAemT,OAAOpP,EAAI,EACnCD,EAAIxU,KAAK0Q,eAAemT,OAAOrP,EAAI,EACzCxU,KAAK8vB,aAAaoD,iBAAoB,EAAAlnB,GAAG4B,IAAG,KAAK6G,EAAC,IAAID,EAAC,OAwCtD,YAAA+yB,UAAP,SAAiB7rB,G,MACf1b,KAAK8vB,aAAaic,gBAAiB,EACnC/rC,KAAKsjC,UAAUpS,YAAa,EACL,QAAvB,EAAAlxB,KAAKsjC,UAAU9Q,gBAAQ,SAAEC,iBACzBzyB,KAAK0Q,eAAemT,OAAOuW,UAAY,EACvCp6B,KAAK0Q,eAAemT,OAAOyW,aAAet6B,KAAK0Q,eAAe4C,KAAO,EACrEtT,KAAKgkC,aAAe,EAAAprB,kBAAkBtU,QACtCtE,KAAK8vB,aAAajT,QAClB7c,KAAKswB,gBAAgBzT,QAGrB7c,KAAK0Q,eAAemT,OAAO2oB,OAAS,EACpCxsC,KAAK0Q,eAAemT,OAAO4oB,OAASzsC,KAAK0Q,eAAemT,OAAOuI,MAC/DpsB,KAAK0Q,eAAemT,OAAO6oB,iBAAiBxpC,GAAKlD,KAAKgkC,aAAa9gC,GACnElD,KAAK0Q,eAAemT,OAAO6oB,iBAAiBvpC,GAAKnD,KAAKgkC,aAAa7gC,GACnEnD,KAAK0Q,eAAemT,OAAO8oB,aAAe3sC,KAAKswB,gBAAgByZ,QAG/D/pC,KAAK8vB,aAAayJ,gBAAgBsR,QAAS,GAsBtC,YAAArD,eAAP,SAAsB9rB,GACpB,IAAMwvB,EAAQxvB,EAAOA,OAAO,IAAM,EAClC,OAAQwvB,GACN,KAAK,EACL,KAAK,EACHlrC,KAAK2Q,gBAAgB6C,QAAQ4vB,YAAc,QAC3C,MACF,KAAK,EACL,KAAK,EACHpjC,KAAK2Q,gBAAgB6C,QAAQ4vB,YAAc,YAC3C,MACF,KAAK,EACL,KAAK,EACHpjC,KAAK2Q,gBAAgB6C,QAAQ4vB,YAAc,MAG/C,IAAMwJ,EAAa1B,EAAQ,GAAM,EACjClrC,KAAK2Q,gBAAgB6C,QAAQ6vB,YAAcuJ,GAUtC,YAAAnF,gBAAP,SAAuB/rB,GACrB,IACImxB,EADEhnB,EAAMnK,EAAOA,OAAO,IAAM,GAG5BA,EAAOrb,OAAS,IAAMwsC,EAASnxB,EAAOA,OAAO,IAAO1b,KAAK0Q,eAAe4C,MAAmB,IAAXu5B,KAClFA,EAAS7sC,KAAK0Q,eAAe4C,MAG3Bu5B,EAAShnB,IACX7lB,KAAK0Q,eAAemT,OAAOuW,UAAYvU,EAAM,EAC7C7lB,KAAK0Q,eAAemT,OAAOyW,aAAeuS,EAAS,EACnD7sC,KAAK8qC,WAAW,EAAG,KAkChB,YAAAnD,cAAP,SAAqBjsB,GACnB,GAAKgmB,EAAoBhmB,EAAOA,OAAO,GAAI1b,KAAK2Q,gBAAgB6C,QAAQm0B,eAAxE,CAGA,IAAM1jC,EAAUyX,EAAOrb,OAAS,EAAKqb,EAAOA,OAAO,GAAK,EAClDzR,EAAKjK,KAAKsvB,sBAAsBwd,WAAW,EAAAhqC,gBACjD,OAAQ4Y,EAAOA,OAAO,IACpB,KAAK,GACH,GAAIzR,GAAiB,IAAXhG,EAAc,CACtB4e,QAAQkqB,IAAI9iC,EAAGu1B,YACf,IAAMwN,EAAI/iC,EAAGu1B,WAAWtrB,kBAAkB+4B,QAAQ,GAC5CC,EAAIjjC,EAAGu1B,WAAWprB,mBAAmB64B,QAAQ,GACnDjtC,KAAK8vB,aAAaoD,iBAAoB,EAAAlnB,GAAG4B,IAAG,MAAMs/B,EAAC,IAAIF,EAAC,KAE1D,MACF,KAAK,GACH,GAAI/iC,EAAI,CACA+iC,EAAI/iC,EAAGu1B,WAAW7rB,gBAAgBs5B,QAAQ,GAC1CC,EAAIjjC,EAAGu1B,WAAW5rB,iBAAiBq5B,QAAQ,GACjDjtC,KAAK8vB,aAAaoD,iBAAoB,EAAAlnB,GAAG4B,IAAG,MAAMs/B,EAAC,IAAIF,EAAC,KAE1D,MACF,KAAK,GACChtC,KAAK0Q,gBACP1Q,KAAK8vB,aAAaoD,iBAAoB,EAAAlnB,GAAG4B,IAAG,MAAM5N,KAAK0Q,eAAe4C,KAAI,IAAItT,KAAK0Q,eAAeiG,KAAI,KAExG,MACF,KAAK,GACY,IAAX1S,GAA2B,IAAXA,IAClBjE,KAAK8jC,kBAAkB3jC,KAAKH,KAAK4jC,cAC7B5jC,KAAK8jC,kBAAkBzjC,OAp4EjB,IAq4ERL,KAAK8jC,kBAAkB1L,SAGZ,IAAXn0B,GAA2B,IAAXA,IAClBjE,KAAK+jC,eAAe5jC,KAAKH,KAAK6jC,WAC1B7jC,KAAK+jC,eAAe1jC,OA14Ed,IA24ERL,KAAK+jC,eAAe3L,SAGxB,MACF,KAAK,GACY,IAAXn0B,GAA2B,IAAXA,GACdjE,KAAK8jC,kBAAkBzjC,QACzBL,KAAKyoC,SAASzoC,KAAK8jC,kBAAkBqJ,OAG1B,IAAXlpC,GAA2B,IAAXA,GACdjE,KAAK+jC,eAAe1jC,QACtBL,KAAK0oC,YAAY1oC,KAAK+jC,eAAeoJ,UAgBxC,YAAAzF,WAAP,SAAkBhsB,GAChB1b,KAAK0Q,eAAemT,OAAO2oB,OAASxsC,KAAK0Q,eAAemT,OAAOrP,EAC/DxU,KAAK0Q,eAAemT,OAAO4oB,OAASzsC,KAAK0Q,eAAemT,OAAOuI,MAAQpsB,KAAK0Q,eAAemT,OAAOpP,EAClGzU,KAAK0Q,eAAemT,OAAO6oB,iBAAiBxpC,GAAKlD,KAAKgkC,aAAa9gC,GACnElD,KAAK0Q,eAAemT,OAAO6oB,iBAAiBvpC,GAAKnD,KAAKgkC,aAAa7gC,GACnEnD,KAAK0Q,eAAemT,OAAO8oB,aAAe3sC,KAAKswB,gBAAgByZ,SAY1D,YAAAnC,cAAP,SAAqBlsB,GACnB1b,KAAK0Q,eAAemT,OAAOrP,EAAIxU,KAAK0Q,eAAemT,OAAO2oB,QAAU,EACpExsC,KAAK0Q,eAAemT,OAAOpP,EAAIlL,KAAKmB,IAAI1K,KAAK0Q,eAAemT,OAAO4oB,OAASzsC,KAAK0Q,eAAemT,OAAOuI,MAAO,GAC9GpsB,KAAKgkC,aAAa9gC,GAAKlD,KAAK0Q,eAAemT,OAAO6oB,iBAAiBxpC,GACnElD,KAAKgkC,aAAa7gC,GAAKnD,KAAK0Q,eAAemT,OAAO6oB,iBAAiBvpC,GACnEnD,KAAKswB,gBAAgByZ,QAAW/pC,KAAaotC,cACzCptC,KAAK0Q,eAAemT,OAAO8oB,eAC7B3sC,KAAKswB,gBAAgByZ,QAAU/pC,KAAK0Q,eAAemT,OAAO8oB,cAE5D3sC,KAAK0qC,mBAcA,YAAAjC,SAAP,SAAgB5iC,GACd7F,KAAK4jC,aAAe/9B,EACpB7F,KAAKsjC,UAAUzG,YAAYh3B,IAOtB,YAAA6iC,YAAP,SAAmB7iC,GACjB7F,KAAK6jC,UAAYh+B,GAYZ,YAAAyiC,SAAP,WACEtoC,KAAK0Q,eAAemT,OAAOrP,EAAI,EAC/BxU,KAAK4B,SAQA,YAAAinC,sBAAP,W,MACE7oC,KAAK4vB,YAAYiF,MAAM,6CACvB70B,KAAK8vB,aAAayJ,gBAAgBsS,mBAAoB,EAC/B,QAAvB,EAAA7rC,KAAKsjC,UAAU9Q,gBAAQ,SAAEC,kBAQpB,YAAAqW,kBAAP,W,MACE9oC,KAAK4vB,YAAYiF,MAAM,oCACvB70B,KAAK8vB,aAAayJ,gBAAgBsS,mBAAoB,EAC/B,QAAvB,EAAA7rC,KAAKsjC,UAAU9Q,gBAAQ,SAAEC,kBASpB,YAAAwW,qBAAP,WACEjpC,KAAKswB,gBAAgB0Y,UAAU,GAC/BhpC,KAAKswB,gBAAgBsb,YAAY,EAAG,EAAArwB,kBAmB/B,YAAA4tB,cAAP,SAAqBkE,GACW,IAA1BA,EAAehtC,OAIO,MAAtBgtC,EAAe,IAGnBrtC,KAAKswB,gBAAgBsb,YAAYnK,EAAO4L,EAAe,IAAK,EAAA/xB,SAAS+xB,EAAe,KAAO,EAAA9xB,iBANzFvb,KAAKipC,wBAmBF,YAAArnC,MAAP,WACE5B,KAAK0qC,kBACL,IAAM7mB,EAAS7jB,KAAK0Q,eAAemT,OACnC7jB,KAAK0Q,eAAemT,OAAOpP,IACvBoP,EAAOpP,IAAMoP,EAAOyW,aAAe,GACrCzW,EAAOpP,IACPzU,KAAKsjC,UAAUrJ,OAAOj6B,KAAKuqC,mBAClB1mB,EAAOpP,GAAKzU,KAAK0Q,eAAe4C,OACzCuQ,EAAOpP,EAAIzU,KAAK0Q,eAAe4C,KAAO,GAExCtT,KAAK0qC,mBAaA,YAAAnC,OAAP,WACEvoC,KAAK0Q,eAAemT,OAAOsnB,KAAKnrC,KAAK0Q,eAAemT,OAAOrP,IAAK,GAY3D,YAAAo0B,aAAP,WACE5oC,KAAK0qC,kBACL,IAAM7mB,EAAS7jB,KAAK0Q,eAAemT,OACnC,GAAIA,EAAOpP,IAAMoP,EAAOuW,UAAW,CAIjC,IAAMM,EAAqB7W,EAAOyW,aAAezW,EAAOuW,UACxDvW,EAAOC,MAAM6W,cAAc9W,EAAOpP,EAAIoP,EAAOuI,MAAOsO,EAAoB,GACxE7W,EAAOC,MAAMtL,IAAIqL,EAAOpP,EAAIoP,EAAOuI,MAAOvI,EAAOqW,aAAal6B,KAAKuqC,mBACnEvqC,KAAKmwB,iBAAiByK,eAAe/W,EAAOuW,UAAWvW,EAAOyW,mBAE9DzW,EAAOpP,IACPzU,KAAK0qC,mBASF,YAAA3B,UAAP,WACE/oC,KAAK6oB,QAAQhM,QACb7c,KAAKmkC,gBAAgB5jC,QAGhB,YAAAsc,MAAP,WACE7c,KAAKgkC,aAAe,EAAAprB,kBAAkBtU,QACtCtE,KAAKikC,uBAAyB,EAAArrB,kBAAkBtU,SAM1C,YAAAimC,eAAR,WAGE,OAFAvqC,KAAKikC,uBAAuB9gC,KAAM,SAClCnD,KAAKikC,uBAAuB9gC,IAA6B,SAAvBnD,KAAKgkC,aAAa7gC,GAC7CnD,KAAKikC,wBAaP,YAAA+E,UAAP,SAAiBsE,GACfttC,KAAKswB,gBAAgB0Y,UAAUsE,IAW1B,YAAAlE,uBAAP,WAEE,IAAM9zB,EAAO,IAAI,EAAA/R,SACjB+R,EAAKrS,QAAU,GAAK,GAAsB,IAAIa,WAAW,GACzDwR,EAAKpS,GAAKlD,KAAKgkC,aAAa9gC,GAC5BoS,EAAKnS,GAAKnD,KAAKgkC,aAAa7gC,GAE5B,IAAM0gB,EAAS7jB,KAAK0Q,eAAemT,OAEnC7jB,KAAK8qC,WAAW,EAAG,GACnB,IAAK,IAAIyC,EAAU,EAAGA,EAAUvtC,KAAK0Q,eAAe4C,OAAQi6B,EAAS,CACnE,IAAM3pB,EAAMC,EAAOpP,EAAIoP,EAAOuI,MAAQmhB,EACtC1pB,EAAOC,MAAMnlB,IAAIilB,GAAKhd,KAAK0O,GAC3BuO,EAAOC,MAAMnlB,IAAIilB,GAAK7K,WAAY,EAEpC/Y,KAAKmwB,iBAAiBqd,eACtBxtC,KAAK8qC,WAAW,EAAG,IAEvB,EA9gFA,CAAkC,EAAAhpC,YAArB,EAAAuvB,gB,8ZC9Mb,WAEA,QACA,QACA,QACA,QAgBA,aAGE,WAAYhxB,GACVL,KAAKytC,MAAQ,IAAI9mC,WAAWtG,GAmChC,OA3BS,YAAAqtC,WAAP,SAAkBhW,EAAsBiW,GACtC,EAAA/mC,KAAK5G,KAAKytC,MAAO/V,GAAU,EAAsCiW,IAU5D,YAAAh8B,IAAP,SAAW3N,EAAcslC,EAAoB5R,EAAsBiW,GACjE3tC,KAAKytC,MAAMnE,GAAS,EAAgCtlC,GAAQ0zB,GAAU,EAAsCiW,GAUvG,YAAAC,QAAP,SAAeC,EAAiBvE,EAAoB5R,EAAsBiW,GACxE,IAAK,IAAIjwC,EAAI,EAAGA,EAAImwC,EAAMxtC,OAAQ3C,IAChCsC,KAAKytC,MAAMnE,GAAS,EAAgCuE,EAAMnwC,IAAMg6B,GAAU,EAAsCiW,GAGtH,EAvCA,GAAa,EAAAG,kBAkDA,EAAAC,uBAAyB,WACpC,IAAMN,EAAyB,IAAIK,EAAgB,MAI7CE,EAAY1xB,MAAM2xB,MAAM,KAAM3xB,MADhB,MACoC4xB,KAAI,SAACC,EAAazwC,GAAc,OAAAA,KAClFkB,EAAI,SAACkH,EAAeC,GAA0B,OAAAioC,EAAUjkC,MAAMjE,EAAOC,IAGrEqoC,EAAaxvC,EAAE,GAAM,KACrByvC,EAAczvC,EAAE,EAAM,IAC5ByvC,EAAYluC,KAAK,IACjBkuC,EAAYluC,KAAK8tC,MAAMI,EAAazvC,EAAE,GAAM,KAE5C,IACI0qC,EADEgF,EAAmB1vC,EAAE,EAAoB,IAQ/C,IAAK0qC,KAJLmE,EAAMC,WAAW,EAAD,GAEhBD,EAAMG,QAAQQ,EAAY,EAAF,KAEVE,EACZb,EAAMG,QAAQ,CAAC,GAAM,GAAM,IAAM,KAAOtE,EAAO,EAAF,GAC7CmE,EAAMG,QAAQhvC,EAAE,IAAM,KAAO0qC,EAAO,EAAF,GAClCmE,EAAMG,QAAQhvC,EAAE,IAAM,KAAO0qC,EAAO,EAAF,GAClCmE,EAAM97B,IAAI,IAAM23B,EAAO,EAAF,GACrBmE,EAAM97B,IAAI,GAAM23B,EAAO,GAAF,GACrBmE,EAAM97B,IAAI,IAAM23B,EAAO,EAAF,GACrBmE,EAAMG,QAAQ,CAAC,IAAM,IAAM,KAAOtE,EAAO,EAAF,GACvCmE,EAAM97B,IAAI,IAAM23B,EAAO,GAAF,GACrBmE,EAAM97B,IAAI,IAAM23B,EAAO,GAAF,GAuFvB,OApFAmE,EAAMG,QAAQS,EAAa,EAAF,KACzBZ,EAAMG,QAAQS,EAAa,EAAF,KACzBZ,EAAM97B,IAAI,IAAM,EAAF,KACd87B,EAAMG,QAAQS,EAAa,EAAF,KACzBZ,EAAMG,QAAQS,EAAa,EAAF,KACzBZ,EAAM97B,IAAI,IAAM,EAAF,KACd87B,EAAMG,QAAQS,EAAa,EAAF,KACzBZ,EAAM97B,IAAI,IAAM,EAAF,KACd87B,EAAMG,QAAQS,EAAa,EAAF,KACzBZ,EAAMG,QAAQS,EAAa,EAAF,KACzBZ,EAAM97B,IAAI,IAAM,EAAF,KACd87B,EAAMG,QAAQS,EAAa,EAAF,KACzBZ,EAAM97B,IAAI,IAAM,EAAF,KAEd87B,EAAM97B,IAAI,GAAM,EAAF,KACd87B,EAAMG,QAAQQ,EAAY,EAAF,KACxBX,EAAM97B,IAAI,IAAM,EAAF,KACd87B,EAAMG,QAAQ,CAAC,IAAM,GAAM,GAAM,GAAM,GAAO,EAAF,KAC5CH,EAAMG,QAAQhvC,EAAE,GAAM,IAAO,EAAF,KAE3B6uC,EAAMG,QAAQ,CAAC,GAAM,GAAM,IAAO,EAAF,KAChCH,EAAMG,QAAQQ,EAAY,EAAF,KACxBX,EAAMG,QAAQS,EAAa,EAAF,KACzBZ,EAAM97B,IAAI,IAAM,EAAF,KACd87B,EAAM97B,IAAI,IAAM,EAAF,KAEd87B,EAAM97B,IAAI,GAAM,EAAF,MACd87B,EAAMG,QAAQhvC,EAAE,GAAM,KAAO,EAAF,KAC3B6uC,EAAMG,QAAQhvC,EAAE,GAAM,IAAO,EAAF,KAC3B6uC,EAAMG,QAAQ,CAAC,GAAM,GAAM,GAAM,IAAO,EAAF,KACtCH,EAAMG,QAAQhvC,EAAE,GAAM,IAAO,EAAF,KAC3B6uC,EAAMG,QAAQhvC,EAAE,GAAM,KAAO,EAAF,KAC3B6uC,EAAMG,QAAQ,CAAC,GAAM,GAAM,GAAM,IAAO,EAAF,KACtCH,EAAMG,QAAQhvC,EAAE,GAAM,IAAO,EAAF,KAC3B6uC,EAAM97B,IAAI,IAAM,EAAF,KACd87B,EAAMG,QAAQhvC,EAAE,GAAM,KAAO,EAAF,KAC3B6uC,EAAMG,QAAQhvC,EAAE,GAAM,IAAO,EAAF,KAC3B6uC,EAAMG,QAAQhvC,EAAE,GAAM,IAAO,EAAF,KAC3B6uC,EAAMG,QAAQhvC,EAAE,GAAM,IAAO,EAAF,KAC3B6uC,EAAMG,QAAQhvC,EAAE,GAAM,KAAO,EAAF,KAC3B6uC,EAAMG,QAAQhvC,EAAE,GAAM,IAAO,EAAF,KAE3B6uC,EAAMG,QAAQhvC,EAAE,GAAM,IAAO,EAAF,KAC3B6uC,EAAMG,QAAQhvC,EAAE,GAAM,IAAO,EAAF,KAC3B6uC,EAAMG,QAAQhvC,EAAE,GAAM,KAAO,EAAF,MAC3B6uC,EAAMG,QAAQhvC,EAAE,GAAM,IAAO,EAAF,MAC3B6uC,EAAMG,QAAQhvC,EAAE,GAAM,IAAO,EAAF,MAC3B6uC,EAAMG,QAAQ,CAAC,GAAM,GAAM,IAAO,EAAF,MAChCH,EAAMG,QAAQhvC,EAAE,GAAM,KAAO,EAAF,MAE3B6uC,EAAM97B,IAAI,GAAM,EAAF,MACd87B,EAAMG,QAAQS,EAAa,EAAF,KACzBZ,EAAM97B,IAAI,IAAM,EAAF,KACd87B,EAAMG,QAAQhvC,EAAE,GAAM,IAAO,EAAF,KAC3B6uC,EAAMG,QAAQhvC,EAAE,GAAM,IAAO,EAAF,MAC3B6uC,EAAMG,QAAQhvC,EAAE,GAAM,IAAO,EAAF,MAC3B6uC,EAAMG,QAAQ,CAAC,GAAM,GAAM,GAAM,IAAO,EAAF,MACtCH,EAAMG,QAAQS,EAAa,GAAF,MACzBZ,EAAMG,QAAQhvC,EAAE,GAAM,KAAO,GAAF,MAC3B6uC,EAAMG,QAAQhvC,EAAE,GAAM,IAAO,GAAF,MAC3B6uC,EAAMG,QAAQS,EAAa,GAAF,MACzBZ,EAAM97B,IAAI,IAAM,GAAF,MACd87B,EAAMG,QAAQhvC,EAAE,GAAM,IAAO,GAAF,MAC3B6uC,EAAMG,QAAQhvC,EAAE,GAAM,IAAO,GAAF,MAC3B6uC,EAAMG,QAAQ,CAAC,GAAM,GAAM,GAAM,IAAO,GAAF,MACtCH,EAAMG,QAAQhvC,EAAE,GAAM,IAAO,GAAF,MAC3B6uC,EAAMG,QAAQS,EAAa,GAAF,MACzBZ,EAAM97B,IAAI,IAAM,GAAF,MACd87B,EAAMG,QAAQhvC,EAAE,GAAM,IAAO,GAAF,MAC3B6uC,EAAMG,QAAQhvC,EAAE,GAAM,IAAO,GAAF,MAC3B6uC,EAAMG,QAAQhvC,EAAE,GAAM,IAAO,GAAF,MAC3B6uC,EAAMG,QAAQhvC,EAAE,GAAM,KAAO,GAAF,OAC3B6uC,EAAMG,QAAQhvC,EAAE,GAAM,KAAO,GAAF,OAC3B6uC,EAAMG,QAAQhvC,EAAE,GAAM,KAAO,EAAF,OAC3B6uC,EAAMG,QAAQS,EAAa,GAAF,OACzBZ,EAAMG,QAAQQ,EAAY,GAAF,OACxBX,EAAM97B,IAAI,IAAM,GAAF,MACd87B,EAAMG,QAAQ,CAAC,GAAM,IAAM,GAAM,IAAO,GAAF,MAEtCH,EAAM97B,IAxHoB,IAwHK,EAAF,KAC7B87B,EAAM97B,IAzHoB,IAyHK,EAAF,KAC7B87B,EAAM97B,IA1HoB,IA0HK,EAAF,KAC7B87B,EAAM97B,IA3HoB,IA2HK,GAAF,MAC7B87B,EAAM97B,IA5HoB,IA4HK,GAAF,OACtB87B,EAtH6B,GAwJtC,kBAyBE,WACqBc,QAAA,IAAAA,MAAgC,EAAAR,wBADrD,MAGE,cAAO,K,OAFY,EAAAQ,eAInB,EAAKC,aAAe,EACpB,EAAKC,aAAe,EAAKD,aACzB,EAAKpvB,QAAU,IAAI,EAAA/C,OACnB,EAAK+C,QAAQ3C,SAAS,GACtB,EAAKiyB,SAAW,EAChB,EAAKlE,mBAAqB,EAG1B,EAAKmE,gBAAkB,SAAC9oC,EAAMC,EAAOC,KACrC,EAAK6oC,kBAAoB,SAAC5qC,KAC1B,EAAK6qC,cAAgB,SAACnxB,EAAehC,KACrC,EAAKozB,cAAgB,SAACpxB,KACtB,EAAKqxB,gBAAkB,SAACzF,GAAwC,OAAAA,GAChE,EAAK0F,cAAgB,EAAKL,gBAC1B,EAAKM,iBAAmBzwC,OAAOY,OAAO,MACtC,EAAK8vC,aAAe1wC,OAAOY,OAAO,MAClC,EAAK+vC,aAAe3wC,OAAOY,OAAO,MAClC,EAAKgwC,WAAa,IAAI,EAAA5wB,UACtB,EAAK6wB,WAAa,IAAI,EAAAlwB,UACtB,EAAKmwB,cAAgB,EAAKP,gBAG1B,EAAKpG,cAAc,CAAC1W,MAAO,OAAO,e,EAmWtC,OAvZ0C,OAuD9B,YAAAsd,YAAV,SAAsBl/B,EAAyBm/B,QAAA,IAAAA,MAAA,CAAwB,GAAM,MAC3E,IAAI5yB,EAAM,EACV,GAAIvM,EAAGy1B,OAAQ,CACb,GAAIz1B,EAAGy1B,OAAOzlC,OAAS,EACrB,MAAM,IAAIkY,MAAM,qCAGlB,IADAqE,EAAMvM,EAAGy1B,OAAOhiC,WAAW,KAChB,GAAO8Y,GAAOA,EAAM,GAC7B,MAAM,IAAIrE,MAAM,wCAGpB,GAAIlI,EAAG40B,cAAe,CACpB,GAAI50B,EAAG40B,cAAc5kC,OAAS,EAC5B,MAAM,IAAIkY,MAAM,iDAElB,IAAK,IAAI7a,EAAI,EAAGA,EAAI2S,EAAG40B,cAAc5kC,SAAU3C,EAAG,CAChD,IAAM+xC,EAAep/B,EAAG40B,cAAcnhC,WAAWpG,GACjD,GAAI,GAAO+xC,GAAgBA,EAAe,GACxC,MAAM,IAAIl3B,MAAM,8CAElBqE,IAAQ,EACRA,GAAO6yB,GAGX,GAAwB,IAApBp/B,EAAG4hB,MAAM5xB,OACX,MAAM,IAAIkY,MAAM,+BAElB,IAAMm3B,EAAYr/B,EAAG4hB,MAAMnuB,WAAW,GACtC,GAAI0rC,EAAW,GAAKE,GAAaA,EAAYF,EAAW,GACtD,MAAM,IAAIj3B,MAAM,0BAA0Bi3B,EAAW,GAAE,OAAOA,EAAW,IAK3E,OAHA5yB,IAAQ,EACRA,GAAO8yB,GAKF,YAAAnL,cAAP,SAAqB7mB,GAEnB,IADA,IAAMd,EAAgB,GACfc,GACLd,EAAIzc,KAAKwF,OAAOC,aAAqB,IAAR8X,IAC7BA,IAAU,EAEZ,OAAOd,EAAI+yB,UAAUv5B,KAAK,KAGrB,YAAAhW,QAAP,WACEJ,KAAKkvC,aAAe1wC,OAAOY,OAAO,MAClCY,KAAKivC,iBAAmBzwC,OAAOY,OAAO,MACtCY,KAAKmvC,aAAe3wC,OAAOY,OAAO,MAClCY,KAAKovC,WAAWhvC,UAChBJ,KAAKqvC,WAAWjvC,WAGX,YAAAykC,gBAAP,SAAuBn9B,GACrB1H,KAAKgvC,cAAgBtnC,GAEhB,YAAAkoC,kBAAP,WACE5vC,KAAKgvC,cAAgBhvC,KAAK2uC,iBAGrB,YAAAhhB,cAAP,SAAqBtd,EAAyB3I,GAC5C,IAAMgW,EAAQ1d,KAAKuvC,YAAYl/B,EAAI,CAAC,GAAM,WACT1P,IAA7BX,KAAKmvC,aAAazxB,KACpB1d,KAAKmvC,aAAazxB,GAAS,IAE7B,IAAMC,EAAc3d,KAAKmvC,aAAazxB,GAEtC,OADAC,EAAYxd,KAAKuH,GACV,CACLtH,QAAS,WACP,IAAMwd,EAAeD,EAAY9b,QAAQ6F,IACnB,IAAlBkW,GACFD,EAAYrd,OAAOsd,EAAc,MAKlC,YAAA+qB,cAAP,SAAqBt4B,EAAyB3I,GAC5C1H,KAAKmvC,aAAanvC,KAAKuvC,YAAYl/B,EAAI,CAAC,GAAM,OAAU,CAAC3I,IAEpD,YAAAmoC,gBAAP,SAAuBx/B,GACjBrQ,KAAKmvC,aAAanvC,KAAKuvC,YAAYl/B,EAAI,CAAC,GAAM,eAAgBrQ,KAAKmvC,aAAanvC,KAAKuvC,YAAYl/B,EAAI,CAAC,GAAM,QAE3G,YAAAm0B,sBAAP,SAA6B98B,GAC3B1H,KAAK8uC,cAAgBpnC,GAGhB,YAAAqgC,kBAAP,SAAyBmB,EAAcxhC,GACrC1H,KAAKivC,iBAAiB/F,EAAKplC,WAAW,IAAM4D,GAEvC,YAAAooC,oBAAP,SAA2B5G,GACrBlpC,KAAKivC,iBAAiB/F,EAAKplC,WAAW,YAAY9D,KAAKivC,iBAAiB/F,EAAKplC,WAAW,KAEvF,YAAA2gC,0BAAP,SAAiC/8B,GAC/B1H,KAAK4uC,kBAAoBlnC,GAGpB,YAAA6lB,cAAP,SAAqBld,EAAyB3I,GAC5C,IAAMgW,EAAQ1d,KAAKuvC,YAAYl/B,QACE1P,IAA7BX,KAAKkvC,aAAaxxB,KACpB1d,KAAKkvC,aAAaxxB,GAAS,IAE7B,IAAMC,EAAc3d,KAAKkvC,aAAaxxB,GAEtC,OADAC,EAAYxd,KAAKuH,GACV,CACLtH,QAAS,WACP,IAAMwd,EAAeD,EAAY9b,QAAQ6F,IACnB,IAAlBkW,GACFD,EAAYrd,OAAOsd,EAAc,MAKlC,YAAAmnB,cAAP,SAAqB10B,EAAyB3I,GAC5C1H,KAAKkvC,aAAalvC,KAAKuvC,YAAYl/B,IAAO,CAAC3I,IAEtC,YAAAqoC,gBAAP,SAAuB1/B,GACjBrQ,KAAKkvC,aAAalvC,KAAKuvC,YAAYl/B,YAAarQ,KAAKkvC,aAAalvC,KAAKuvC,YAAYl/B,KAElF,YAAAg0B,sBAAP,SAA6BhZ,GAC3BrrB,KAAK6uC,cAAgBxjB,GAGhB,YAAAoC,cAAP,SAAqBpd,EAAyB3I,GAC5C,OAAO1H,KAAKqvC,WAAW5xB,WAAWzd,KAAKuvC,YAAYl/B,GAAK3I,IAEnD,YAAA8hC,cAAP,SAAqBn5B,EAAyB3I,GAC5C1H,KAAKqvC,WAAWxxB,WAAW7d,KAAKuvC,YAAYl/B,GAAK3I,IAE5C,YAAAsoC,gBAAP,SAAuB3/B,GACrBrQ,KAAKqvC,WAAWvxB,aAAa9d,KAAKuvC,YAAYl/B,KAEzC,YAAAs0B,sBAAP,SAA6Bj9B,GAC3B1H,KAAKqvC,WAAWtxB,mBAAmBrW,IAG9B,YAAAmmB,cAAP,SAAqBnQ,EAAehW,GAClC,OAAO1H,KAAKovC,WAAW3xB,WAAWC,EAAOhW,IAEpC,YAAA8gC,cAAP,SAAqB9qB,EAAehW,GAClC1H,KAAKovC,WAAWvxB,WAAWH,EAAOhW,IAE7B,YAAAuoC,gBAAP,SAAuBvyB,GACrB1d,KAAKovC,WAAWtxB,aAAaJ,IAExB,YAAAgnB,sBAAP,SAA6Bh9B,GAC3B1H,KAAKovC,WAAWrxB,mBAAmBrW,IAG9B,YAAA2hC,gBAAP,SAAuBhe,GACrBrrB,KAAKsvC,cAAgBjkB,GAEhB,YAAA6kB,kBAAP,WACElwC,KAAKsvC,cAAgBtvC,KAAK+uC,iBAGrB,YAAAlyB,MAAP,WACE7c,KAAKyuC,aAAezuC,KAAKwuC,aACzBxuC,KAAKovC,WAAWvyB,QAChB7c,KAAKqvC,WAAWxyB,QAChB7c,KAAKof,QAAQvC,QACb7c,KAAKof,QAAQ3C,SAAS,GACtBzc,KAAK0uC,SAAW,EAChB1uC,KAAKwqC,mBAAqB,GAmBrB,YAAA3Z,MAAP,SAAahrB,EAAmBxF,GAW9B,IAVA,IAAI2D,EAAO,EACPmsC,EAAa,EACb1B,EAAezuC,KAAKyuC,aAClB2B,EAAMpwC,KAAKovC,WACXiB,EAAMrwC,KAAKqvC,WACbiB,EAAUtwC,KAAK0uC,SACbhzB,EAAS1b,KAAKof,QACdquB,EAAoBztC,KAAKuuC,aAAad,MAGnC/vC,EAAI,EAAGA,EAAI2C,IAAU3C,EAAG,CAK/B,QADAyyC,EAAa1C,EAAMgB,GAAgB,IAHnCzqC,EAAO6B,EAAKnI,IAG+D,IAAOsG,EA3Z5D,QA4ZA,GACpB,KAAK,EAGH,IAAK,IAAI,EAAItG,EAAI,KAAO,EAAG,CACzB,GAAI,GAAK2C,IAAW2D,EAAO6B,EAAK,IAAM,IAAS7B,EAAO,KAAQA,EAja9C,IAia2E,CACzFhE,KAAKgvC,cAAcnpC,EAAMnI,EAAG,GAC5BA,EAAI,EAAI,EACR,MAEF,KAAM,GAAK2C,IAAW2D,EAAO6B,EAAK,IAAM,IAAS7B,EAAO,KAAQA,EAtahD,IAsa6E,CAC3FhE,KAAKgvC,cAAcnpC,EAAMnI,EAAG,GAC5BA,EAAI,EAAI,EACR,MAEF,KAAM,GAAK2C,IAAW2D,EAAO6B,EAAK,IAAM,IAAS7B,EAAO,KAAQA,EA3ahD,IA2a6E,CAC3FhE,KAAKgvC,cAAcnpC,EAAMnI,EAAG,GAC5BA,EAAI,EAAI,EACR,MAEF,KAAM,GAAK2C,IAAW2D,EAAO6B,EAAK,IAAM,IAAS7B,EAAO,KAAQA,EAhbhD,IAgb6E,CAC3FhE,KAAKgvC,cAAcnpC,EAAMnI,EAAG,GAC5BA,EAAI,EAAI,EACR,OAGJ,MACF,KAAK,EACCsC,KAAKivC,iBAAiBjrC,GAAOhE,KAAKivC,iBAAiBjrC,KAClDhE,KAAK4uC,kBAAkB5qC,GAC5BhE,KAAKwqC,mBAAqB,EAC1B,MACF,KAAK,EACH,MACF,KAAK,EAUH,GAT8BxqC,KAAKsvC,cACjC,CACErO,SAAUvjC,EACVsG,KAAI,EACJyqC,aAAY,EACZ6B,QAAO,EACP50B,OAAM,EACN60B,OAAO,IAEAA,MAAO,OAElB,MACF,KAAK,EAIH,IAFA,IAAMtyB,EAAWje,KAAKkvC,aAAaoB,GAAW,EAAItsC,GAC9Cka,EAAID,EAAWA,EAAS5d,OAAS,GAAK,EACnC6d,GAAK,IAEkB,IAAxBD,EAASC,GAAGxC,GAFHwC,KAMXA,EAAI,GACNle,KAAK6uC,cAAcyB,GAAW,EAAItsC,EAAM0X,GAE1C1b,KAAKwqC,mBAAqB,EAC1B,MACF,KAAK,EAEH,GACE,OAAQxmC,GACN,KAAK,GACH0X,EAAOe,SAAS,GAChB,MACF,KAAK,GACHf,EAAOc,aAAa,GACpB,MACF,QACEd,EAAOwB,SAASlZ,EAAO,aAElBtG,EAAI2C,IAAW2D,EAAO6B,EAAKnI,IAAM,IAAQsG,EAAO,IAC3DtG,IACA,MACF,KAAK,EACH4yC,IAAY,EACZA,GAAWtsC,EACX,MACF,KAAK,GAGH,IAFA,IAAMwsC,EAAcxwC,KAAKmvC,aAAamB,GAAW,EAAItsC,GACjDysC,EAAKD,EAAcA,EAAYnwC,OAAS,GAAK,EAC1CowC,GAAM,IAEe,IAAtBD,EAAYC,KAFFA,KAMZA,EAAK,GACPzwC,KAAK8uC,cAAcwB,GAAW,EAAItsC,GAEpChE,KAAKwqC,mBAAqB,EAC1B,MACF,KAAK,GACH9uB,EAAOmB,QACPnB,EAAOe,SAAS,GAChB6zB,EAAU,EACV,MACF,KAAK,GACHD,EAAInxB,KAAKoxB,GAAW,EAAItsC,EAAM0X,GAC9B,MACF,KAAK,GAGH,IAAK,IAAI,EAAIhe,EAAI,KAAO,EACtB,GAAI,GAAK2C,GAA+B,MAApB2D,EAAO6B,EAAK,KAAyB,KAAT7B,GAA0B,KAATA,GAAkBA,EAAO,KAAQA,EAxgBlF,IAwgB+G,CAC7HqsC,EAAIjyB,IAAIvY,EAAMnI,EAAG,GACjBA,EAAI,EAAI,EACR,MAGJ,MACF,KAAK,GACH2yC,EAAIpxB,OAAgB,KAATjb,GAA0B,KAATA,GACf,KAATA,IAAemsC,GAAc,GACjCz0B,EAAOmB,QACPnB,EAAOe,SAAS,GAChB6zB,EAAU,EACVtwC,KAAKwqC,mBAAqB,EAC1B,MACF,KAAK,EACH4F,EAAItqC,QACJ,MACF,KAAK,EAEH,IAAK,IAAI,EAAIpI,EAAI,GAAK,IACpB,GAAI,GAAK2C,IAAW2D,EAAO6B,EAAK,IAAM,IAAS7B,EAAO,KAAQA,GAAQ,IAAO,CAC3EosC,EAAIhyB,IAAIvY,EAAMnI,EAAG,GACjBA,EAAI,EAAI,EACR,MAGJ,MACF,KAAK,EACH0yC,EAAIrqC,IAAa,KAAT/B,GAA0B,KAATA,GACZ,KAATA,IAAemsC,GAAc,GACjCz0B,EAAOmB,QACPnB,EAAOe,SAAS,GAChB6zB,EAAU,EACVtwC,KAAKwqC,mBAAqB,EAG9BiE,EAA4B,GAAb0B,EAIjBnwC,KAAK0uC,SAAW4B,EAGhBtwC,KAAKyuC,aAAeA,GAExB,EAvZA,CAA0C,EAAA3sC,YAA7B,EAAA0hC,wB,+zBCjOb,YACA,QACA,QAEA,QACA,QACA,OAEA,OACA,OACA,QACA,OAEIkN,EAAiB,EAErB,cAYE,WACUlgC,EACSmgC,EACRjf,EACAE,EACwBlhB,EACE0hB,EACDzhB,EACXqwB,EACOxL,GAThC,MAWE,cAAO,KAVC,EAAAhlB,UACS,EAAAmgC,iBACR,EAAAjf,YACA,EAAAE,aACwB,EAAAlhB,iBACE,EAAA0hB,mBACD,EAAAzhB,kBACX,EAAAqwB,cACO,EAAAxL,qBApBxB,EAAAlY,IAAMozB,IAQN,EAAAxM,sBAAwB,IAAI,EAAAtjC,aAelC,IAAM2f,EAAoB,EAAK5P,gBAAgB6C,QAAQ+M,kB,OACvD,EAAKqwB,yBAA2B,IAAI,EAAA/rB,wBAAwB,EAAKnU,gBAEjE,EAAKmgC,cAAgB,CACnB,IAAI,EAAAC,gBAAgB,EAAKH,eAAgB,EAAG,EAAKngC,QAAS,EAAKogC,yBAA0BrwB,EAAmB,EAAKjD,IAAK,EAAK5M,eAAgBC,GAC3I,IAAI,EAAAogC,qBAAqB,EAAKJ,eAAgB,EAAG,EAAKngC,QAAS,EAAK8M,IAAK,EAAK5M,eAAgBC,GAC9F,IAAI,EAAAqgC,gBAAgB,EAAKL,eAAgB,EAAG,EAAKngC,QAAS,EAAK8M,IAAKoU,EAAWE,EAAY,EAAKlhB,eAAgBC,GAChH,IAAI,EAAAsgC,kBAAkB,EAAKN,eAAgB,EAAG,EAAKngC,QAAS,EAAK8M,IAAK,EAAK4mB,sBAAuB,EAAKxzB,eAAgBC,EAAiBqwB,EAAaxL,IAEvJ,EAAKgK,WAAa,CAChB3rB,gBAAiB,EACjBC,iBAAkB,EAClBH,gBAAiB,EACjBC,iBAAkB,EAClBG,eAAgB,EAChBC,cAAe,EACfE,kBAAmB,EACnBE,mBAAoB,EACpBC,YAAa,EACbC,aAAc,EACd2R,gBAAiB,EACjBC,iBAAkB,GAEpB,EAAKgrB,kBAAoBvzC,OAAOiX,iBAChC,EAAKu8B,oBACL,EAAK7+B,mB,EAiJT,OAlM8B,OAU5B,sBAAW,mCAAoB,C,IAA/B,WAAsE,OAAOtS,KAAKkkC,sBAAsB3e,O,gCA0CjG,YAAAnlB,QAAP,WACE,YAAMA,QAAO,WACbJ,KAAK6wC,cAAcpvC,SAAQ,SAAA1D,GAAK,OAAAA,EAAEqC,aAClC,EAAAgxC,wBAAwBpxC,KAAKsd,MAGxB,YAAA+zB,yBAAP,WAGMrxC,KAAKkxC,oBAAsBvzC,OAAOiX,mBACpC5U,KAAKkxC,kBAAoBvzC,OAAOiX,iBAChC5U,KAAK4oB,SAAS5oB,KAAK0Q,eAAeiG,KAAM3W,KAAK0Q,eAAe4C,QAIzD,YAAAP,UAAP,SAAiByM,GAAjB,WACExf,KAAKwQ,QAAUgP,EAGfxf,KAAK6wC,cAAcpvC,SAAQ,SAAA1D,GACzBA,EAAEgV,UAAU,EAAKvC,SACjBzS,EAAE8e,YAIC,YAAA+L,SAAP,SAAgBjS,EAAcrD,GAA9B,WAEEtT,KAAKmxC,oBAGLnxC,KAAK6wC,cAAcpvC,SAAQ,SAAA1D,GAAK,OAAAA,EAAE2V,OAAO,EAAK8rB,eAG9Cx/B,KAAK2wC,eAAe/+B,MAAMqC,MAAWjU,KAAKw/B,WAAWnrB,YAAW,KAChErU,KAAK2wC,eAAe/+B,MAAMuC,OAAYnU,KAAKw/B,WAAWlrB,aAAY,MAG7D,YAAAg9B,kBAAP,WACEtxC,KAAK4oB,SAAS5oB,KAAK0Q,eAAeiG,KAAM3W,KAAK0Q,eAAe4C,OAGvD,YAAAf,OAAP,WACEvS,KAAKuxC,eAAc,SAAAxzC,GAAK,OAAAA,EAAEwU,aAGrB,YAAAC,QAAP,WACExS,KAAKuxC,eAAc,SAAAxzC,GAAK,OAAAA,EAAEyU,cAGrB,YAAAK,mBAAP,SAA0B/M,EAAyBC,EAAuB+M,QAAA,IAAAA,OAAA,GACxE9S,KAAKuxC,eAAc,SAAAxzC,GAAK,OAAAA,EAAE8U,mBAAmB/M,EAAOC,EAAK+M,OAGpD,YAAAL,aAAP,WACEzS,KAAKuxC,eAAc,SAAAxzC,GAAK,OAAAA,EAAE0U,mBAGrB,YAAAH,iBAAP,WACEtS,KAAKuxC,eAAc,SAAAxzC,GAAK,OAAAA,EAAEuU,uBAGrB,YAAAnM,MAAP,WACEnG,KAAKuxC,eAAc,SAAAxzC,GAAK,OAAAA,EAAE8e,YAGpB,YAAA00B,cAAR,SAAsBC,GACpBxxC,KAAK6wC,cAAcpvC,SAAQ,SAAA1D,GAAK,OAAAyzC,EAAUzzC,OAOrC,YAAA0zC,WAAP,SAAkB3rC,EAAeC,GAC/B/F,KAAK6wC,cAAcpvC,SAAQ,SAAA1D,GAAK,OAAAA,EAAE2U,cAAc5M,EAAOC,OAMjD,YAAAorC,kBAAR,WACOnxC,KAAKoyB,iBAAiBqK,eAQ3Bz8B,KAAKw/B,WAAW3rB,gBAAkBtK,KAAKg3B,MAAMvgC,KAAKoyB,iBAAiBne,MAAQtW,OAAOiX,kBAKlF5U,KAAKw/B,WAAW1rB,iBAAmBvK,KAAKoB,KAAK3K,KAAKoyB,iBAAiBje,OAASxW,OAAOiX,kBAMnF5U,KAAKw/B,WAAW5rB,iBAAmBrK,KAAKg3B,MAAMvgC,KAAKw/B,WAAW1rB,iBAAmB9T,KAAK2Q,gBAAgB6C,QAAQ4qB,YAI9Gp+B,KAAKw/B,WAAWxrB,cAA4D,IAA5ChU,KAAK2Q,gBAAgB6C,QAAQ4qB,WAAmB,EAAI70B,KAAKC,OAAOxJ,KAAKw/B,WAAW5rB,iBAAmB5T,KAAKw/B,WAAW1rB,kBAAoB,GAGvK9T,KAAKw/B,WAAW7rB,gBAAkB3T,KAAKw/B,WAAW3rB,gBAAkBtK,KAAKC,MAAMxJ,KAAK2Q,gBAAgB6C,QAAQk+B,eAI5G1xC,KAAKw/B,WAAWzrB,eAAiBxK,KAAKg3B,MAAMvgC,KAAK2Q,gBAAgB6C,QAAQk+B,cAAgB,GAIzF1xC,KAAKw/B,WAAWprB,mBAAqBpU,KAAK0Q,eAAe4C,KAAOtT,KAAKw/B,WAAW5rB,iBAChF5T,KAAKw/B,WAAWtrB,kBAAoBlU,KAAK0Q,eAAeiG,KAAO3W,KAAKw/B,WAAW7rB,gBAO/E3T,KAAKw/B,WAAWlrB,aAAe/K,KAAKC,MAAMxJ,KAAKw/B,WAAWprB,mBAAqBzW,OAAOiX,kBACtF5U,KAAKw/B,WAAWnrB,YAAc9K,KAAKC,MAAMxJ,KAAKw/B,WAAWtrB,kBAAoBvW,OAAOiX,kBAOpF5U,KAAKw/B,WAAWtZ,iBAAmBlmB,KAAKw/B,WAAWlrB,aAAetU,KAAK0Q,eAAe4C,KACtFtT,KAAKw/B,WAAWvZ,gBAAkBjmB,KAAKw/B,WAAWnrB,YAAcrU,KAAK0Q,eAAeiG,OAG/E,YAAA4M,wBAAP,SAA+B7b,GAC7B,OAAO1H,KAAK4wC,yBAAyBrtB,wBAAwB7b,IAGxD,YAAA+b,0BAAP,SAAiCC,GAC/B,OAAO1jB,KAAK4wC,yBAAyBntB,0BAA0BC,IAhMtD2T,EAAQ,GAiBhB,MAAAx2B,gBACA,MAAA8B,kBACA,MAAAtB,iBACA,MAAAL,cACA,MAAA4B,sBArBQy0B,GAAb,CAA8B,EAAAv1B,YAAjB,EAAAu1B,Y,8ZCbb,YACA,QACA,OACA,OACA,QAEA,OAUA,cAQE,WACEsa,EACArhC,EACAkP,EACAoyB,EACAx/B,EACAmN,EACSsyB,EACAnmB,GARX,MAUE,YAAMimB,EAAW,OAAQrhC,EAAQ8B,EAAOoN,EAAQD,EAAYsyB,EAAenmB,IAAe,K,OAHjF,EAAAmmB,gBACA,EAAAnmB,iBAdH,EAAAomB,gBAA0B,EAC1B,EAAAC,eAAyB,GACzB,EAAAC,uBAAqD,GAErD,EAAA1uB,UAAY,IAAI,EAAA/f,SAatB,EAAK8Z,OAAS,IAAI,EAAA40B,UAClB,EAAKrB,yBAA2BgB,E,EA4RpC,OAhTqC,OAuB5B,YAAAl+B,OAAP,SAAcrC,GACZ,YAAMqC,OAAM,UAACrC,GAGb,IAAM6gC,EAAelyC,KAAKwV,UAAS,GAAO,GACtCxV,KAAK8xC,kBAAoBzgC,EAAIwC,iBAAmB7T,KAAK+xC,iBAAmBG,IAC1ElyC,KAAK8xC,gBAAkBzgC,EAAIwC,gBAC3B7T,KAAK+xC,eAAiBG,EACtBlyC,KAAKgyC,uBAAyB,IAGhChyC,KAAKqd,OAAOlX,QACZnG,KAAKqd,OAAO3J,OAAO1T,KAAK0Q,eAAeiG,KAAM3W,KAAK0Q,eAAe4C,OAG5D,YAAAuJ,MAAP,WACE7c,KAAKqd,OAAOlX,QACZnG,KAAKqS,aAGC,YAAA8/B,aAAR,SACEC,EACAC,EACAC,EACAjnB,GAMA,IAAK,IAAI5W,EAAI29B,EAAU39B,GAAK49B,EAAS59B,IAInC,IAHA,IAAMmP,EAAMnP,EAAIzU,KAAK0Q,eAAemT,OAAOsI,MACrC9R,EAAOra,KAAK0Q,eAAemT,OAAOC,MAAMnlB,IAAIilB,GAC5CU,EAAeguB,EAAiBA,EAAe3uB,oBAAoBC,GAAO,GACvEpP,EAAI,EAAGA,EAAIxU,KAAK0Q,eAAeiG,KAAMnC,IAAK,CACjD6F,EAAMX,SAASlF,EAAGxU,KAAKsjB,WACvB,IAAIhO,EAAOtV,KAAKsjB,UAGZivB,GAAW,EACXC,EAAYh+B,EAIhB,GAAwB,IAApBc,EAAK5R,WAAT,CAOA,GAAI4gB,EAAajkB,OAAS,GAAKmU,IAAM8P,EAAa,GAAG,GAAI,CACvDiuB,GAAW,EACX,IAAMltB,EAAQf,EAAa8T,QAK3B9iB,EAAO,IAAI,EAAA6N,eACTnjB,KAAKsjB,UACLjJ,EAAMW,mBAAkB,EAAMqK,EAAM,GAAIA,EAAM,IAC9CA,EAAM,GAAKA,EAAM,IAInBmtB,EAAYntB,EAAM,GAAK,GAOpBktB,GAAYvyC,KAAKyyC,eAAen9B,IAQ/Bk9B,EAAYn4B,EAAMha,OAAS,GAAKga,EAAMb,aAAag5B,EAAY,KAAO,EAAAjwC,iBAExE+S,EAAKrS,UAAW,SAChBqS,EAAKrS,SAAW,GAAK,IASzBooB,EACE/V,EACAd,EACAC,GAGFD,EAAIg+B,KASF,YAAAE,gBAAR,SAAwBN,EAAkBC,GAA1C,WACQpxB,EAAMjhB,KAAKiS,KACX0E,EAAO3W,KAAK0Q,eAAeiG,KAC7Bg8B,EAAiB,EACjBC,EAAiB,EACjBC,EAA+B,KAEnC5xB,EAAI9K,OAEJnW,KAAKmyC,aAAaC,EAAUC,EAAS,MAAM,SAAC/8B,EAAMd,EAAGC,GAGnD,IAAIq+B,EAAgB,KAEhBx9B,EAAK9Q,YAELsuC,EADEx9B,EAAKjQ,cACS,EAAKmL,QAAQ8F,WAAWtN,IAC/BsM,EAAKrQ,UACE,OAAO,EAAAd,cAAcC,WAAWkR,EAAK9P,cAAc4Q,KAAK,KAAI,IAE5D,EAAK5F,QAAQ6F,KAAKf,EAAK9P,cAAcwD,IAE9CsM,EAAKpQ,UACd4tC,EAAgB,OAAO,EAAA3uC,cAAcC,WAAWkR,EAAK7P,cAAc2Q,KAAK,KAAI,IACnEd,EAAKlQ,gBACd0tC,EAAgB,EAAKtiC,QAAQ6F,KAAKf,EAAK7P,cAAcuD,KAGjC,OAAlB6pC,IAGFF,EAASn+B,EACTo+B,EAASn+B,GAGPA,IAAMm+B,GAER3xB,EAAI/L,UAAY29B,GAAgC,GAChD,EAAKt+B,WAAWo+B,EAAQC,EAAQj8B,EAAOg8B,EAAQ,GAC/CA,EAASn+B,EACTo+B,EAASn+B,GACAo+B,IAAkBC,IAE3B7xB,EAAI/L,UAAY29B,GAAgC,GAChD,EAAKt+B,WAAWo+B,EAAQC,EAAQp+B,EAAIm+B,EAAQ,GAC5CA,EAASn+B,EACTo+B,EAASn+B,GAGXo+B,EAAgBC,KAII,OAAlBD,IACF5xB,EAAI/L,UAAY29B,EAChB7yC,KAAKuU,WAAWo+B,EAAQC,EAAQj8B,EAAOg8B,EAAQ,IAGjD1xB,EAAIzK,WAGE,YAAAu8B,gBAAR,SAAwBX,EAAkBC,GAA1C,WACEryC,KAAKmyC,aAAaC,EAAUC,EAASryC,KAAK4wC,0BAA0B,SAACt7B,EAAMd,EAAGC,GAC5E,IAAIa,EAAK1Q,gBAGT,EAAKgR,WAAWN,EAAMd,EAAGC,GACrBa,EAAK5Q,eAAe,CAGtB,GAFA,EAAKuN,KAAKkE,OAENb,EAAK9Q,YACP,GAAI8Q,EAAKhQ,cACP,EAAK2M,KAAKiD,UAAY,EAAK1E,QAAQ2E,WAAWnM,SACzC,GAAIsM,EAAKpQ,UACd,EAAK+M,KAAKiD,UAAY,OAAO,EAAA/Q,cAAcC,WAAWkR,EAAK7P,cAAc2Q,KAAK,KAAI,QAC7E,CACL,IAAIjT,EAAKmS,EAAK7P,aACV,EAAKkL,gBAAgB6C,QAAQwC,4BAA8BV,EAAK7Q,UAAYtB,EAAK,IACnFA,GAAM,GAER,EAAK8O,KAAKiD,UAAY,EAAK1E,QAAQ6F,KAAKlT,GAAI6F,SAG9C,GAAIsM,EAAKjQ,cACP,EAAK4M,KAAKiD,UAAY,EAAK1E,QAAQ8F,WAAWtN,SACzC,GAAIsM,EAAKrQ,UACd,EAAKgN,KAAKiD,UAAY,OAAO,EAAA/Q,cAAcC,WAAWkR,EAAK9P,cAAc4Q,KAAK,KAAI,QAC7E,CACL,IAAIlT,EAAKoS,EAAK9P,aACV,EAAKmL,gBAAgB6C,QAAQwC,4BAA8BV,EAAK7Q,UAAYvB,EAAK,IACnFA,GAAM,GAER,EAAK+O,KAAKiD,UAAY,EAAK1E,QAAQ6F,KAAKnT,GAAI8F,IAIhD,EAAK2L,uBAAuBH,EAAGC,EAAGa,EAAK5R,YACvC,EAAKuO,KAAKuE,eAKT,YAAA9D,cAAP,SAAqB0/B,EAAkBC,GAEJ,IAA7BryC,KAAKqd,OAAO21B,MAAM3yC,SAIlBL,KAAKgS,YACPhS,KAAKgS,WAAWihC,aAGlBjzC,KAAKoV,YAAY,EAAGg9B,EAAUpyC,KAAK0Q,eAAeiG,KAAM07B,EAAUD,EAAW,GAC7EpyC,KAAK0yC,gBAAgBN,EAAUC,GAC/BryC,KAAK+yC,gBAAgBX,EAAUC,KAG1B,YAAA//B,iBAAP,WACEtS,KAAKkT,iBAAiBlT,KAAK2Q,gBAAgB6C,QAAQ+M,oBAM7C,YAAAkyB,eAAR,SAAuBn9B,GAGrB,GAAwB,IAApBA,EAAK5R,WACP,OAAO,EAIT,GAAI4R,EAAKzR,UAAY,IACnB,OAAO,EAGT,IAAMsN,EAAQmE,EAAK3R,WAGnB,GAAI3D,KAAKgyC,uBAAuBryC,eAAewR,GAC7C,OAAOnR,KAAKgyC,uBAAuB7gC,GAIrCnR,KAAKiS,KAAKkE,OACVnW,KAAKiS,KAAKsD,KAAOvV,KAAK+xC,eAKtB,IAAMmB,EAAW3pC,KAAKg3B,MAAMvgC,KAAKiS,KAAKkhC,YAAYhiC,GAAO8C,OAASjU,KAAK8xC,gBAOvE,OAJA9xC,KAAKiS,KAAKuE,UAGVxW,KAAKgyC,uBAAuB7gC,GAAS+hC,EAC9BA,GAiBX,EAhTA,CAAqC,EAAAn7B,iBAAxB,EAAA+4B,mB,8EClBb,iBAGE,aACE9wC,KAAKgzC,MAAQ,GAuBjB,OApBS,YAAAt/B,OAAP,SAAcO,EAAeE,GAC3B,IAAK,IAAIK,EAAI,EAAGA,EAAIP,EAAOO,IAAK,CAC1BxU,KAAKgzC,MAAM3yC,QAAUmU,GACvBxU,KAAKgzC,MAAM7yC,KAAK,IAElB,IAAK,IAAIsU,EAAIzU,KAAKgzC,MAAMx+B,GAAGnU,OAAQoU,EAAIN,EAAQM,IAC7CzU,KAAKgzC,MAAMx+B,GAAGrU,UAAKQ,GAErBX,KAAKgzC,MAAMx+B,GAAGnU,OAAS8T,EAEzBnU,KAAKgzC,MAAM3yC,OAAS4T,GAGf,YAAA9N,MAAP,WACE,IAAK,IAAIqO,EAAI,EAAGA,EAAIxU,KAAKgzC,MAAM3yC,OAAQmU,IACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIzU,KAAKgzC,MAAMx+B,GAAGnU,OAAQoU,IACxCzU,KAAKgzC,MAAMx+B,GAAGC,QAAK9T,GAI3B,EA3BA,GAAa,EAAAsxC,a,8ZCAb,WAEA,QACA,QACA,QACA,QAEA,QACA,QAOMmB,EAAoB,CACxBpqC,IAAK,mBACLZ,KAAM,GAuBR,SAAgBirC,EAAiBC,GAU/B,OAAOA,EAAMtvC,MAAQ,GAAKsvC,EAAMnwC,IAAM,GAAKmwC,EAAMpwC,IAAM,GAAKowC,EAAMliC,KAAO,EAAI,IAAMkiC,EAAMjiC,IAAM,EAAI,IAAMiiC,EAAMhiC,OAAS,EAAI,GAV9H,qBAaA,kBA2BE,WAAYE,EAA4B+hC,GAAxC,MACE,cAAO,KAD+B,EAAAA,UAXhC,EAAAC,kBAA4B,EAG5B,EAAAC,uBAA6C,GAG7C,EAAAC,qBAAsC,KAGtC,EAAAC,QAA8B,KAIpC,EAAKC,aAAepiC,EAASC,cAAc,UAC3C,EAAKmiC,aAAa3/B,MAvEA,KAwElB,EAAK2/B,aAAaz/B,OAvEC,KA2EnB,EAAK0/B,UAAY,EAAA3hC,aAAa,EAAK0hC,aAAazhC,WAAW,KAAM,CAACC,OAAO,KAEzE,IAAM0hC,EAAYtiC,EAASC,cAAc,UACzCqiC,EAAU7/B,MAAQ,EAAKs/B,QAAQ1/B,gBAC/BigC,EAAU3/B,OAAS,EAAKo/B,QAAQz/B,iBAChC,EAAKigC,QAAU,EAAA7hC,aAAa4hC,EAAU3hC,WAAW,KAAM,CAACC,MAAO,EAAKmhC,QAAQhzB,qBAE5E,EAAK2C,OAAS3Z,KAAKg3B,MAnFD,KAmFuB,EAAKgT,QAAQ1/B,iBACtD,EAAKmgC,QAAUzqC,KAAKg3B,MAnFD,KAmFwB,EAAKgT,QAAQz/B,kBACxD,IAAMmgC,EAAW,EAAK/wB,OAAS,EAAK8wB,Q,OACpC,EAAKE,UAAY,IAAI,EAAAC,OAAOF,GAC5B,EAAKC,UAAUE,SAASH,G,EAuO5B,OArRsC,OAoD7B,YAAA7zC,QAAP,WACoC,OAA9BJ,KAAK0zC,uBACP/1C,OAAOy+B,aAAap8B,KAAK0zC,sBACzB1zC,KAAK0zC,qBAAuB,OAIzB,YAAAT,WAAP,WACEjzC,KAAKwzC,kBAAoB,GAGpB,YAAAv9B,KAAP,SACEgL,EACAqyB,EACA9+B,EACAC,GAGA,GAAmB,KAAf6+B,EAAMtvC,KACR,OAAO,EAIT,IAAKhE,KAAKq0C,UAAUf,GAClB,OAAO,EAGT,IAAMgB,EAAWjB,EAAiBC,GAC5BiB,EAAav0C,KAAKk0C,UAAUv1C,IAAI21C,GACtC,GAAIC,QAEF,OADAv0C,KAAKw0C,eAAevzB,EAAKszB,EAAY//B,EAAGC,IACjC,EAET,GAAIzU,KAAKwzC,kBAhHkB,IAgH0B,CACnD,IAAI5xC,OAAK,EAEPA,EADE5B,KAAKk0C,UAAU3tC,KAAOvG,KAAKk0C,UAAUD,SAC/Bj0C,KAAKk0C,UAAU3tC,KAGfvG,KAAKk0C,UAAUO,OAAQ7yC,MAEjC,IAAM,EAAa5B,KAAK00C,aAAapB,EAAO1xC,GAG5C,OAFA5B,KAAKk0C,UAAU17B,IAAI87B,EAAU,GAC7Bt0C,KAAKw0C,eAAevzB,EAAK,EAAYzM,EAAGC,IACjC,EAET,OAAO,GAGD,YAAA4/B,UAAR,SAAkBf,GAQhB,OAAOA,EAAMtvC,KAAO,KAGd,YAAA2wC,eAAR,SAAuB/yC,GACrB,OAAQA,EAAQ5B,KAAKkjB,OAAUljB,KAAKuzC,QAAQ1/B,iBAGtC,YAAA+gC,eAAR,SAAuBhzC,GACrB,OAAO2H,KAAKg3B,MAAM3+B,EAAQ5B,KAAKkjB,QAAUljB,KAAKuzC,QAAQz/B,kBAGhD,YAAA0gC,eAAR,SACEvzB,EACAszB,EACA//B,EACAC,GAGA,IAAI8/B,EAAWM,QAAf,CAGA,IAAMC,EAAS90C,KAAK20C,eAAeJ,EAAW3yC,OACxCmzC,EAAS/0C,KAAK40C,eAAeL,EAAW3yC,OAC9Cqf,EAAI+zB,UACFT,EAAWU,SAAWj1C,KAAK2zC,QAAW3zC,KAAK4zC,aAC3CkB,EACAC,EACA/0C,KAAKuzC,QAAQ1/B,gBACb7T,KAAKuzC,QAAQz/B,iBACbU,EACAC,EACAzU,KAAKuzC,QAAQ1/B,gBACb7T,KAAKuzC,QAAQz/B,oBAIT,YAAAohC,uBAAR,SAA+Bn4B,GAC7B,OAAIA,EAAM/c,KAAKuzC,QAAQ/zB,OAAOnJ,KAAKhW,OAC1BL,KAAKuzC,QAAQ/zB,OAAOnJ,KAAK0G,GAE3B,EAAA+D,oBAAoB/D,IAGrB,YAAAo4B,oBAAR,SAA4B7B,GAC1B,OAAItzC,KAAKuzC,QAAQhzB,kBAIR6yB,EAELE,EAAMnwC,KAAO,EAAA4E,uBACR/H,KAAKuzC,QAAQ/zB,OAAOlJ,WAEzBg9B,EAAMnwC,GAAK,IACNnD,KAAKk1C,uBAAuB5B,EAAMnwC,IAEpCnD,KAAKuzC,QAAQ/zB,OAAOrK,YAGrB,YAAAigC,oBAAR,SAA4B9B,GAC1B,OAAIA,EAAMpwC,KAAO,EAAA6E,uBACR,EAAAe,MAAMc,OAAO5J,KAAKuzC,QAAQ/zB,OAAOrK,YAEtCm+B,EAAMpwC,GAAK,IAENlD,KAAKk1C,uBAAuB5B,EAAMpwC,IAEpClD,KAAKuzC,QAAQ/zB,OAAOlJ,YAKrB,YAAAo+B,aAAR,SAAqBpB,EAAyB1xC,GAC5C5B,KAAKwzC,oBAELxzC,KAAK+zC,QAAQ59B,OAGb,IAAMkpB,EAAkBr/B,KAAKm1C,oBAAoB7B,GAGjDtzC,KAAK+zC,QAAQ7yB,yBAA2B,OACxClhB,KAAK+zC,QAAQ7+B,UAAYmqB,EAAgBr2B,IACzChJ,KAAK+zC,QAAQr/B,SAAS,EAAG,EAAG1U,KAAKuzC,QAAQ1/B,gBAAiB7T,KAAKuzC,QAAQz/B,kBACvE9T,KAAK+zC,QAAQ7yB,yBAA2B,cAGxC,IAAMpK,EAAaw8B,EAAMliC,KAAOpR,KAAKuzC,QAAQ18B,eAAiB7W,KAAKuzC,QAAQz8B,WACrEu+B,EAAY/B,EAAMhiC,OAAS,SAAW,GAC5CtR,KAAK+zC,QAAQx+B,KACR8/B,EAAS,IAAIv+B,EAAU,IAAI9W,KAAKuzC,QAAQx8B,SAAW/W,KAAKuzC,QAAQ3+B,iBAAgB,MAAM5U,KAAKuzC,QAAQv8B,WACxGhX,KAAK+zC,QAAQt+B,aAAe,SAE5BzV,KAAK+zC,QAAQ7+B,UAAYlV,KAAKo1C,oBAAoB9B,GAAOtqC,IAGrDsqC,EAAMjiC,MACRrR,KAAK+zC,QAAQx9B,YAAc,EAAAvO,aAG7BhI,KAAK+zC,QAAQp+B,SAAS29B,EAAMniC,MAAO,EAAGnR,KAAKuzC,QAAQz/B,iBAAmB,GACtE9T,KAAK+zC,QAAQv9B,UAIb,IAAM8+B,EAAYt1C,KAAK+zC,QAAQhxB,aAC7B,EAAG,EAAG/iB,KAAKuzC,QAAQ1/B,gBAAiB7T,KAAKuzC,QAAQz/B,kBAE/C+gC,GAAU,EACT70C,KAAKuzC,QAAQhzB,oBAChBs0B,EAiFN,SAAoBS,EAAsBxsC,GAKxC,IAJA,IAAI+rC,GAAU,EACRj2C,EAAIkK,EAAMV,OAAS,GACnBO,EAAIG,EAAMV,OAAS,GAAK,IACxBQ,EAAIE,EAAMV,OAAS,EAAI,IACpBmtC,EAAS,EAAGA,EAASD,EAAUzvC,KAAKxF,OAAQk1C,GAAU,EACzDD,EAAUzvC,KAAK0vC,KAAY32C,GAC3B02C,EAAUzvC,KAAK0vC,EAAS,KAAO5sC,GAC/B2sC,EAAUzvC,KAAK0vC,EAAS,KAAO3sC,EACjC0sC,EAAUzvC,KAAK0vC,EAAS,GAAK,EAE7BV,GAAU,EAGd,OAAOA,EA/FOW,CAAWF,EAAWjW,IAIlC,IAAM7qB,EAAIxU,KAAK20C,eAAe/yC,GACxB6S,EAAIzU,KAAK40C,eAAehzC,GAE9B5B,KAAK6zC,UAAU4B,aAAaH,EAAW9gC,EAAGC,GAG1C,IAAM8/B,EAAa,CACjB3yC,MAAK,EACLizC,QAAO,EACPI,UAAU,GAIZ,OAFAj1C,KAAK01C,kBAAkBnB,GAEhBA,GAGD,YAAAmB,kBAAR,SAA0BnB,GAA1B,aAKQ,sBAAuB52C,SAAW,EAAA6N,WAAa,EAAAC,WAKrDzL,KAAKyzC,uBAAuBtzC,KAAKo0C,GAGC,OAA9Bv0C,KAAK0zC,uBAIT1zC,KAAK0zC,qBAAuB/1C,OAAO2+B,YAAW,WAAM,SAAKqZ,oBArR3B,QAwRxB,YAAAA,gBAAR,sBACQC,EAAuB51C,KAAKyzC,uBAClCzzC,KAAKyzC,uBAAyB,GAC9B91C,OAAOk4C,kBAAkB71C,KAAK4zC,cAAckC,MAAK,SAAAC,GAE/C,EAAKpC,QAAUoC,EAIf,IAAK,IAAIr4C,EAAI,EAAGA,EAAIk4C,EAAqBv1C,OAAQ3C,IAAK,CACtCk4C,EAAqBl4C,GAG7Bu3C,UAAW,MAGrBj1C,KAAK0zC,qBAAuB,MAEhC,EArRA,CAAsC,EAAAsC,eAAzB,EAAA91B,mBAyRb,kBACE,WAAY1O,EAAoBuO,G,OAC9B,cAAO,KAWX,OAbmC,OAK1B,YAAA9J,KAAP,SACEgL,EACAqyB,EACA9+B,EACAC,GAEA,OAAO,GAEX,EAbA,CAAmC,EAAAuhC,eAAtB,EAAAC,iB,8EC3Ub,8BACU,KAAAC,YAAsB,EA8ChC,OA5CS,YAAA91C,QAAP,aAMO,YAAAqT,OAAP,WACOzT,KAAKk2C,aACRl2C,KAAKm2C,YACLn2C,KAAKk2C,YAAa,IAQZ,YAAAC,UAAV,aASO,YAAAlD,WAAP,aAkBF,EA/CA,GAAsB,EAAA+C,iB,8ECDtB,8BACU,KAAAI,OAAoF,GACpF,KAAAC,MAAmF,GA4B7F,OA1BS,YAAAlwC,MAAP,WACEnG,KAAKo2C,OAAS,GACdp2C,KAAKq2C,MAAQ,IAGR,YAAAC,OAAP,SAAcnzC,EAAYD,EAAYnE,GAC/BiB,KAAKq2C,MAAMlzC,KACdnD,KAAKq2C,MAAMlzC,GAAM,IAEnBnD,KAAKq2C,MAAMlzC,GAAKD,GAAMnE,GAGjB,YAAAw3C,OAAP,SAAcpzC,EAAYD,GACxB,OAAOlD,KAAKq2C,MAAMlzC,GAAMnD,KAAKq2C,MAAMlzC,GAAKD,QAAMvC,GAGzC,YAAAkX,SAAP,SAAgB1U,EAAYD,EAAYnE,GACjCiB,KAAKo2C,OAAOjzC,KACfnD,KAAKo2C,OAAOjzC,GAAM,IAEpBnD,KAAKo2C,OAAOjzC,GAAKD,GAAMnE,GAGlB,YAAAqY,SAAP,SAAgBjU,EAAYD,GAC1B,OAAOlD,KAAKo2C,OAAOjzC,GAAMnD,KAAKo2C,OAAOjzC,GAAKD,QAAMvC,GAEpD,EA9BA,GAAa,EAAA2gB,sB,8ECKb,iBAOE,WAAmB2yB,GAAA,KAAAA,WANX,KAAAuC,KAA8C,GAC9C,KAAAC,MAAmC,KACnC,KAAAC,MAAmC,KACnC,KAAAC,UAAkC,GACnC,KAAApwC,KAAe,EAsHxB,OAlHU,YAAAqwC,YAAR,SAAoBnvC,GAClB,IAAMovC,EAAOpvC,EAAKovC,KACZlJ,EAAOlmC,EAAKkmC,KACdlmC,IAASzH,KAAKy2C,QAChBz2C,KAAKy2C,MAAQ9I,GAEXlmC,IAASzH,KAAK02C,QAChB12C,KAAK02C,MAAQG,GAEF,OAATA,IACFA,EAAKlJ,KAAOA,GAED,OAATA,IACFA,EAAKkJ,KAAOA,IAIR,YAAAC,YAAR,SAAoBrvC,GAClB,IAAMsvC,EAAO/2C,KAAK02C,MACL,OAATK,IACFA,EAAKpJ,KAAOlmC,GAEdA,EAAKovC,KAAOE,EACZtvC,EAAKkmC,KAAO,KACZ3tC,KAAK02C,MAAQjvC,EACM,OAAfzH,KAAKy2C,QACPz2C,KAAKy2C,MAAQhvC,IAWV,YAAA2sC,SAAP,SAAgB4C,GAEd,IADA,IAAMC,EAAWj3C,KAAK22C,UACbj5C,EAAI,EAAGA,EAAIs5C,EAAOt5C,IACzBu5C,EAAS92C,KAAK,CACZ02C,KAAM,KACNlJ,KAAM,KACNtuC,IAAK,KACLN,MAAO,QAKN,YAAAJ,IAAP,SAAWU,GAGT,IAAMoI,EAAOzH,KAAKw2C,KAAKn3C,GACvB,YAAasB,IAAT8G,GACFzH,KAAK42C,YAAYnvC,GACjBzH,KAAK82C,YAAYrvC,GACVA,EAAK1I,OAEP,MAMF,YAAAm4C,UAAP,SAAiB73C,GACf,IAAMoI,EAAOzH,KAAKw2C,KAAKn3C,GACvB,YAAasB,IAAT8G,EACKA,EAAK1I,MAEP,MAGF,YAAA01C,KAAP,WACE,IAAM0C,EAAOn3C,KAAKy2C,MAClB,OAAgB,OAATU,EAAgB,KAAOA,EAAKp4C,OAG9B,YAAAyZ,IAAP,SAAWnZ,EAAaN,GAEtB,IAAI0I,EAAOzH,KAAKw2C,KAAKn3C,GACrB,QAAasB,IAAT8G,EAEFA,EAAOzH,KAAKw2C,KAAKn3C,GACjBW,KAAK42C,YAAYnvC,GACjBA,EAAK1I,MAAQA,OACR,GAAIiB,KAAKuG,MAAQvG,KAAKi0C,SAE3BxsC,EAAOzH,KAAKy2C,MACZz2C,KAAK42C,YAAYnvC,UACVzH,KAAKw2C,KAAK/uC,EAAKpI,KACtBoI,EAAKpI,IAAMA,EACXoI,EAAK1I,MAAQA,EACbiB,KAAKw2C,KAAKn3C,GAAOoI,MACZ,CAEL,IAAMwvC,EAAWj3C,KAAK22C,UAClBM,EAAS52C,OAAS,IAEpBoH,EAAOwvC,EAAS9J,OACX9tC,IAAMA,EACXoI,EAAK1I,MAAQA,GAEb0I,EAAO,CACLovC,KAAM,KACNlJ,KAAM,KACNtuC,IAAG,EACHN,MAAK,GAGTiB,KAAKw2C,KAAKn3C,GAAOoI,EACjBzH,KAAKuG,OAEPvG,KAAK82C,YAAYrvC,IAErB,EA3HA,GAAa,EAAA0sC,U,8ZCNb,IAWA,cAGE,WACExC,EACArhC,EACAkP,EACAD,EACSsyB,EACAnmB,GANX,MAQE,YAAMimB,EAAW,YAAarhC,GAAQ,EAAMkP,EAAQD,EAAYsyB,EAAenmB,IAAe,K,OAHrF,EAAAmmB,gBACA,EAAAnmB,iBAGT,EAAK0rB,c,EAiGT,OA7G0C,OAehC,YAAAA,YAAR,WACEp3C,KAAKqd,OAAS,CACZvX,WAAOnF,EACPoF,SAAKpF,EACLmS,sBAAkBnS,EAClBwrB,WAAOxrB,IAIJ,YAAA+S,OAAP,SAAcrC,GACZ,YAAMqC,OAAM,UAACrC,GAEbrR,KAAKo3C,eAGA,YAAAv6B,MAAP,WACM7c,KAAKqd,OAAOvX,OAAS9F,KAAKqd,OAAOtX,MACnC/F,KAAKo3C,cACLp3C,KAAKqS,cAIF,YAAAQ,mBAAP,SAA0B/M,EAAyBC,EAAuB+M,GAExE,GAAK9S,KAAKq3C,gBAAgBvxC,EAAOC,EAAK+M,EAAkB9S,KAAK0Q,eAAemT,OAAOsI,OAQnF,GAHAnsB,KAAKqS,YAGAvM,GAAUC,EAAf,CAMA,IAAMuxC,EAAmBxxC,EAAM,GAAK9F,KAAK0Q,eAAemT,OAAOsI,MACzDorB,EAAiBxxC,EAAI,GAAK/F,KAAK0Q,eAAemT,OAAOsI,MACrDqrB,EAAyBjuC,KAAKmB,IAAI4sC,EAAkB,GACpDG,EAAuBluC,KAAKsB,IAAI0sC,EAAgBv3C,KAAK0Q,eAAe4C,KAAO,GAGjF,KAAIkkC,GAA0Bx3C,KAAK0Q,eAAe4C,MAAQmkC,EAAuB,GAAjF,CAMA,GAFAz3C,KAAKiS,KAAKiD,UAAYlV,KAAKwQ,QAAQ8P,UAAUtX,IAEzC8J,EAAkB,CACpB,IAAMoI,EAAWpV,EAAM,GACjBmO,EAAQlO,EAAI,GAAKmV,EACjB/G,EAASsjC,EAAuBD,EAAyB,EAC/Dx3C,KAAKuU,WAAW2G,EAAUs8B,EAAwBvjC,EAAOE,OACpD,CAEC+G,EAAWo8B,IAAqBE,EAAyB1xC,EAAM,GAAK,EAA1E,IACM4xC,EAAiBF,IAA2BC,EAAuB1xC,EAAI,GAAK/F,KAAK0Q,eAAeiG,KACtG3W,KAAKuU,WAAW2G,EAAUs8B,EAAwBE,EAAiBx8B,EAAU,GAG7E,IAAMy8B,EAAkBpuC,KAAKmB,IAAI+sC,EAAuBD,EAAyB,EAAG,GAIpF,GAHAx3C,KAAKuU,WAAW,EAAGijC,EAAyB,EAAGx3C,KAAK0Q,eAAeiG,KAAMghC,GAGrEH,IAA2BC,EAAsB,CAEnD,IAAMt8B,EAASo8B,IAAmBE,EAAuB1xC,EAAI,GAAK/F,KAAK0Q,eAAeiG,KACtF3W,KAAKuU,WAAW,EAAGkjC,EAAsBt8B,EAAQ,IAKrDnb,KAAKqd,OAAOvX,MAAQ,CAACA,EAAM,GAAIA,EAAM,IACrC9F,KAAKqd,OAAOtX,IAAM,CAACA,EAAI,GAAIA,EAAI,IAC/B/F,KAAKqd,OAAOvK,iBAAmBA,EAC/B9S,KAAKqd,OAAO8O,MAAQnsB,KAAK0Q,eAAemT,OAAOsI,YA5C7CnsB,KAAKo3C,eA+CD,YAAAC,gBAAR,SAAwBvxC,EAAyBC,EAAuB+M,EAA2BqZ,GACjG,OAAQnsB,KAAK43C,qBAAqB9xC,EAAO9F,KAAKqd,OAAOvX,SAClD9F,KAAK43C,qBAAqB7xC,EAAK/F,KAAKqd,OAAOtX,MAC5C+M,IAAqB9S,KAAKqd,OAAOvK,kBACjCqZ,IAAUnsB,KAAKqd,OAAO8O,OAGlB,YAAAyrB,qBAAR,SAA6BC,EAAsCC,GACjE,SAAKD,IAAWC,KAITD,EAAO,KAAOC,EAAO,IAAMD,EAAO,KAAOC,EAAO,KAE3D,EA7GA,CAXA,MAW0C//B,iBAA7B,EAAAg5B,wB,8ZCXb,YAEA,OAmBA,cAME,WACEY,EACArhC,EACAkP,EACAD,EACQw4B,EACClG,EACAnmB,EACQoE,EACAkoB,GATnB,MAWE,YAAMrG,EAAW,SAAUrhC,GAAQ,EAAMkP,EAAQD,EAAYsyB,EAAenmB,IAAe,K,OANnF,EAAAqsB,6BACC,EAAAlG,gBACA,EAAAnmB,iBACQ,EAAAoE,eACA,EAAAkoB,sBAXX,EAAAC,MAAmB,IAAI,EAAA10C,SAc7B,EAAK8Z,OAAS,CACZ7I,EAAG,EACHC,EAAG,EACHyjC,WAAW,EACXtmC,MAAO,GACPqC,MAAO,GAET,EAAKkkC,iBAAmB,CACtB,IAAO,EAAKC,iBAAiB94C,KAAK,GAClC,MAAS,EAAK+4C,mBAAmB/4C,KAAK,GACtC,UAAa,EAAKg5C,uBAAuBh5C,KAAK,I,EAwLpD,OApNuC,OAiC9B,YAAAoU,OAAP,SAAcrC,GACZ,YAAMqC,OAAM,UAACrC,GAEbrR,KAAKqd,OAAS,CACZ7I,EAAG,EACHC,EAAG,EACHyjC,WAAW,EACXtmC,MAAO,GACPqC,MAAO,IAIJ,YAAA4I,MAAP,WACE7c,KAAKu4C,eACDv4C,KAAKw4C,2BACPx4C,KAAKw4C,yBAAyBp4C,UAC9BJ,KAAKw4C,8BAA2B73C,EAChCX,KAAKsS,qBAIF,YAAAC,OAAP,WACMvS,KAAKw4C,0BACPx4C,KAAKw4C,yBAAyBC,QAEhCz4C,KAAK+3C,2BAA2Bx3C,KAAK,CAAEuF,MAAO9F,KAAK0Q,eAAemT,OAAOpP,EAAG1O,IAAK/F,KAAK0Q,eAAemT,OAAOpP,KAGvG,YAAAjC,QAAP,WACMxS,KAAKw4C,yBACPx4C,KAAKw4C,yBAAyBE,SAE9B14C,KAAK+3C,2BAA2Bx3C,KAAK,CAAEuF,MAAO9F,KAAK0Q,eAAemT,OAAOpP,EAAG1O,IAAK/F,KAAK0Q,eAAemT,OAAOpP,KAIzG,YAAAnC,iBAAP,e,EAAA,OACMtS,KAAK2Q,gBAAgB6C,QAAQ6vB,YAC1BrjC,KAAKw4C,2BACRx4C,KAAKw4C,yBAA2B,IAAIG,EAAwB34C,KAAKg4C,oBAAoBE,WAAW,WAC9F,EAAKU,SAAQ,QAIY,QAA7B,EAAA54C,KAAKw4C,gCAAwB,SAAEp4C,UAC/BJ,KAAKw4C,8BAA2B73C,GAIlCX,KAAK+3C,2BAA2Bx3C,KAAK,CAAEuF,MAAO9F,KAAK0Q,eAAemT,OAAOpP,EAAG1O,IAAK/F,KAAK0Q,eAAemT,OAAOpP,KAGvG,YAAAhC,aAAP,WACMzS,KAAKw4C,0BACPx4C,KAAKw4C,yBAAyBK,yBAI3B,YAAAnmC,cAAP,SAAqBC,EAAkBC,IAChC5S,KAAKw4C,0BAA4Bx4C,KAAKw4C,yBAAyBM,SAClE94C,KAAK44C,SAAQ,GAEb54C,KAAKw4C,yBAAyBK,yBAI1B,YAAAD,QAAR,SAAgBG,GAEd,GAAK/4C,KAAK8vB,aAAakK,sBAAuBh6B,KAAK8vB,aAAaic,eAAhE,CAKA,IAAMiN,EAAUh5C,KAAK0Q,eAAemT,OAAOuI,MAAQpsB,KAAK0Q,eAAemT,OAAOpP,EACxEwkC,EAA0BD,EAAUh5C,KAAK0Q,eAAemT,OAAOsI,MAGrE,GAAI8sB,EAA0B,GAAKA,GAA2Bj5C,KAAK0Q,eAAe4C,KAChFtT,KAAKu4C,mBADP,CAMA,IAAMW,EAAU3vC,KAAKsB,IAAI7K,KAAK0Q,eAAemT,OAAOrP,EAAGxU,KAAK0Q,eAAeiG,KAAO,GAElF,GADA3W,KAAK0Q,eAAemT,OAAOC,MAAMnlB,IAAIq6C,GAAUt/B,SAASw/B,EAASl5C,KAAKi4C,YAC3Ct3C,IAAvBX,KAAKi4C,MAAMh1C,QAAf,CAIA,IAAKjD,KAAKg4C,oBAAoBE,UAAW,CACvCl4C,KAAKu4C,eACLv4C,KAAKiS,KAAKkE,OACVnW,KAAKiS,KAAKiD,UAAYlV,KAAKwQ,QAAQ4P,OAAOpX,IAC1C,IAAMo6B,EAAcpjC,KAAK2Q,gBAAgB6C,QAAQ4vB,YAYjD,OAXIA,GAA+B,UAAhBA,EACjBpjC,KAAKm4C,iBAAiB/U,GAAa8V,EAASD,EAAyBj5C,KAAKi4C,OAE1Ej4C,KAAKm5C,kBAAkBD,EAASD,EAAyBj5C,KAAKi4C,OAEhEj4C,KAAKiS,KAAKuE,UACVxW,KAAKqd,OAAO7I,EAAI0kC,EAChBl5C,KAAKqd,OAAO5I,EAAIwkC,EAChBj5C,KAAKqd,OAAO66B,WAAY,EACxBl4C,KAAKqd,OAAOzL,MAAQwxB,OACpBpjC,KAAKqd,OAAOpJ,MAAQjU,KAAKi4C,MAAMv0C,YAKjC,IAAI1D,KAAKw4C,0BAA6Bx4C,KAAKw4C,yBAAyBY,gBAApE,CAKA,GAAIp5C,KAAKqd,OAAQ,CAEf,GAAIrd,KAAKqd,OAAO7I,IAAM0kC,GAClBl5C,KAAKqd,OAAO5I,IAAMwkC,GAClBj5C,KAAKqd,OAAO66B,YAAcl4C,KAAKg4C,oBAAoBE,WACnDl4C,KAAKqd,OAAOzL,QAAU5R,KAAK2Q,gBAAgB6C,QAAQ4vB,aACnDpjC,KAAKqd,OAAOpJ,QAAUjU,KAAKi4C,MAAMv0C,WACnC,OAEF1D,KAAKu4C,eAGPv4C,KAAKiS,KAAKkE,OACVnW,KAAKm4C,iBAAiBn4C,KAAK2Q,gBAAgB6C,QAAQ4vB,aAAe,SAAS8V,EAASD,EAAyBj5C,KAAKi4C,OAClHj4C,KAAKiS,KAAKuE,UAEVxW,KAAKqd,OAAO7I,EAAI0kC,EAChBl5C,KAAKqd,OAAO5I,EAAIwkC,EAChBj5C,KAAKqd,OAAO66B,WAAY,EACxBl4C,KAAKqd,OAAOzL,MAAQ5R,KAAK2Q,gBAAgB6C,QAAQ4vB,YACjDpjC,KAAKqd,OAAOpJ,MAAQjU,KAAKi4C,MAAMv0C,gBAxB7B1D,KAAKu4C,sBAzCLv4C,KAAKu4C,gBAoED,YAAAA,aAAR,WACMv4C,KAAKqd,SACPrd,KAAKoV,YAAYpV,KAAKqd,OAAO7I,EAAGxU,KAAKqd,OAAO5I,EAAGzU,KAAKqd,OAAOpJ,MAAO,GAClEjU,KAAKqd,OAAS,CACZ7I,EAAG,EACHC,EAAG,EACHyjC,WAAW,EACXtmC,MAAO,GACPqC,MAAO,KAKL,YAAAmkC,iBAAR,SAAyB5jC,EAAWC,EAAWa,GAC7CtV,KAAKiS,KAAKkE,OACVnW,KAAKiS,KAAKiD,UAAYlV,KAAKwQ,QAAQ4P,OAAOpX,IAC1ChJ,KAAK6U,oBAAoBL,EAAGC,EAAGzU,KAAK2Q,gBAAgB6C,QAAQ6lC,aAC5Dr5C,KAAKiS,KAAKuE,WAGJ,YAAA6hC,mBAAR,SAA2B7jC,EAAWC,EAAWa,GAC/CtV,KAAKiS,KAAKkE,OACVnW,KAAKiS,KAAKiD,UAAYlV,KAAKwQ,QAAQ4P,OAAOpX,IAC1ChJ,KAAKuU,WAAWC,EAAGC,EAAGa,EAAK5R,WAAY,GACvC1D,KAAKiS,KAAKiD,UAAYlV,KAAKwQ,QAAQ6P,aAAarX,IAChDhJ,KAAKqV,mBAAmBC,EAAMd,EAAGC,GACjCzU,KAAKiS,KAAKuE,WAGJ,YAAA8hC,uBAAR,SAA+B9jC,EAAWC,EAAWa,GACnDtV,KAAKiS,KAAKkE,OACVnW,KAAKiS,KAAKiD,UAAYlV,KAAKwQ,QAAQ4P,OAAOpX,IAC1ChJ,KAAK2U,uBAAuBH,EAAGC,GAC/BzU,KAAKiS,KAAKuE,WAGJ,YAAA2iC,kBAAR,SAA0B3kC,EAAWC,EAAWa,GAC9CtV,KAAKiS,KAAKkE,OACVnW,KAAKiS,KAAKqnC,YAAct5C,KAAKwQ,QAAQ4P,OAAOpX,IAC5ChJ,KAAK8U,kBAAkBN,EAAGC,EAAGa,EAAK5R,WAAY,GAC9C1D,KAAKiS,KAAKuE,WAEd,EApNA,CAAuC,EAAAuB,iBAA1B,EAAAk5B,oBAsNb,iBAcE,WACEiH,EACQ7xB,GAAA,KAAAA,kBAERrmB,KAAKo5C,iBAAkB,EACnBlB,GACFl4C,KAAKu5C,mBAgHX,OA5GE,sBAAW,uBAAQ,C,IAAnB,WAAiC,QAASv5C,KAAKw5C,oBAAsBx5C,KAAKy5C,iB,gCAEnE,YAAAr5C,QAAP,WACMJ,KAAKy5C,iBACP97C,OAAO+7C,cAAc15C,KAAKy5C,gBAC1Bz5C,KAAKy5C,oBAAiB94C,GAEpBX,KAAKw5C,qBACP77C,OAAOy+B,aAAap8B,KAAKw5C,oBACzBx5C,KAAKw5C,wBAAqB74C,GAExBX,KAAKsmB,kBACP3oB,OAAO4oB,qBAAqBvmB,KAAKsmB,iBACjCtmB,KAAKsmB,qBAAkB3lB,IAIpB,YAAAk4C,sBAAP,sBACM74C,KAAK84C,WAIT94C,KAAK25C,wBAA0BC,KAAKC,MAEpC75C,KAAKo5C,iBAAkB,EAClBp5C,KAAKsmB,kBACRtmB,KAAKsmB,gBAAkB3oB,OAAOmpB,uBAAsB,WAClD,EAAKT,kBACL,EAAKC,qBAAkB3lB,QAKrB,YAAA44C,iBAAR,SAAyBO,GAAzB,gBAAyB,IAAAA,MAjRJ,KAmRf95C,KAAKy5C,gBACP97C,OAAO+7C,cAAc15C,KAAKy5C,gBAO5Bz5C,KAAKw5C,mBAAqB77C,OAAO2+B,YAAW,WAG1C,GAAI,EAAKqd,wBAAyB,CAChC,IAAMI,EA/RS,KA+RgBH,KAAKC,MAAQ,EAAKF,yBAEjD,GADA,EAAKA,6BAA0Bh5C,EAC3Bo5C,EAAO,EAET,YADA,EAAKR,iBAAiBQ,GAM1B,EAAKX,iBAAkB,EACvB,EAAK9yB,gBAAkB3oB,OAAOmpB,uBAAsB,WAClD,EAAKT,kBACL,EAAKC,qBAAkB3lB,KAIzB,EAAK84C,eAAiB97C,OAAOq8C,aAAY,WAEvC,GAAI,EAAKL,wBAAyB,CAGhC,IAAMI,EApTO,KAoTkBH,KAAKC,MAAQ,EAAKF,yBAGjD,OAFA,EAAKA,6BAA0Bh5C,OAC/B,EAAK44C,iBAAiBQ,GAKxB,EAAKX,iBAAmB,EAAKA,gBAC7B,EAAK9yB,gBAAkB3oB,OAAOmpB,uBAAsB,WAClD,EAAKT,kBACL,EAAKC,qBAAkB3lB,OA9TV,OAiUhBm5C,IAGE,YAAArB,MAAP,WACEz4C,KAAKo5C,iBAAkB,EACnBp5C,KAAKy5C,iBACP97C,OAAO+7C,cAAc15C,KAAKy5C,gBAC1Bz5C,KAAKy5C,oBAAiB94C,GAEpBX,KAAKw5C,qBACP77C,OAAOy+B,aAAap8B,KAAKw5C,oBACzBx5C,KAAKw5C,wBAAqB74C,GAExBX,KAAKsmB,kBACP3oB,OAAO4oB,qBAAqBvmB,KAAKsmB,iBACjCtmB,KAAKsmB,qBAAkB3lB,IAIpB,YAAA+3C,OAAP,WAEE14C,KAAKy4C,QAELz4C,KAAK25C,6BAA0Bh5C,EAC/BX,KAAKu5C,mBACLv5C,KAAK64C,yBAET,EApIA,I,8ZC3OA,YACA,OACA,QAIA,cAGE,WACElH,EACArhC,EACAkP,EACAD,EACAmS,EACAE,EACSigB,EACAnmB,GARX,MAUE,YAAMimB,EAAW,OAAQrhC,GAAQ,EAAMkP,EAAQD,EAAYsyB,EAAenmB,IAAe,K,OAHhF,EAAAmmB,gBACA,EAAAnmB,iBAGTgG,EAAUuoB,aAAY,SAAAjqB,GAAK,SAAKkqB,aAAalqB,MAC7C0B,EAAUyoB,aAAY,SAAAnqB,GAAK,SAAKoqB,aAAapqB,MAE7C4B,EAAWqoB,aAAY,SAAAjqB,GAAK,SAAKkqB,aAAalqB,MAC9C4B,EAAWuoB,aAAY,SAAAnqB,GAAK,SAAKoqB,aAAapqB,M,EAoDlD,OAtEqC,OAqB5B,YAAAtc,OAAP,SAAcrC,GACZ,YAAMqC,OAAM,UAACrC,GAEbrR,KAAKqd,YAAS1c,GAGT,YAAAkc,MAAP,WACE7c,KAAKq6C,qBAGC,YAAAA,kBAAR,WACE,GAAIr6C,KAAKqd,OAAQ,CACfrd,KAAKoV,YAAYpV,KAAKqd,OAAOi9B,GAAIt6C,KAAKqd,OAAOk9B,GAAIv6C,KAAKqd,OAAO1G,KAAO3W,KAAKqd,OAAOi9B,GAAI,GACpF,IAAME,EAAiBx6C,KAAKqd,OAAOo9B,GAAKz6C,KAAKqd,OAAOk9B,GAAK,EACrDC,EAAiB,GACnBx6C,KAAKoV,YAAY,EAAGpV,KAAKqd,OAAOk9B,GAAK,EAAGv6C,KAAKqd,OAAO1G,KAAM6jC,GAE5Dx6C,KAAKoV,YAAY,EAAGpV,KAAKqd,OAAOo9B,GAAIz6C,KAAKqd,OAAOq9B,GAAI,GACpD16C,KAAKqd,YAAS1c,IAIV,YAAAu5C,aAAR,SAAqBlqB,GAUnB,GATIA,EAAE9sB,KAAO,EAAA6E,uBACX/H,KAAKiS,KAAKiD,UAAYlV,KAAKwQ,QAAQ2E,WAAWnM,IACrCgnB,EAAE9sB,IAAM,EAAAy3C,WAAW3qB,EAAE9sB,IAE9BlD,KAAKiS,KAAKiD,UAAYlV,KAAKwQ,QAAQ6F,KAAK2Z,EAAE9sB,IAAI8F,IAE9ChJ,KAAKiS,KAAKiD,UAAYlV,KAAKwQ,QAAQ8F,WAAWtN,IAG5CgnB,EAAEuqB,KAAOvqB,EAAEyqB,GAEbz6C,KAAK2U,uBAAuBqb,EAAEsqB,GAAItqB,EAAEuqB,GAAIvqB,EAAE0qB,GAAK1qB,EAAEsqB,QAC5C,CAELt6C,KAAK2U,uBAAuBqb,EAAEsqB,GAAItqB,EAAEuqB,GAAIvqB,EAAErZ,KAAOqZ,EAAEsqB,IACnD,IAAK,IAAI7lC,EAAIub,EAAEuqB,GAAK,EAAG9lC,EAAIub,EAAEyqB,GAAIhmC,IAC/BzU,KAAK2U,uBAAuB,EAAGF,EAAGub,EAAErZ,MAEtC3W,KAAK2U,uBAAuB,EAAGqb,EAAEyqB,GAAIzqB,EAAE0qB,IAEzC16C,KAAKqd,OAAS2S,GAGR,YAAAoqB,aAAR,SAAqBpqB,GACnBhwB,KAAKq6C,qBAET,EAtEA,CAAqC,EAAAtiC,iBAAxB,EAAAi5B,mB,8ECLb,WAaA,aAwBE,WACqBtgC,EACFkf,EACAjf,EACA4yB,GAHE,KAAA7yB,iBACF,KAAAkf,cACA,KAAAjf,kBACA,KAAA4yB,kBApBT,KAAAqX,cAA0C,GAM5C,KAAAC,mBAAqB,EAGrB,KAAAX,aAAe,IAAI,EAAAt5C,aAEnB,KAAAw5C,aAAe,IAAI,EAAAx5C,aAEnB,KAAAk6C,eAAiB,IAAI,EAAAl6C,aAS3BZ,KAAK+6C,eAAiB,CACpBj1C,WAAOnF,EACPoF,SAAKpF,GA+RX,OA7SE,sBAAW,0BAAW,C,IAAtB,WAAoD,OAAOX,KAAKk6C,aAAa30B,O,gCAE7E,sBAAW,0BAAW,C,IAAtB,WAAoD,OAAOvlB,KAAKo6C,aAAa70B,O,gCAE7E,sBAAW,4BAAa,C,IAAxB,WAAsD,OAAOvlB,KAAK86C,eAAev1B,O,gCAkB1E,YAAAwR,YAAP,SAAmBvR,EAAsBw1B,GACvCh7C,KAAKi7C,SAAWz1B,EAChBxlB,KAAK42B,kBAAoBokB,GAQpB,YAAAlhB,YAAP,SAAmBh0B,EAAeC,GAAlC,WAEO/F,KAAK42B,yBAKwBj2B,IAA9BX,KAAK+6C,eAAej1C,YAAmDnF,IAA5BX,KAAK+6C,eAAeh1C,KACjE/F,KAAK+6C,eAAej1C,MAAQA,EAC5B9F,KAAK+6C,eAAeh1C,IAAMA,IAE1B/F,KAAK+6C,eAAej1C,MAAQyD,KAAKsB,IAAI7K,KAAK+6C,eAAej1C,MAAOA,GAChE9F,KAAK+6C,eAAeh1C,IAAMwD,KAAKmB,IAAI1K,KAAK+6C,eAAeh1C,IAAKA,IAI9D/F,KAAK42B,kBAAkBE,SAAShxB,EAAOC,GAGnC/F,KAAKk7C,gBACP9e,aAAap8B,KAAKk7C,gBAEpBl7C,KAAKk7C,eAA8B5e,YAAW,WAAM,SAAK6e,iBAAgBxpB,EAAUypB,sBAM7E,YAAAD,aAAR,WACEn7C,KAAKk7C,oBAAiBv6C,EACtB,IAAMkjB,EAAS7jB,KAAK0Q,eAAemT,OAEnC,QAAkCljB,IAA9BX,KAAK+6C,eAAej1C,YAAmDnF,IAA5BX,KAAK+6C,eAAeh1C,IAAnE,CAMA,IAAMs1C,EAAwBx3B,EAAOsI,MAAQnsB,KAAK+6C,eAAej1C,MACjE,KAAIu1C,GAAyBx3B,EAAOC,MAAMzjB,QAA1C,CAoBA,IAfA,IAAMi7C,EAAsBz3B,EAAOsI,MAAQ5iB,KAAKsB,IAAI7K,KAAK+6C,eAAeh1C,IAAK/F,KAAK0Q,eAAe4C,MAAQ,EAYnGioC,EAAoBhyC,KAAKoB,KA/GP,IA+GkC3K,KAAK0Q,eAAeiG,MACxE6kC,EAAWx7C,KAAK0Q,eAAemT,OAAO23B,UAC1C,EAAOH,EAAuBC,EAAqBC,EAAmBA,GACjEC,EAASC,WAEd,IADA,IAAMh3B,EAAwC+2B,EAAS7N,OAC9CjwC,EAAI,EAAGA,EAAIsC,KAAK46C,cAAcv6C,OAAQ3C,IAC7CsC,KAAK07C,cAAcj3B,EAASY,MAAMs2B,MAAOl3B,EAASxhB,QAASjD,KAAK46C,cAAcl9C,IAIlFsC,KAAK+6C,eAAej1C,WAAQnF,EAC5BX,KAAK+6C,eAAeh1C,SAAMpF,QAlCxBX,KAAK4vB,YAAYiF,MAAM,2DA+CpB,YAAAjL,oBAAP,SAA2BC,EAAeniB,EAA6B8L,GACrE,QADqE,IAAAA,MAAA,KAChE9L,EACH,MAAM,IAAI6Q,MAAM,2BAElB,IAAMqjC,EAAkC,CACtCvrC,GAAIrQ,KAAK66C,qBACThxB,MAAK,EACLniB,QAAO,EACPm0C,WAAYroC,EAAQqoC,WACpBC,mBAAoBtoC,EAAQsoC,mBAC5BC,qBAAsBvoC,EAAQwoC,gBAC9BC,mBAAoBzoC,EAAQ0oC,cAC5BC,iBAAkB3oC,EAAQ2oC,iBAC1BC,SAAU5oC,EAAQ4oC,UAAY,GAGhC,OADAp8C,KAAKq8C,sBAAsBT,GACpBA,EAAQvrC,IAST,YAAAgsC,sBAAR,SAA8BT,GAC5B,GAAkC,IAA9B57C,KAAK46C,cAAcv6C,OAAvB,CAKA,IAAK,IAAI3C,EAAIsC,KAAK46C,cAAcv6C,OAAS,EAAG3C,GAAK,EAAGA,IAClD,GAAIk+C,EAAQQ,UAAYp8C,KAAK46C,cAAcl9C,GAAG0+C,SAE5C,YADAp8C,KAAK46C,cAAct6C,OAAO5C,EAAI,EAAG,EAAGk+C,GAKxC57C,KAAK46C,cAAct6C,OAAO,EAAG,EAAGs7C,QAX9B57C,KAAK46C,cAAcz6C,KAAKy7C,IAmBrB,YAAA9xB,sBAAP,SAA6BC,GAC3B,IAAK,IAAIrsB,EAAI,EAAGA,EAAIsC,KAAK46C,cAAcv6C,OAAQ3C,IAC7C,GAAIsC,KAAK46C,cAAcl9C,GAAG2S,KAAO0Z,EAE/B,OADA/pB,KAAK46C,cAAct6C,OAAO5C,EAAG,IACtB,EAGX,OAAO,GASD,YAAAg+C,cAAR,SAAsBY,EAAkB53B,EAAck3B,GAKpD,IALF,IAGMW,EAHN,OAEQC,EAAM,IAAIC,OAAOb,EAAQ/xB,MAAM6yB,QAASd,EAAQ/xB,MAAM8yB,OAAS,IAAM,KAEvEC,GAAe,E,aAEjB,IAAMC,EAAMN,EAAoC,iBAAvBX,EAAQC,WAA0B,EAAID,EAAQC,YACvE,IAAKgB,E,OAGH,EAAKjtB,YAAYiF,MAAM,+CAAgD0nB,EAAOX,G,QAUhF,GAFAgB,EAAcl4B,EAAK7iB,QAAQg7C,EAAKD,EAAc,GAC9CJ,EAAIM,UAAYF,EAAcC,EAAIx8C,OAC9Bu8C,EAAc,E,cAMlB,IAAMG,EAAc,EAAKrsC,eAAemT,OAAOm5B,yBAAyBV,EAAUM,GAClF,GAAIG,EAAY,GAAK,E,cAKrB,IAAM1iC,EAAO,EAAK3J,eAAemT,OAAOC,MAAMnlB,IAAIo+C,EAAY,IAC9D,IAAK1iC,E,cAIL,IAAM8xB,EAAO9xB,EAAKhB,MAAM0jC,EAAY,IAC9B75C,EAAKipC,EAAQA,GAAQ,EAAK,SAAQxrC,EAEpCi7C,EAAQE,mBACVF,EAAQE,mBAAmBe,GAAK,SAAAI,GAE1B,EAAK/B,gBAGL+B,GACF,EAAKC,SAASH,EAAY,GAAIA,EAAY,GAAK,EAAKrsC,eAAemT,OAAOsI,MAAO0wB,EAAKjB,EAAS14C,MAInG,EAAKg6C,SAASH,EAAY,GAAIA,EAAY,GAAK,EAAKrsC,eAAemT,OAAOsI,MAAO0wB,EAAKjB,EAAS14C,I,OA9C/D,QAA5Bq5C,EAAQC,EAAIW,KAAKz4B,KAAiB,C,yBA2DpC,YAAAw4B,SAAR,SAAiB1oC,EAAWC,EAAWooC,EAAajB,EAAuB14C,GAA3E,WACE,GAAKlD,KAAK42B,mBAAsB52B,KAAKi7C,SAArC,CAIA,IAAMhnC,EAAQjU,KAAKujC,gBAAgB6Z,mBAAmBP,GAChDvC,EAAK9lC,EAAIxU,KAAK0Q,eAAeiG,KAC7B4jC,EAAK9lC,EAAIlL,KAAKg3B,MAAM/rB,EAAIxU,KAAK0Q,eAAeiG,MAC9C+jC,GAAMJ,EAAKrmC,GAASjU,KAAK0Q,eAAeiG,KACxC8jC,EAAKF,EAAKhxC,KAAKg3B,OAAO+Z,EAAKrmC,GAASjU,KAAK0Q,eAAeiG,MACjD,IAAP+jC,IACFA,EAAK16C,KAAK0Q,eAAeiG,KACzB8jC,KAGFz6C,KAAK42B,kBAAkBjlB,IAAI,IAAI0rC,EAC7B/C,EAAK,EACLC,EAAK,EACLG,EAAK,EACLD,EAAK,GACL,SAAAzqB,GACE,GAAI4rB,EAAQl0C,QACV,OAAOk0C,EAAQl0C,QAAQsoB,EAAG6sB,GAE5B,IAAMS,EAAY3/C,OAAO6rB,OACrB8zB,GACFA,EAAUC,OAAS,KACnBD,EAAUE,SAASC,KAAOZ,GAE1Bh6B,QAAQC,KAAK,0DAGjB,WACE,EAAKo3B,aAAa35C,KAAK,EAAKm9C,sBAAsBpD,EAAIC,EAAIG,EAAID,EAAIv3C,IAClE,EAAK+3C,SAAUvpC,UAAUC,IAAI,2BAE/B,SAAAqe,GACE,EAAK8qB,eAAev6C,KAAK,EAAKm9C,sBAAsBpD,EAAIC,EAAIG,EAAID,EAAIv3C,IAChE04C,EAAQG,sBAGVH,EAAQG,qBAAqB/rB,EAAG6sB,EAAK,CAAE/2C,MAAO,CAAE0O,EAAG8lC,EAAI7lC,EAAG8lC,GAAMx0C,IAAK,CAAEyO,EAAGkmC,EAAIjmC,EAAGgmC,QAGrF,WACE,EAAKL,aAAa75C,KAAK,EAAKm9C,sBAAsBpD,EAAIC,EAAIG,EAAID,EAAIv3C,IAClE,EAAK+3C,SAAUvpC,UAAU4hB,OAAO,wBAC5BsoB,EAAQK,oBACVL,EAAQK,wBAGZ,SAAAjsB,GACE,OAAI4rB,EAAQO,kBACHP,EAAQO,iBAAiBnsB,EAAG6sB,SAOnC,YAAAa,sBAAR,SAA8BpD,EAAYC,EAAYG,EAAYD,EAAYv3C,GAC5E,MAAO,CAAEo3C,GAAE,EAAEC,GAAE,EAAEG,GAAE,EAAED,GAAE,EAAE9jC,KAAM3W,KAAK0Q,eAAeiG,KAAMzT,GAAE,IAvT5C,EAAAk4C,mBAAqB,IAyTxC,EA/TA,GAAa,EAAAzpB,YAiUb,MACE,SACS2oB,EACAC,EACAG,EACAD,EACAkD,EACAC,EACA5B,EACAE,EACAC,GARA,KAAA7B,KACA,KAAAC,KACA,KAAAG,KACA,KAAAD,KACA,KAAAkD,gBACA,KAAAC,gBACA,KAAA5B,kBACA,KAAAE,gBACA,KAAAC,oBAVE,EAAAkB,a,mfC7Ub,YACA,QACA,OACA,OACA,OACA,OACA,QACA,QAwBMQ,EAA0Bl4C,OAAOC,aAAa,KAC9Ck4C,EAA+B,IAAIrB,OAAOoB,EAAyB,KA4BzE,aA8CE,WACmBrf,EACAyc,EACAtK,EACkBve,EACF1hB,EACFof,EACCqG,EACExlB,GARpC,WACmB,KAAA6tB,eACA,KAAAyc,WACA,KAAAtK,iBACkB,KAAAve,mBACF,KAAA1hB,iBACF,KAAAof,eACC,KAAAqG,gBACE,KAAAxlB,kBA7C5B,KAAAotC,kBAA4B,EAqB5B,KAAAC,UAAW,EAKX,KAAA16B,UAAsB,IAAI,EAAA/f,SAE1B,KAAA06C,oBAA8B,EAE9B,KAAAC,uBAAyB,IAAI,EAAAt9C,aAE7B,KAAAu9C,iBAAmB,IAAI,EAAAv9C,aAEvB,KAAAouB,mBAAqB,IAAI,EAAApuB,aAc/BZ,KAAKo+C,mBAAqB,SAAA74B,GAAS,SAAK84B,aAAyB94B,IACjEvlB,KAAKs+C,iBAAmB,SAAA/4B,GAAS,SAAKg5B,WAAuBh5B,IAC7DvlB,KAAK8vB,aAAa0uB,aAAY,WACxB,EAAKn0B,cACP,EAAKK,oBAGT1qB,KAAKy+C,cAAgBz+C,KAAK0Q,eAAemT,OAAOC,MAAM46B,QAAO,SAAA5zB,GAAU,SAAK6zB,QAAQ7zB,MACpF9qB,KAAK0Q,eAAewY,QAAQ6D,kBAAiB,SAAAiD,GAAK,SAAK4uB,kBAAkB5uB,MAEzEhwB,KAAKk3B,SAELl3B,KAAK6+C,OAAS,IAAI,EAAAC,eAAe9+C,KAAK0Q,gBACtC1Q,KAAK++C,qBAAuB,EA2yBhC,OAz0BE,sBAAW,oCAAqB,C,IAAhC,WAAqD,OAAO/+C,KAAKk+C,uBAAuB34B,O,gCAExF,sBAAW,8BAAe,C,IAA1B,WAAqE,OAAOvlB,KAAKm+C,iBAAiB54B,O,gCAElG,sBAAW,gCAAiB,C,IAA5B,WAA+C,OAAOvlB,KAAKgvB,mBAAmBzJ,O,gCA6BvE,YAAAnlB,QAAP,WACEJ,KAAKg/C,6BAGA,YAAAniC,MAAP,WACE7c,KAAK0qB,kBAOA,YAAAuM,QAAP,WACEj3B,KAAK0qB,iBACL1qB,KAAKg+C,UAAW,GAMX,YAAA9mB,OAAP,WACEl3B,KAAKg+C,UAAW,GAGlB,sBAAW,6BAAc,C,IAAzB,WAA4D,OAAOh+C,KAAK6+C,OAAOI,qB,gCAC/E,sBAAW,2BAAY,C,IAAvB,WAA0D,OAAOj/C,KAAK6+C,OAAOK,mB,gCAK7E,sBAAW,2BAAY,C,IAAvB,WACE,IAAMp5C,EAAQ9F,KAAK6+C,OAAOI,oBACpBl5C,EAAM/F,KAAK6+C,OAAOK,kBACxB,SAAKp5C,IAAUC,KAGRD,EAAM,KAAOC,EAAI,IAAMD,EAAM,KAAOC,EAAI,K,gCAMjD,sBAAW,4BAAa,C,IAAxB,WACE,IAAMD,EAAQ9F,KAAK6+C,OAAOI,oBACpBl5C,EAAM/F,KAAK6+C,OAAOK,kBACxB,IAAKp5C,IAAUC,EACb,MAAO,GAGT,IAAM8d,EAAS7jB,KAAK0Q,eAAemT,OAC7B7d,EAAmB,GAEzB,GAAkC,IAA9BhG,KAAK++C,qBAA+C,CAEtD,GAAIj5C,EAAM,KAAOC,EAAI,GACnB,MAAO,GAGT,IAAK,IAAIrI,EAAIoI,EAAM,GAAIpI,GAAKqI,EAAI,GAAIrI,IAAK,CACvC,IAAMyhD,EAAWt7B,EAAOu7B,4BAA4B1hD,GAAG,EAAMoI,EAAM,GAAIC,EAAI,IAC3EC,EAAO7F,KAAKg/C,QAET,CAEL,IAAMzH,EAAiB5xC,EAAM,KAAOC,EAAI,GAAKA,EAAI,QAAKpF,EACtDqF,EAAO7F,KAAK0jB,EAAOu7B,4BAA4Bt5C,EAAM,IAAI,EAAMA,EAAM,GAAI4xC,IAGzE,IAASh6C,EAAIoI,EAAM,GAAK,EAAGpI,GAAKqI,EAAI,GAAK,EAAGrI,IAAK,CAC/C,IAAM2hD,EAAax7B,EAAOC,MAAMnlB,IAAIjB,GAC9ByhD,EAAWt7B,EAAOu7B,4BAA4B1hD,GAAG,GACnD2hD,GAAcA,EAAWtmC,UAC3B/S,EAAOA,EAAO3F,OAAS,IAAM8+C,EAE7Bn5C,EAAO7F,KAAKg/C,GAKhB,GAAIr5C,EAAM,KAAOC,EAAI,GAAI,CACjBs5C,EAAax7B,EAAOC,MAAMnlB,IAAIoH,EAAI,IAClCo5C,EAAWt7B,EAAOu7B,4BAA4Br5C,EAAI,IAAI,EAAM,EAAGA,EAAI,IACrEs5C,GAAcA,EAAYtmC,UAC5B/S,EAAOA,EAAO3F,OAAS,IAAM8+C,EAE7Bn5C,EAAO7F,KAAKg/C,IAWlB,OAJwBn5C,EAAOkoC,KAAI,SAAA7zB,GACjC,OAAOA,EAAK2jB,QAAQ8f,EAA8B,QACjD1nC,KAAKgY,EAAQtiB,UAAY,OAAS,O,gCAQhC,YAAA4e,eAAP,WACE1qB,KAAK6+C,OAAOn0B,iBACZ1qB,KAAKg/C,4BACLh/C,KAAKwmB,UACLxmB,KAAKgvB,mBAAmBzuB,QAQnB,YAAAimB,QAAP,SAAe84B,GAAf,YAEOt/C,KAAKk/B,yBACRl/B,KAAKk/B,uBAAyBvhC,OAAOmpB,uBAAsB,WAAM,SAAKwY,eAKpElR,EAAQriB,SAAWuzC,KACCt/C,KAAKk7B,cACT76B,QAChBL,KAAKk+C,uBAAuB39C,KAAKP,KAAKk7B,iBASpC,YAAAoE,SAAR,WACEt/B,KAAKk/B,4BAAyBv+B,EAC9BX,KAAKm+C,iBAAiB59C,KAAK,CACzBuF,MAAO9F,KAAK6+C,OAAOI,oBACnBl5C,IAAK/F,KAAK6+C,OAAOK,kBACjBpsC,iBAAgD,IAA9B9S,KAAK++C,wBAQpB,YAAAxd,mBAAP,SAA0Bhc,GACxB,IAAMa,EAASpmB,KAAKu/C,sBAAsBh6B,GACpCzf,EAAQ9F,KAAK6+C,OAAOI,oBACpBl5C,EAAM/F,KAAK6+C,OAAOK,kBAExB,SAAKp5C,GAAUC,GAAQqgB,IAIhBpmB,KAAKw/C,sBAAsBp5B,EAAQtgB,EAAOC,IAGzC,YAAAy5C,sBAAV,SAAgCp5B,EAA0BtgB,EAAyBC,GACjF,OAAQqgB,EAAO,GAAKtgB,EAAM,IAAMsgB,EAAO,GAAKrgB,EAAI,IAC3CD,EAAM,KAAOC,EAAI,IAAMqgB,EAAO,KAAOtgB,EAAM,IAAMsgB,EAAO,IAAMtgB,EAAM,IAAMsgB,EAAO,GAAKrgB,EAAI,IAC1FD,EAAM,GAAKC,EAAI,IAAMqgB,EAAO,KAAOrgB,EAAI,IAAMqgB,EAAO,GAAKrgB,EAAI,IAC7DD,EAAM,GAAKC,EAAI,IAAMqgB,EAAO,KAAOtgB,EAAM,IAAMsgB,EAAO,IAAMtgB,EAAM,IAOlE,YAAA07B,mBAAP,SAA0Bjc,GACxB,IAAMa,EAASpmB,KAAKu/C,sBAAsBh6B,GACtCa,IACFpmB,KAAKy/C,cAAcr5B,GAAQ,GAC3BpmB,KAAK6+C,OAAOzjB,kBAAez6B,EAC3BX,KAAKwmB,SAAQ,KAOV,YAAAmE,UAAP,WACE3qB,KAAK6+C,OAAOa,mBAAoB,EAChC1/C,KAAKwmB,UACLxmB,KAAKgvB,mBAAmBzuB,QAGnB,YAAAqqB,YAAP,SAAmB9kB,EAAeC,GAChC/F,KAAK6+C,OAAOn0B,iBACZ5kB,EAAQyD,KAAKmB,IAAI5E,EAAO,GACxBC,EAAMwD,KAAKsB,IAAI9E,EAAK/F,KAAK0Q,eAAemT,OAAOC,MAAMzjB,OAAS,GAC9DL,KAAK6+C,OAAO1jB,eAAiB,CAAC,EAAGr1B,GACjC9F,KAAK6+C,OAAOzjB,aAAe,CAACp7B,KAAK0Q,eAAeiG,KAAM5Q,GACtD/F,KAAKwmB,UACLxmB,KAAKgvB,mBAAmBzuB,QAOlB,YAAAo+C,QAAR,SAAgB7zB,GACO9qB,KAAK6+C,OAAOH,OAAO5zB,IAEtC9qB,KAAKwmB,WAQD,YAAA+4B,sBAAR,SAA8Bh6B,GAC5B,IAAMa,EAASpmB,KAAKm2B,cAAcwpB,UAAUp6B,EAAOvlB,KAAK2wC,eAAgB3wC,KAAK0Q,eAAeiG,KAAM3W,KAAK0Q,eAAe4C,MAAM,GAC5H,GAAK8S,EAUL,OALAA,EAAO,KACPA,EAAO,KAGPA,EAAO,IAAMpmB,KAAK0Q,eAAemT,OAAOsI,MACjC/F,GAQD,YAAAw5B,2BAAR,SAAmCr6B,GACjC,IAAIgwB,EAAS,EAAAjwB,2BAA2BC,EAAOvlB,KAAK2wC,gBAAgB,GAC9DkP,EAAiB7/C,KAAK0Q,eAAe4C,KAAO/J,KAAKoB,KAAK3K,KAAKoyB,iBAAiBje,OAASnU,KAAK2Q,gBAAgB6C,QAAQ4qB,YACxH,OAAImX,GAAU,GAAKA,GAAUsK,EACpB,GAELtK,EAASsK,IACXtK,GAAUsK,GAGZtK,EAAShsC,KAAKsB,IAAItB,KAAKmB,IAAI6qC,GA3WG,SA4W9BA,GA5W8B,IA6WbhsC,KAAKkwB,IAAI8b,GAAWhsC,KAAKC,MAAe,GAAT+rC,KAQ3C,YAAApc,qBAAP,SAA4B5T,GAC1B,OAAI6I,EAAQziB,MACH4Z,EAAM4S,QAAUn4B,KAAK2Q,gBAAgB6C,QAAQssC,8BAG/Cv6B,EAAM8S,UAOR,YAAArB,YAAP,SAAmBzR,GAIjB,GAHAvlB,KAAKi+C,oBAAsB14B,EAAMw6B,WAGZ,IAAjBx6B,EAAMuO,SAAgB9zB,KAAKqqB,eAKV,IAAjB9E,EAAMuO,OAAV,CAKA,IAAK9zB,KAAKg+C,SAAU,CAClB,IAAKh+C,KAAKm5B,qBAAqB5T,GAC7B,OAIFA,EAAM2X,kBAIR3X,EAAMsT,iBAGN74B,KAAK+9C,kBAAoB,EAErB/9C,KAAKg+C,UAAYz4B,EAAM8S,SACzBr4B,KAAKggD,oBAAoBz6B,GAEJ,IAAjBA,EAAM06B,OACRjgD,KAAKkgD,eAAe36B,GACM,IAAjBA,EAAM06B,OACfjgD,KAAKmgD,eAAe56B,GACM,IAAjBA,EAAM06B,QACfjgD,KAAKogD,eAAe76B,GAIxBvlB,KAAKqgD,yBACLrgD,KAAKwmB,SAAQ,KAMP,YAAA65B,uBAAR,sBAEMrgD,KAAK2wC,eAAe5b,gBACtB/0B,KAAK2wC,eAAe5b,cAAcntB,iBAAiB,YAAa5H,KAAKo+C,oBACrEp+C,KAAK2wC,eAAe5b,cAAcntB,iBAAiB,UAAW5H,KAAKs+C,mBAErEt+C,KAAKsgD,yBAA2B3iD,OAAOq8C,aAAY,WAAM,SAAKuG,gBA7arC,KAmbnB,YAAAvB,0BAAR,WACMh/C,KAAK2wC,eAAe5b,gBACtB/0B,KAAK2wC,eAAe5b,cAAcjtB,oBAAoB,YAAa9H,KAAKo+C,oBACxEp+C,KAAK2wC,eAAe5b,cAAcjtB,oBAAoB,UAAW9H,KAAKs+C,mBAExE5E,cAAc15C,KAAKsgD,0BACnBtgD,KAAKsgD,8BAA2B3/C,GAQ1B,YAAAq/C,oBAAR,SAA4Bz6B,GACtBvlB,KAAK6+C,OAAO1jB,iBACdn7B,KAAK6+C,OAAOzjB,aAAep7B,KAAKu/C,sBAAsBh6B,KASlD,YAAA26B,eAAR,SAAuB36B,GAOrB,GANAvlB,KAAK6+C,OAAO2B,qBAAuB,EACnCxgD,KAAK6+C,OAAOa,mBAAoB,EAChC1/C,KAAK++C,qBAAuB/+C,KAAK+5B,mBAAmBxU,GAAS,EAAuB,EAGpFvlB,KAAK6+C,OAAO1jB,eAAiBn7B,KAAKu/C,sBAAsBh6B,GACnDvlB,KAAK6+C,OAAO1jB,eAAjB,CAGAn7B,KAAK6+C,OAAOzjB,kBAAez6B,EAG3B,IAAM0Z,EAAOra,KAAK0Q,eAAemT,OAAOC,MAAMnlB,IAAIqB,KAAK6+C,OAAO1jB,eAAe,IACxE9gB,GAKDA,EAAKha,SAAWL,KAAK6+C,OAAO1jB,eAAe,IAMM,IAAjD9gB,EAAKjB,SAASpZ,KAAK6+C,OAAO1jB,eAAe,KAC3Cn7B,KAAK6+C,OAAO1jB,eAAe,OAQvB,YAAAglB,eAAR,SAAuB56B,GACrB,IAAMa,EAASpmB,KAAKu/C,sBAAsBh6B,GACtCa,IACFpmB,KAAK++C,qBAAuB,EAC5B/+C,KAAKy/C,cAAcr5B,GAAQ,KASvB,YAAAg6B,eAAR,SAAuB76B,GACrB,IAAMa,EAASpmB,KAAKu/C,sBAAsBh6B,GACtCa,IACFpmB,KAAK++C,qBAAuB,EAC5B/+C,KAAKygD,cAAcr6B,EAAO,MAQvB,YAAA2T,mBAAP,SAA0BxU,GACxB,OAAOA,EAAM4S,UAAY/J,EAAQziB,OAAS3L,KAAK2Q,gBAAgB6C,QAAQssC,gCAQjE,YAAAzB,aAAR,SAAqB94B,GAQnB,GAJAA,EAAMm7B,2BAID1gD,KAAK6+C,OAAO1jB,eAAjB,CAMA,IAAMwlB,EAAuB3gD,KAAK6+C,OAAOzjB,aAAe,CAACp7B,KAAK6+C,OAAOzjB,aAAa,GAAIp7B,KAAK6+C,OAAOzjB,aAAa,IAAM,KAIrH,GADAp7B,KAAK6+C,OAAOzjB,aAAep7B,KAAKu/C,sBAAsBh6B,GACjDvlB,KAAK6+C,OAAOzjB,aAAjB,CAMkC,IAA9Bp7B,KAAK++C,qBACH/+C,KAAK6+C,OAAOzjB,aAAa,GAAKp7B,KAAK6+C,OAAO1jB,eAAe,GAC3Dn7B,KAAK6+C,OAAOzjB,aAAa,GAAK,EAE9Bp7B,KAAK6+C,OAAOzjB,aAAa,GAAKp7B,KAAK0Q,eAAeiG,KAEb,IAA9B3W,KAAK++C,sBACd/+C,KAAK4gD,gBAAgB5gD,KAAK6+C,OAAOzjB,cAInCp7B,KAAK+9C,kBAAoB/9C,KAAK4/C,2BAA2Br6B,GAKvB,IAA9BvlB,KAAK++C,uBACH/+C,KAAK+9C,kBAAoB,EAC3B/9C,KAAK6+C,OAAOzjB,aAAa,GAAKp7B,KAAK0Q,eAAeiG,KACzC3W,KAAK+9C,kBAAoB,IAClC/9C,KAAK6+C,OAAOzjB,aAAa,GAAK,IAOlC,IAAMvX,EAAS7jB,KAAK0Q,eAAemT,OACnC,GAAI7jB,KAAK6+C,OAAOzjB,aAAa,GAAKvX,EAAOC,MAAMzjB,OAAQ,CACrD,IAAMga,EAAOwJ,EAAOC,MAAMnlB,IAAIqB,KAAK6+C,OAAOzjB,aAAa,IACnD/gB,GAAuD,IAA/CA,EAAKjB,SAASpZ,KAAK6+C,OAAOzjB,aAAa,KACjDp7B,KAAK6+C,OAAOzjB,aAAa,KAKxBulB,GACHA,EAAqB,KAAO3gD,KAAK6+C,OAAOzjB,aAAa,IACrDulB,EAAqB,KAAO3gD,KAAK6+C,OAAOzjB,aAAa,IACrDp7B,KAAKwmB,SAAQ,QA5CbxmB,KAAKwmB,SAAQ,KAoDT,YAAA+5B,YAAR,WACE,GAAKvgD,KAAK6+C,OAAOzjB,cAAiBp7B,KAAK6+C,OAAO1jB,gBAG1Cn7B,KAAK+9C,kBAAmB,CAC1B/9C,KAAKw+B,aAAax+B,KAAK+9C,mBAAmB,GAK1C,IAAMl6B,EAAS7jB,KAAK0Q,eAAemT,OAC/B7jB,KAAK+9C,kBAAoB,GACO,IAA9B/9C,KAAK++C,uBACP/+C,KAAK6+C,OAAOzjB,aAAa,GAAKp7B,KAAK0Q,eAAeiG,MAEpD3W,KAAK6+C,OAAOzjB,aAAa,GAAK7xB,KAAKsB,IAAIgZ,EAAOsI,MAAQnsB,KAAK0Q,eAAe4C,KAAMuQ,EAAOC,MAAMzjB,OAAS,KAEpE,IAA9BL,KAAK++C,uBACP/+C,KAAK6+C,OAAOzjB,aAAa,GAAK,GAEhCp7B,KAAK6+C,OAAOzjB,aAAa,GAAKvX,EAAOsI,OAEvCnsB,KAAKwmB,YAQD,YAAA+3B,WAAR,SAAmBh5B,GACjB,IAAMs7B,EAAct7B,EAAMw6B,UAAY//C,KAAKi+C,oBAI3C,GAFAj+C,KAAKg/C,4BAEDh/C,KAAKk7B,cAAc76B,QAAU,GAAKwgD,EApnBP,KAqnB7B,GAAIt7B,EAAM4S,QAAUn4B,KAAK0Q,eAAemT,OAAOuI,QAAUpsB,KAAK0Q,eAAemT,OAAOsI,MAAO,CACzF,IAAM20B,EAAc9gD,KAAKm2B,cAAcwpB,UACrCp6B,EACAvlB,KAAKi7C,SACLj7C,KAAK0Q,eAAeiG,KACpB3W,KAAK0Q,eAAe4C,MACpB,GAEF,GAAIwtC,QAAkCngD,IAAnBmgD,EAAY,SAAuCngD,IAAnBmgD,EAAY,GAAkB,CAC/E,IAAMxnB,EAAW,EAAAynB,mBAAmBD,EAAY,GAAK,EAAGA,EAAY,GAAK,EAAG9gD,KAAK0Q,eAAgB1Q,KAAK8vB,aAAayJ,gBAAgBC,uBACnIx5B,KAAK8vB,aAAaoD,iBAAiBoG,GAAU,UAGxCt5B,KAAKqqB,cACdrqB,KAAKgvB,mBAAmBzuB,QAIpB,YAAAq+C,kBAAR,SAA0B5uB,GAA1B,WACEhwB,KAAK0qB,iBAKL1qB,KAAKy+C,cAAcr+C,UACnBJ,KAAKy+C,cAAgBzuB,EAAEgxB,aAAal9B,MAAM46B,QAAO,SAAA5zB,GAAU,SAAK6zB,QAAQ7zB,OAQlE,YAAAm2B,oCAAR,SAA4C5B,EAAyBj5B,GAEnE,IADA,IAAI86B,EAAY96B,EAAO,GACd1oB,EAAI,EAAG0oB,EAAO,IAAM1oB,EAAGA,IAAK,CACnC,IAAM,EAAS2hD,EAAW3lC,SAAShc,EAAGsC,KAAKsjB,WAAW3f,WAAWtD,OAC/B,IAA9BL,KAAKsjB,UAAU5f,WAGjBw9C,IACS,EAAS,GAAK96B,EAAO,KAAO1oB,IAIrCwjD,GAAa,EAAS,GAG1B,OAAOA,GAGF,YAAAjmB,aAAP,SAAoBjD,EAAapU,EAAavjB,GAC5CL,KAAK6+C,OAAOn0B,iBACZ1qB,KAAKg/C,4BACLh/C,KAAK6+C,OAAO1jB,eAAiB,CAACnD,EAAKpU,GACnC5jB,KAAK6+C,OAAO2B,qBAAuBngD,EACnCL,KAAKwmB,WAOC,YAAA26B,WAAR,SAAmB/6B,EAA0Bg7B,EAAuCC,EAAyCC,GAE3H,QAFkF,IAAAD,OAAA,QAAyC,IAAAC,OAAA,KAEvHl7B,EAAO,IAAMpmB,KAAK0Q,eAAeiG,MAArC,CAIA,IAAMkN,EAAS7jB,KAAK0Q,eAAemT,OAC7Bw7B,EAAax7B,EAAOC,MAAMnlB,IAAIynB,EAAO,IAC3C,GAAKi5B,EAAL,CAIA,IAAMhlC,EAAOwJ,EAAOu7B,4BAA4Bh5B,EAAO,IAAI,GAGvDzM,EAAa3Z,KAAKihD,oCAAoC5B,EAAYj5B,GAClE5B,EAAW7K,EAGT4nC,EAAan7B,EAAO,GAAKzM,EAC3B6nC,EAAoB,EACpBC,EAAqB,EACrBC,EAAqB,EACrBC,EAAsB,EAE1B,GAAgC,MAA5BtnC,EAAKunC,OAAOjoC,GAAqB,CAEnC,KAAOA,EAAa,GAAqC,MAAhCU,EAAKunC,OAAOjoC,EAAa,IAChDA,IAEF,KAAO6K,EAAWnK,EAAKha,QAAwC,MAA9Bga,EAAKunC,OAAOp9B,EAAW,IACtDA,QAEG,CAKL,IAAItJ,EAAWkL,EAAO,GAClBjL,EAASiL,EAAO,GAIkB,IAAlCi5B,EAAW37C,SAASwX,KACtBsmC,IACAtmC,KAEkC,IAAhCmkC,EAAW37C,SAASyX,KACtBsmC,IACAtmC,KAIF,IAAM,EAASkkC,EAAW5lC,UAAU0B,GAAQ9a,OAO5C,IANI,EAAS,IACXshD,GAAuB,EAAS,EAChCn9B,GAAY,EAAS,GAIhBtJ,EAAW,GAAKvB,EAAa,IAAM3Z,KAAK6hD,qBAAqBxC,EAAW3lC,SAASwB,EAAW,EAAGlb,KAAKsjB,aAAa,CACtH+7B,EAAW3lC,SAASwB,EAAW,EAAGlb,KAAKsjB,WACvC,IAAM,EAAStjB,KAAKsjB,UAAU3f,WAAWtD,OACP,IAA9BL,KAAKsjB,UAAU5f,YAEjB89C,IACAtmC,KACS,EAAS,IAGlBwmC,GAAsB,EAAS,EAC/B/nC,GAAc,EAAS,GAEzBA,IACAuB,IAEF,KAAOC,EAASkkC,EAAWh/C,QAAUmkB,EAAW,EAAInK,EAAKha,SAAWL,KAAK6hD,qBAAqBxC,EAAW3lC,SAASyB,EAAS,EAAGnb,KAAKsjB,aAAa,CAC9I+7B,EAAW3lC,SAASyB,EAAS,EAAGnb,KAAKsjB,WACrC,IAAM,EAAStjB,KAAKsjB,UAAU3f,WAAWtD,OACP,IAA9BL,KAAKsjB,UAAU5f,YAEjB+9C,IACAtmC,KACS,EAAS,IAGlBwmC,GAAuB,EAAS,EAChCn9B,GAAY,EAAS,GAEvBA,IACArJ,KAKJqJ,IAIA,IAAI1e,EACA6T,EACE4nC,EACAC,EACAE,EAIFrhD,EAASkJ,KAAKsB,IAAI7K,KAAK0Q,eAAeiG,KACxC6N,EACE7K,EACA6nC,EACAC,EACAC,EACAC,GAEJ,GAAKP,GAA4E,KAA5C/mC,EAAKtQ,MAAM4P,EAAY6K,GAAUs9B,OAAtE,CAKA,GAAIT,GACY,IAAVv7C,GAA8C,KAA/Bu5C,EAAW7lC,aAAa,GAAqB,CAC9D,IAAMuoC,EAAqBl+B,EAAOC,MAAMnlB,IAAIynB,EAAO,GAAK,GACxD,GAAI27B,GAAsB1C,EAAWtmC,WAA+E,KAAlEgpC,EAAmBvoC,aAAaxZ,KAAK0Q,eAAeiG,KAAO,GAAqB,CAChI,IAAMqrC,EAA2BhiD,KAAKmhD,WAAW,CAACnhD,KAAK0Q,eAAeiG,KAAO,EAAGyP,EAAO,GAAK,IAAI,GAAO,GAAM,GAC7G,GAAI47B,EAA0B,CAC5B,IAAMzM,EAASv1C,KAAK0Q,eAAeiG,KAAOqrC,EAAyBl8C,MACnEA,GAASyvC,EACTl1C,GAAUk1C,IAOlB,GAAI+L,GACEx7C,EAAQzF,IAAWL,KAAK0Q,eAAeiG,MAAkE,KAA1D0oC,EAAW7lC,aAAaxZ,KAAK0Q,eAAeiG,KAAO,GAAqB,CACzH,IAAMsrC,EAAiBp+B,EAAOC,MAAMnlB,IAAIynB,EAAO,GAAK,GACpD,GAAI67B,GAAkBA,EAAelpC,WAAgD,KAAnCkpC,EAAezoC,aAAa,GAAqB,CACjG,IAAM0oC,EAAuBliD,KAAKmhD,WAAW,CAAC,EAAG/6B,EAAO,GAAK,IAAI,GAAO,GAAO,GAC3E87B,IACF7hD,GAAU6hD,EAAqB7hD,SAMvC,MAAO,CAAEyF,MAAK,EAAEzF,OAAM,OAQd,YAAAo/C,cAAV,SAAwBr5B,EAA0Bg7B,GAChD,IAAMe,EAAeniD,KAAKmhD,WAAW/6B,EAAQg7B,GAC7C,GAAIe,EAAc,CAEhB,KAAOA,EAAar8C,MAAQ,GAC1Bq8C,EAAar8C,OAAS9F,KAAK0Q,eAAeiG,KAC1CyP,EAAO,KAETpmB,KAAK6+C,OAAO1jB,eAAiB,CAACgnB,EAAar8C,MAAOsgB,EAAO,IACzDpmB,KAAK6+C,OAAO2B,qBAAuB2B,EAAa9hD,SAQ5C,YAAAugD,gBAAR,SAAwBx6B,GACtB,IAAM+7B,EAAeniD,KAAKmhD,WAAW/6B,GAAQ,GAC7C,GAAI+7B,EAAc,CAIhB,IAHA,IAAIvvC,EAASwT,EAAO,GAGb+7B,EAAar8C,MAAQ,GAC1Bq8C,EAAar8C,OAAS9F,KAAK0Q,eAAeiG,KAC1C/D,IAKF,IAAK5S,KAAK6+C,OAAOuD,6BACf,KAAOD,EAAar8C,MAAQq8C,EAAa9hD,OAASL,KAAK0Q,eAAeiG,MACpEwrC,EAAa9hD,QAAUL,KAAK0Q,eAAeiG,KAC3C/D,IAIJ5S,KAAK6+C,OAAOzjB,aAAe,CAACp7B,KAAK6+C,OAAOuD,6BAA+BD,EAAar8C,MAAQq8C,EAAar8C,MAAQq8C,EAAa9hD,OAAQuS,KASlI,YAAAivC,qBAAR,SAA6BvsC,GAG3B,OAAwB,IAApBA,EAAK5R,YAGF1D,KAAK2Q,gBAAgB6C,QAAQ6uC,cAAcxgD,QAAQyT,EAAK3R,aAAe,GAOtE,YAAA88C,cAAV,SAAwBpmC,GACtB,IAAMioC,EAAetiD,KAAK0Q,eAAemT,OAAO0+B,uBAAuBloC,GACvEra,KAAK6+C,OAAO1jB,eAAiB,CAAC,EAAGmnB,EAAa3G,OAC9C37C,KAAK6+C,OAAOzjB,aAAe,CAACp7B,KAAK0Q,eAAeiG,KAAM2rC,EAAaE,MACnExiD,KAAK6+C,OAAO2B,qBAAuB,GA/2B1B/pB,EAAgB,GAkDxB,MAAA9zB,kBACA,MAAA9B,gBACA,MAAAG,cACA,MAAA6B,eACA,MAAAxB,kBAtDQo1B,GAAb,GAAa,EAAAA,oB,8ECzDb,iBAuBE,WACU/lB,GAAA,KAAAA,iBApBH,KAAAgvC,mBAA6B,EAO7B,KAAAc,qBAA+B,EAgHxC,OA5FS,YAAA91B,eAAP,WACE1qB,KAAKm7B,oBAAiBx6B,EACtBX,KAAKo7B,kBAAez6B,EACpBX,KAAK0/C,mBAAoB,EACzB1/C,KAAKwgD,qBAAuB,GAM9B,sBAAW,kCAAmB,C,IAA9B,WACE,OAAIxgD,KAAK0/C,kBACA,CAAC,EAAG,GAGR1/C,KAAKo7B,cAAiBp7B,KAAKm7B,gBAIzBn7B,KAAKoiD,6BAA+BpiD,KAAKo7B,aAHvCp7B,KAAKm7B,gB,gCAUhB,sBAAW,gCAAiB,C,IAA5B,WACE,GAAIn7B,KAAK0/C,kBACP,MAAO,CAAC1/C,KAAK0Q,eAAeiG,KAAM3W,KAAK0Q,eAAemT,OAAOuI,MAAQpsB,KAAK0Q,eAAe4C,KAAO,GAGlG,GAAKtT,KAAKm7B,eAAV,CAKA,IAAKn7B,KAAKo7B,cAAgBp7B,KAAKoiD,6BAA8B,CAC3D,IAAMK,EAAkBziD,KAAKm7B,eAAe,GAAKn7B,KAAKwgD,qBACtD,OAAIiC,EAAkBziD,KAAK0Q,eAAeiG,KACjC,CAAC8rC,EAAkBziD,KAAK0Q,eAAeiG,KAAM3W,KAAKm7B,eAAe,GAAK5xB,KAAKg3B,MAAMkiB,EAAkBziD,KAAK0Q,eAAeiG,OAEzH,CAAC8rC,EAAiBziD,KAAKm7B,eAAe,IAI/C,OAAIn7B,KAAKwgD,sBAEHxgD,KAAKo7B,aAAa,KAAOp7B,KAAKm7B,eAAe,GACxC,CAAC5xB,KAAKmB,IAAI1K,KAAKm7B,eAAe,GAAKn7B,KAAKwgD,qBAAsBxgD,KAAKo7B,aAAa,IAAKp7B,KAAKo7B,aAAa,IAG3Gp7B,KAAKo7B,e,gCAMP,YAAAgnB,2BAAP,WACE,IAAMt8C,EAAQ9F,KAAKm7B,eACbp1B,EAAM/F,KAAKo7B,aACjB,SAAKt1B,IAAUC,KAGRD,EAAM,GAAKC,EAAI,IAAOD,EAAM,KAAOC,EAAI,IAAMD,EAAM,GAAKC,EAAI,KAQ9D,YAAA24C,OAAP,SAAc5zB,GAUZ,OARI9qB,KAAKm7B,iBACPn7B,KAAKm7B,eAAe,IAAMrQ,GAExB9qB,KAAKo7B,eACPp7B,KAAKo7B,aAAa,IAAMtQ,GAItB9qB,KAAKo7B,cAAgBp7B,KAAKo7B,aAAa,GAAK,GAC9Cp7B,KAAK0qB,kBACE,IAIL1qB,KAAKm7B,gBAAkBn7B,KAAKm7B,eAAe,GAAK,IAClDn7B,KAAKm7B,eAAe,GAAK,IAEpB,IAEX,EA3HA,GAAa,EAAA2jB,kB,8ECNb,YAyEA,SAAS4D,EAAmB9P,EAAgB+P,EAAiB9Q,EAA+B+Q,GAC1F,IAAMjwC,EAAWigC,EAASiQ,EAAkBhR,EAAee,GACrDhgC,EAAS+vC,EAAUE,EAAkBhR,EAAe8Q,GAI1D,OAAOG,EAFYv5C,KAAKkwB,IAAI9mB,EAAWC,GAsCzC,SAA0BggC,EAAgB+P,EAAiB9Q,GAKzD,IAJA,IAAIkR,EAAc,EACZpwC,EAAWigC,EAASiQ,EAAkBhR,EAAee,GACrDhgC,EAAS+vC,EAAUE,EAAkBhR,EAAe8Q,GAEjDjlD,EAAI,EAAGA,EAAI6L,KAAKkwB,IAAI9mB,EAAWC,GAASlV,IAAK,CACpD,IAAMslD,EAAmD,MAAvCC,EAAkBrQ,EAAQ+P,IAA6B,EAAI,EACvEtoC,EAAOw3B,EAAchuB,OAAOC,MAAMnlB,IAAIgU,EAAYqwC,EAAYtlD,GAChE2c,GAAQA,EAAKtB,WACfgqC,IAIJ,OAAOA,EAnD0CG,CAAiBtQ,EAAQ+P,EAAS9Q,GAEzDvY,EAAS2pB,EAAkBrQ,EAAQ+P,GAAUC,IAwDzE,SAASC,EAAkBhR,EAA+BsR,GAKxD,IAJA,IAAIp9B,EAAW,EACX1L,EAAOw3B,EAAchuB,OAAOC,MAAMnlB,IAAIwkD,GACtCC,EAAY/oC,GAAQA,EAAKtB,UAEtBqqC,GAAaD,GAAc,GAAKA,EAAatR,EAAcv+B,MAChEyS,IAEAq9B,GADA/oC,EAAOw3B,EAAchuB,OAAOC,MAAMnlB,MAAMwkD,KACpB9oC,EAAKtB,UAG3B,OAAOgN,EAUT,SAASs9B,EAAoB1Q,EAAgBC,EAAgB0Q,EAAiBX,EAAiB9Q,EAA+B+Q,GAC5H,IAAIjwC,EAOJ,OALEA,EADE+vC,EAAmBY,EAASX,EAAS9Q,EAAe+Q,GAAmBviD,OAAS,EACvEsiD,EAAUE,EAAkBhR,EAAe8Q,GAE3C/P,EAGRD,EAAS2Q,GACZ3wC,GAAYgwC,GACXhQ,GAAU2Q,GACX3wC,EAAWgwC,EACJ,IAEF,IAMT,SAASM,EAAkBrQ,EAAgB+P,GACzC,OAAO/P,EAAS+P,EAAU,IAAe,IAY3C,SAAStD,EACPnkC,EACAvI,EACAwI,EACAvI,EACA2wC,EACA1R,GAMA,IAJA,IAAI2R,EAAatoC,EACbioC,EAAaxwC,EACb8wC,EAAY,GAETD,IAAeroC,GAAUgoC,IAAevwC,GAC7C4wC,GAAcD,EAAU,GAAK,EAEzBA,GAAWC,EAAa3R,EAAcl7B,KAAO,GAC/C8sC,GAAa5R,EAAchuB,OAAOu7B,4BAChC+D,GAAY,EAAOjoC,EAAUsoC,GAE/BA,EAAa,EACbtoC,EAAW,EACXioC,MACUI,GAAWC,EAAa,IAClCC,GAAa5R,EAAchuB,OAAOu7B,4BAChC+D,GAAY,EAAO,EAAGjoC,EAAW,GAGnCA,EADAsoC,EAAa3R,EAAcl7B,KAAO,EAElCwsC,KAIJ,OAAOM,EAAY5R,EAAchuB,OAAOu7B,4BACtC+D,GAAY,EAAOjoC,EAAUsoC,GAQjC,SAASlqB,EAAS0pB,EAAsBJ,GACtC,IAAMc,EAAOd,EAAoB,IAAM,IACvC,OAAO,EAAA52C,GAAG4B,IAAM81C,EAAMV,EASxB,SAASF,EAAO9L,EAAe2M,GAC7B3M,EAAQztC,KAAKg3B,MAAMyW,GAEnB,IADA,IAAI4M,EAAM,GACDlmD,EAAI,EAAGA,EAAIs5C,EAAOt5C,IACzBkmD,GAAOD,EAET,OAAOC,EAxOT,8BAAmCN,EAAiBX,EAAiB9Q,EAA+B+Q,GAClG,IAWII,EAXErQ,EAASd,EAAchuB,OAAOrP,EAC9Bo+B,EAASf,EAAchuB,OAAOpP,EAGpC,IAAKo9B,EAAchuB,OAAOuV,cACxB,OAsCJ,SAA0BuZ,EAAgBC,EAAgB0Q,EAAiBX,EAAiB9Q,EAA+B+Q,GACzH,GAAqF,IAAjFF,EAAmB9P,EAAQ+P,EAAS9Q,EAAe+Q,GAAmBviD,OACxE,MAAO,GAET,OAAOyiD,EAAOzD,EACZ1M,EAAQC,EAAQD,EAChBC,EAASiQ,EAAkBhR,EAAee,IAAS,EAAOf,GAC1DxxC,OAAQi5B,EAAS,IAAgBspB,IA7C1BiB,CAAiBlR,EAAQC,EAAQ0Q,EAASX,EAAS9Q,EAAe+Q,GACvEF,EAAmB9P,EAAQ+P,EAAS9Q,EAAe+Q,GA+DzD,SAA4BjQ,EAAgBC,EAAgB0Q,EAAiBX,EAAiB9Q,EAA+B+Q,GAC3H,IAAIjwC,EAEFA,EADE+vC,EAAmB9P,EAAQ+P,EAAS9Q,EAAe+Q,GAAmBviD,OAAS,EACtEsiD,EAAUE,EAAkBhR,EAAe8Q,GAE3C/P,EAGb,IAAMhgC,EAAS+vC,EACTK,EAAYK,EAAoB1Q,EAAQC,EAAQ0Q,EAASX,EAAS9Q,EAAe+Q,GAEvF,OAAOE,EAAOzD,EACZ1M,EAAQhgC,EAAU2wC,EAAS1wC,EACb,MAAdowC,EAA+BnR,GAC/BxxC,OAAQi5B,EAAS0pB,EAAWJ,IA5E1BkB,CAAmBnR,EAAQC,EAAQ0Q,EAASX,EAAS9Q,EAAe+Q,GAKxE,GAAIhQ,IAAW+P,EAEb,OADAK,EAAYrQ,EAAS2Q,EAAU,IAAiB,IACzCR,EAAOv5C,KAAKkwB,IAAIkZ,EAAS2Q,GAAUhqB,EAAS0pB,EAAWJ,IAEhEI,EAAYpQ,EAAS+P,EAAU,IAAiB,IAChD,IAAMoB,EAAgBx6C,KAAKkwB,IAAImZ,EAAS+P,GAIxC,OAAOG,EAaT,SAAwBkB,EAAenS,GACrC,OAAOA,EAAcl7B,KAAOqtC,EAjBRC,CAAerR,EAAS+P,EAAUW,EAAU3Q,EAAQd,IACrEkS,EAAgB,GAAKlS,EAAcl7B,KAAO,IACtBi8B,EAAS+P,EAAUhQ,EAAS2Q,GAQpC,GAPYhqB,EAAS0pB,EAAWJ,M,mfCrCjD,WAGA,aAiBE,WAC2BjyC,GAAA,KAAAA,kBAoC7B,OAjDE,sBAAW,iBAAY,C,IAAvB,WACE,IAAKulB,EAAaguB,cAAe,CAC/B,IAAMC,EAA8CxmD,OAAQymD,cAAsBzmD,OAAQ0mD,mBAC1F,IAAKF,EAEH,OADAthC,QAAQC,KAAK,4FACN,KAEToT,EAAaguB,cAAgB,IAAIC,EAEnC,OAAOjuB,EAAaguB,e,gCAQf,YAAAhoB,cAAP,WACE,IAAMjb,EAAMiV,EAAaouB,aACzB,GAAKrjC,EAAL,CAGA,IAAMsjC,EAAkBtjC,EAAIujC,qBAC5BvjC,EAAIwjC,gBAAgBzkD,KAAK0kD,qBAAqB1kD,KAAK2kD,gBAAgB3kD,KAAK2Q,gBAAgB6C,QAAQoxC,aAAa,SAAC/gC,GAC5G0gC,EAAgB1gC,OAASA,EACzB0gC,EAAgBM,QAAQ5jC,EAAI6jC,aAC5BP,EAAgBz+C,MAAM,QAIlB,YAAA4+C,qBAAR,SAA6BK,GAK3B,IAJA,IAAMC,EAAernD,OAAOsnD,KAAKF,GAC3Blb,EAAMmb,EAAa3kD,OACnB6kD,EAAQ,IAAIv+C,WAAWkjC,GAEpBnsC,EAAI,EAAGA,EAAImsC,EAAKnsC,IACvBwnD,EAAMxnD,GAAKsnD,EAAalhD,WAAWpG,GAGrC,OAAOwnD,EAAMrhC,QAGP,YAAA8gC,gBAAR,SAAwBQ,GAKtB,OAHiBA,EAAQC,MAAM,KAGf,IApDPlvB,EAAY,GAkBpB,MAAA70B,kBAlBQ60B,GAAb,GAAa,EAAAA,gB,+zBCHb,WACA,OACA,OAEA,OAYA,cAaE,WACmB+kB,EACAtK,EACgBjgC,EACDylB,EACIxC,GALtC,MAOE,cAAO,K,OANU,EAAAsnB,WACA,EAAAtK,iBACgB,EAAAjgC,iBACD,EAAAylB,gBACI,EAAAxC,oBAjB9B,EAAA0xB,OAAuB,GAEvB,EAAAC,iBAA2B,EAO3B,EAAAC,iBAA6D,MAAC5kD,OAAWA,GACzE,EAAA6kD,wBAAkC,EAWxC,EAAK9jD,SAAS,EAAA+xB,yBAAyB,EAAKwnB,SAAU,aAAa,SAAAjrB,GAAK,SAAKy1B,aAAaz1B,OAG1F,EAAKouB,mBAAqB,SAAApuB,GAAK,SAAKquB,aAAaruB,IACjD,EAAK01B,oBAAsB,SAAA11B,GAAK,SAAK21B,cAAc31B,IACnD,EAAK41B,eAAiB,SAAA51B,GAAK,SAAK61B,SAAS71B,I,EA8L7C,OAzNsC,OA8B7B,YAAA5vB,QAAP,WACE,YAAMA,QAAO,WACbJ,KAAK8lD,eAGA,YAAAn0C,IAAP,SAAWo0C,GACT/lD,KAAKqlD,OAAOllD,KAAK4lD,GACU,IAAvB/lD,KAAKqlD,OAAOhlD,QACdL,KAAKgmD,aAIF,YAAAlvB,SAAP,SAAgBhxB,EAAgBC,GAE9B,GAA2B,IAAvB/F,KAAKqlD,OAAOhlD,OAAhB,CAKKyF,GAAUC,IACbD,EAAQ,EACRC,EAAM/F,KAAK0Q,eAAe4C,KAAO,GAInC,IAAK,IAAI5V,EAAI,EAAGA,EAAIsC,KAAKqlD,OAAOhlD,OAAQ3C,IAAK,CAC3C,IAAMqoD,EAAO/lD,KAAKqlD,OAAO3nD,IACpBqoD,EAAKxL,GAAKz0C,GAASigD,EAAKxL,IAAMx0C,EAAM,GACpCggD,EAAKtL,GAAK30C,GAASigD,EAAKtL,IAAM10C,EAAM,GACpCggD,EAAKxL,GAAKz0C,GAASigD,EAAKtL,GAAK10C,EAAM,KAClC/F,KAAKimD,cAAgBjmD,KAAKimD,eAAiBF,IAC7C/lD,KAAKimD,aAAa/J,gBAClBl8C,KAAKimD,kBAAetlD,GAEtBX,KAAKqlD,OAAO/kD,OAAO5C,IAAK,IAKD,IAAvBsC,KAAKqlD,OAAOhlD,QACdL,KAAK8lD,gBAID,YAAAE,UAAR,WACOhmD,KAAKslD,kBACRtlD,KAAKslD,iBAAkB,EACvBtlD,KAAKi7C,SAASrzC,iBAAiB,YAAa5H,KAAKo+C,oBACjDp+C,KAAKi7C,SAASrzC,iBAAiB,aAAc5H,KAAK0lD,qBAClD1lD,KAAKi7C,SAASrzC,iBAAiB,QAAS5H,KAAK4lD,kBAIzC,YAAAE,YAAR,WACM9lD,KAAKslD,kBACPtlD,KAAKslD,iBAAkB,EACvBtlD,KAAKi7C,SAASnzC,oBAAoB,YAAa9H,KAAKo+C,oBACpDp+C,KAAKi7C,SAASnzC,oBAAoB,aAAc9H,KAAK0lD,qBACrD1lD,KAAKi7C,SAASnzC,oBAAoB,QAAS9H,KAAK4lD,kBAI5C,YAAAvH,aAAR,SAAqBruB,GAGfhwB,KAAKulD,iBAAiB,KAAOv1B,EAAEk2B,OAASlmD,KAAKulD,iBAAiB,KAAOv1B,EAAE6Q,QACzE7gC,KAAKmmD,SAASn2B,GAEdhwB,KAAKulD,iBAAmB,CAACv1B,EAAEk2B,MAAOl2B,EAAE6Q,SAIhC,YAAAslB,SAAR,SAAiBn2B,GAAjB,WACQ+1B,EAAO/lD,KAAKomD,iBAAiBp2B,GAG/B+1B,IAAS/lD,KAAKimD,eAMdjmD,KAAKimD,eACPjmD,KAAKimD,aAAa/J,gBAClBl8C,KAAKimD,kBAAetlD,EAChBX,KAAKqmD,iBACPjqB,aAAap8B,KAAKqmD,kBAKjBN,IAGL/lD,KAAKimD,aAAeF,EAGhBA,EAAKnI,eACPmI,EAAKnI,cAAc5tB,GAIrBhwB,KAAKqmD,gBAA+B/pB,YAAW,WAAM,SAAKgqB,WAAWt2B,KA9IlD,QAiJb,YAAAs2B,WAAR,SAAmBt2B,GACjBhwB,KAAKqmD,qBAAkB1lD,EACvB,IAAMolD,EAAO/lD,KAAKomD,iBAAiBp2B,GAC/B+1B,GAAQA,EAAK/J,iBACf+J,EAAK/J,gBAAgBhsB,IAIjB,YAAAy1B,aAAR,SAAqBz1B,GAMnB,GAHAhwB,KAAKwlD,wBAA0BxlD,KAAKumD,sBAG/BvmD,KAAKslD,gBAAV,CAMA,IAAMS,EAAO/lD,KAAKomD,iBAAiBp2B,IAC/B+1B,aAAI,EAAJA,EAAM5J,iBAAiBnsB,MACzBA,EAAE6I,iBACF7I,EAAE0wB,8BAIE,YAAAiF,cAAR,SAAsB31B,GAGhBhwB,KAAKimD,eACPjmD,KAAKimD,aAAa/J,gBAClBl8C,KAAKimD,kBAAetlD,EAChBX,KAAKqmD,iBACPjqB,aAAap8B,KAAKqmD,mBAKhB,YAAAR,SAAR,SAAiB71B,GAGf,IAAM+1B,EAAO/lD,KAAKomD,iBAAiBp2B,GAC7Bw2B,EAAyBxmD,KAAKumD,sBAEhCR,GAAQS,IAA2BxmD,KAAKwlD,0BAC1CO,EAAKpI,cAAc3tB,GACnBA,EAAE6I,iBACF7I,EAAE0wB,6BAIE,YAAA6F,oBAAR,WACE,IAAMrrB,EAAgBl7B,KAAK2zB,kBAAkBuH,cAC7C,OAAOA,EAAgBA,EAAc76B,OAAS,GAGxC,YAAA+lD,iBAAR,SAAyBp2B,GACvB,IAAM5J,EAASpmB,KAAKm2B,cAAcwpB,UAAU3vB,EAAGhwB,KAAK2wC,eAAgB3wC,KAAK0Q,eAAeiG,KAAM3W,KAAK0Q,eAAe4C,MAClH,GAAK8S,EAKL,IAFA,IAAM5R,EAAI4R,EAAO,GACX3R,EAAI2R,EAAO,GACR1oB,EAAI,EAAGA,EAAIsC,KAAKqlD,OAAOhlD,OAAQ3C,IAAK,CAC3C,IAAMqoD,EAAO/lD,KAAKqlD,OAAO3nD,GACzB,GAAIqoD,EAAKxL,KAAOwL,EAAKtL,IAEnB,GAAIhmC,IAAMsxC,EAAKxL,IAAM/lC,GAAKuxC,EAAKzL,IAAM9lC,EAAIuxC,EAAKrL,GAC5C,OAAOqL,OAIT,GAAKtxC,IAAMsxC,EAAKxL,IAAM/lC,GAAKuxC,EAAKzL,IAC3B7lC,IAAMsxC,EAAKtL,IAAMjmC,EAAIuxC,EAAKrL,IAC1BjmC,EAAIsxC,EAAKxL,IAAM9lC,EAAIsxC,EAAKtL,GAC3B,OAAOsL,IAnNJlvB,EAAgB,GAgBxB,MAAAh2B,gBACA,MAAAgC,eACA,MAAAE,oBAlBQ8zB,GAAb,CAAsC,EAAA/0B,YAAzB,EAAA+0B,oB,8ZChBb,YAGA,QACA,QACA,OACA,OACA,QAUA,cA0BE,WACmByM,EACAvS,GAFnB,MAIE,cAAO,KAHU,EAAAuS,YACA,EAAAvS,iBAvBX,EAAA01B,qBAA+B,EAiB/B,EAAAC,gBAA4B,GAE5B,EAAAC,iBAA2B,GAOjC,EAAKC,uBAAyBp1C,SAASC,cAAc,OACrD,EAAKm1C,uBAAuBl1C,UAAUC,IAAI,uBAE1C,EAAKk1C,cAAgBr1C,SAASC,cAAc,OAC5C,EAAKo1C,cAAcn1C,UAAUC,IAAI,4BACjC,EAAKk1C,cAAc5xB,aAAa,OAAQ,QACxC,EAAK6xB,aAAe,GACpB,IAAK,IAAIppD,EAAI,EAAGA,EAAI,EAAK4lC,UAAUhwB,KAAM5V,IACvC,EAAKopD,aAAappD,GAAK,EAAKqpD,+BAC5B,EAAKF,cAAc/0C,YAAY,EAAKg1C,aAAappD,I,OAGnD,EAAKspD,0BAA4B,SAAAh3B,GAAK,SAAKi3B,iBAAiBj3B,EAAG,IAC/D,EAAKk3B,6BAA+B,SAAAl3B,GAAK,SAAKi3B,iBAAiBj3B,EAAG,IAClE,EAAK82B,aAAa,GAAGl/C,iBAAiB,QAAS,EAAKo/C,2BACpD,EAAKF,aAAa,EAAKA,aAAazmD,OAAS,GAAGuH,iBAAiB,QAAS,EAAKs/C,8BAE/E,EAAKC,yBACL,EAAKP,uBAAuB90C,YAAY,EAAK+0C,eAE7C,EAAKO,qBAAuB,IAAI,EAAApgC,gBAAgB,EAAKqgC,YAAY/nD,KAAK,IACtE,EAAKgoD,eAEL,EAAKC,YAAc/1C,SAASC,cAAc,OAC1C,EAAK81C,YAAY71C,UAAUC,IAAI,eAC/B,EAAK41C,YAAYtyB,aAAa,YAAa,aAC3C,EAAK2xB,uBAAuB90C,YAAY,EAAKy1C,aAE7C,EAAKjkB,UAAU9d,QAAQgiC,sBAAsB,aAAc,EAAKZ,wBAEhE,EAAKllD,SAAS,EAAK0lD,sBACnB,EAAK1lD,SAAS,EAAK4hC,UAAU1a,UAAS,SAAAoH,GAAK,SAAKlB,UAAUkB,EAAE1c,UAC5D,EAAK5R,SAAS,EAAK4hC,UAAU3a,UAAS,SAAAqH,GAAK,SAAKs3B,aAAat3B,EAAElqB,MAAOkqB,EAAEjqB,SACxE,EAAKrE,SAAS,EAAK4hC,UAAU7a,UAAS,WAAM,SAAK6+B,mBAEjD,EAAK5lD,SAAS,EAAK4hC,UAAUmkB,YAAW,SAAAC,GAAQ,SAAKC,QAAQD,OAC7D,EAAKhmD,SAAS,EAAK4hC,UAAUlb,YAAW,WAAM,SAAKu/B,QAAQ,UAC3D,EAAKjmD,SAAS,EAAK4hC,UAAUskB,WAAU,SAAAC,GAAc,SAAKC,OAAOD,OACjE,EAAKnmD,SAAS,EAAK4hC,UAAU5a,OAAM,SAAAsH,GAAK,SAAKrB,OAAOqB,EAAE3wB,SACtD,EAAKqC,SAAS,EAAK4hC,UAAU/wB,QAAO,WAAM,SAAKw1C,uBAC/C,EAAKrmD,SAAS,EAAKqvB,eAAeyF,oBAAmB,WAAM,SAAK2wB,6BAEhE,EAAKa,kBAAoB,IAAI,EAAArgC,iBAC7B,EAAKjmB,SAAS,EAAKsmD,mBACnB,EAAKA,kBAAkB9gC,aAAY,WAAM,SAAKigC,4BAG9C,EAAKzlD,SAAS,EAAA+xB,yBAAyB91B,OAAQ,UAAU,WAAM,SAAKwpD,6B,EAqMxE,OAnR0C,OAiFjC,YAAA/mD,QAAP,WACE,YAAMA,QAAO,WACbJ,KAAKsjC,UAAU9d,QAAQzT,YAAY/R,KAAK4mD,wBACxC5mD,KAAK8mD,aAAazmD,OAAS,GAGrB,YAAA4mD,iBAAR,SAAyBj3B,EAAeiR,GACtC,IAAMgnB,EAA+Bj4B,EAAE1pB,OACjC4hD,EAAwBloD,KAAK8mD,aAA0B,IAAb7lB,EAAoC,EAAIjhC,KAAK8mD,aAAazmD,OAAS,GAKnH,GAFiB4nD,EAAgBE,aAAa,oBACd,IAAblnB,EAAoC,IAAM,GAAGjhC,KAAKsjC,UAAUzf,OAAOC,MAAMzjB,SAOxF2vB,EAAEo4B,gBAAkBF,EAAxB,CAKA,IAAIG,EACAC,EAgBJ,GAfiB,IAAbrnB,GACFonB,EAAqBJ,EACrBK,EAAwBtoD,KAAK8mD,aAAa3Z,MAC1CntC,KAAK6mD,cAAc90C,YAAYu2C,KAE/BD,EAAqBroD,KAAK8mD,aAAa1uB,QACvCkwB,EAAwBL,EACxBjoD,KAAK6mD,cAAc90C,YAAYs2C,IAIjCA,EAAmBvgD,oBAAoB,QAAS9H,KAAKgnD,2BACrDsB,EAAsBxgD,oBAAoB,QAAS9H,KAAKknD,8BAGvC,IAAbjmB,EAAmC,CACrC,IAAMsnB,EAAavoD,KAAK+mD,+BACxB/mD,KAAK8mD,aAAa0B,QAAQD,GAC1BvoD,KAAK6mD,cAAcW,sBAAsB,aAAce,OAClD,CACCA,EAAavoD,KAAK+mD,+BACxB/mD,KAAK8mD,aAAa3mD,KAAKooD,GACvBvoD,KAAK6mD,cAAc/0C,YAAYy2C,GAIjCvoD,KAAK8mD,aAAa,GAAGl/C,iBAAiB,QAAS5H,KAAKgnD,2BACpDhnD,KAAK8mD,aAAa9mD,KAAK8mD,aAAazmD,OAAS,GAAGuH,iBAAiB,QAAS5H,KAAKknD,8BAG/ElnD,KAAKsjC,UAAUzY,YAAyB,IAAboW,GAAqC,EAAI,GAGpEjhC,KAAK8mD,aAA0B,IAAb7lB,EAAoC,EAAIjhC,KAAK8mD,aAAazmD,OAAS,GAAGgpB,QAGxF2G,EAAE6I,iBACF7I,EAAE0wB,6BAGI,YAAA5xB,UAAR,SAAkBxb,GAEhBtT,KAAK8mD,aAAa9mD,KAAK8mD,aAAazmD,OAAS,GAAGyH,oBAAoB,QAAS9H,KAAKknD,8BAGlF,IAAK,IAAIxpD,EAAIsC,KAAK6mD,cAAc4B,SAASpoD,OAAQ3C,EAAIsC,KAAKsjC,UAAUhwB,KAAM5V,IACxEsC,KAAK8mD,aAAappD,GAAKsC,KAAK+mD,+BAC5B/mD,KAAK6mD,cAAc/0C,YAAY9R,KAAK8mD,aAAappD,IAGnD,KAAOsC,KAAK8mD,aAAazmD,OAASiT,GAChCtT,KAAK6mD,cAAc90C,YAAY/R,KAAK8mD,aAAa3Z,OAInDntC,KAAK8mD,aAAa9mD,KAAK8mD,aAAazmD,OAAS,GAAGuH,iBAAiB,QAAS5H,KAAKknD,8BAE/ElnD,KAAKmnD,0BAGC,YAAAJ,6BAAR,WACE,IAAMvhC,EAAUhU,SAASC,cAAc,OAIvC,OAHA+T,EAAQyP,aAAa,OAAQ,YAC7BzP,EAAQ+P,UAAY,EACpBv1B,KAAK0oD,sBAAsBljC,GACpBA,GAGD,YAAAsiC,OAAR,SAAeD,GACb,IAAK,IAAInqD,EAAI,EAAGA,EAAImqD,EAAYnqD,IAC9BsC,KAAK2nD,QAAQ,MAIT,YAAAA,QAAR,SAAgBD,GAAhB,WACE,GAAI1nD,KAAKymD,qBAAuBkC,GAAsB,CACpD,GAAI3oD,KAAK0mD,gBAAgBrmD,OAAS,EAEZL,KAAK0mD,gBAAgBtuB,UACrBsvB,IAClB1nD,KAAK2mD,kBAAoBe,QAG3B1nD,KAAK2mD,kBAAoBe,EAGd,OAATA,IACF1nD,KAAKymD,uBAC6BkC,KAA9B3oD,KAAKymD,uBACPzmD,KAAKunD,YAAY9pB,aAAe3R,EAAQzQ,gBAKxC,EAAA1P,OACE3L,KAAKunD,YAAY9pB,aAAez9B,KAAKunD,YAAY9pB,YAAYp9B,OAAS,IAAML,KAAKunD,YAAYt2B,YAC/FqL,YAAW,WACT,EAAKsqB,uBAAuB90C,YAAY,EAAKy1C,eAC5C,KAMH,YAAAQ,iBAAR,WACE/nD,KAAKunD,YAAY9pB,YAAc,GAC/Bz9B,KAAKymD,qBAAuB,EAGxB,EAAA96C,OACE3L,KAAKunD,YAAYt2B,YACnBjxB,KAAK4mD,uBAAuB70C,YAAY/R,KAAKunD,cAK3C,YAAA54B,OAAR,SAAei6B,GACb5oD,KAAK+nD,mBACL/nD,KAAK0mD,gBAAgBvmD,KAAKyoD,IAGpB,YAAAtB,aAAR,SAAqBxhD,EAAgBC,GACnC/F,KAAKonD,qBAAqB5gC,QAAQ1gB,EAAOC,EAAK/F,KAAKsjC,UAAUhwB,OAGvD,YAAA+zC,YAAR,SAAoBvhD,EAAeC,GAGjC,IAFA,IAAM8d,EAAkB7jB,KAAKsjC,UAAUzf,OACjCglC,EAAUhlC,EAAOC,MAAMzjB,OAAOiI,WAC3B5K,EAAIoI,EAAOpI,GAAKqI,EAAKrI,IAAK,CACjC,IAAM+mB,EAAWZ,EAAOu7B,4BAA4Bv7B,EAAOsI,MAAQzuB,GAAG,GAChEorD,GAAYjlC,EAAOsI,MAAQzuB,EAAI,GAAG4K,WAClCkd,EAAUxlB,KAAK8mD,aAAappD,GAC9B8nB,IACsB,IAApBf,EAASpkB,OACXmlB,EAAQujC,UAAY,SAEpBvjC,EAAQiY,YAAchZ,EAExBe,EAAQyP,aAAa,gBAAiB6zB,GACtCtjC,EAAQyP,aAAa,eAAgB4zB,IAGzC7oD,KAAKgpD,uBAGC,YAAA7B,uBAAR,WACE,GAAKnnD,KAAK+wB,eAAeyO,WAAWtZ,iBAApC,CAGIlmB,KAAK8mD,aAAazmD,SAAWL,KAAKsjC,UAAUhwB,MAC9CtT,KAAK8uB,UAAU9uB,KAAKsjC,UAAUhwB,MAEhC,IAAK,IAAI5V,EAAI,EAAGA,EAAIsC,KAAKsjC,UAAUhwB,KAAM5V,IACvCsC,KAAK0oD,sBAAsB1oD,KAAK8mD,aAAappD,MAIzC,YAAAgrD,sBAAR,SAA8BljC,GAC5BA,EAAQ5T,MAAMuC,OAAYnU,KAAK+wB,eAAeyO,WAAWtZ,iBAAgB,MAGnE,YAAA8iC,oBAAR,WACuC,IAAjChpD,KAAK2mD,iBAAiBtmD,SAG1BL,KAAKunD,YAAY9pB,aAAez9B,KAAK2mD,iBACrC3mD,KAAK2mD,iBAAmB,KAE5B,EAnRA,CAA0C,EAAA7kD,YAA7B,EAAA8wB,wB,+zBChBb,YACA,OACA,OAEA,OACA,OACA,OACA,QASIq2B,EAAiB,EAOrB,cAeE,WACUz4C,EACSyqC,EACAtK,EACAvb,EACA8zB,EACAC,EACkB/2B,EACDzhB,EACDD,GATnC,MAWE,cAAO,K,OAVC,EAAAF,UACS,EAAAyqC,WACA,EAAAtK,iBACA,EAAAvb,mBACA,EAAA8zB,aACA,EAAAC,cACkB,EAAA/2B,mBACD,EAAAzhB,kBACD,EAAAD,iBAtB3B,EAAA04C,eAAyBH,IAKzB,EAAAnC,aAA8B,GAK9B,EAAA5iB,sBAAwB,IAAI,EAAAtjC,aAgBlC,EAAKimD,cAAgBr1C,SAASC,cAAc,OAC5C,EAAKo1C,cAAcn1C,UAAUC,IA1CL,cA2CxB,EAAKk1C,cAAcj1C,MAAMwsB,WAAa,SACtC,EAAKyoB,cAAc5xB,aAAa,cAAe,QAC/C,EAAKo0B,oBAAoB,EAAK34C,eAAeiG,KAAM,EAAKjG,eAAe4C,MACvE,EAAKg2C,oBAAsB93C,SAASC,cAAc,OAClD,EAAK63C,oBAAoB53C,UAAUC,IA3Cf,mBA4CpB,EAAK23C,oBAAoBr0B,aAAa,cAAe,QAErD,EAAKuK,WAAa,CAChB3rB,gBAAiB,EACjBC,iBAAkB,EAClBH,gBAAiB,EACjBC,iBAAkB,EAClBG,eAAgB,EAChBC,cAAe,EACfE,kBAAmB,EACnBE,mBAAoB,EACpBC,YAAa,EACbC,aAAc,EACd2R,gBAAiB,EACjBC,iBAAkB,GAEpB,EAAKirB,oBACL,EAAKoY,aAEL,EAAKC,YAAc,IAAI,EAAAC,sBAAsBj4C,SAAU,EAAKb,gBAAiB,EAAKH,SAElF,EAAKyqC,SAASvpC,UAAUC,IAtEE,4BAsE0B,EAAKy3C,gBACzD,EAAKzY,eAAe7+B,YAAY,EAAK+0C,eACrC,EAAKlW,eAAe7+B,YAAY,EAAKw3C,qBAErC,EAAKJ,WAAWjP,aAAY,SAAAjqB,GAAK,SAAKkqB,aAAalqB,MACnD,EAAKk5B,WAAW/O,aAAY,SAAAnqB,GAAK,SAAKoqB,aAAapqB,MAEnD,EAAKm5B,YAAYlP,aAAY,SAAAjqB,GAAK,SAAKkqB,aAAalqB,MACpD,EAAKm5B,YAAYhP,aAAY,SAAAnqB,GAAK,SAAKoqB,aAAapqB,M,EAkTxD,OAlXiC,OAa/B,sBAAW,mCAAoB,C,IAA/B,WAAsE,OAAOhwB,KAAKkkC,sBAAsB3e,O,gCAsDjG,YAAAnlB,QAAP,WACEJ,KAAKi7C,SAASvpC,UAAU4hB,OAlFE,4BAkF6BtzB,KAAKopD,gBAC5DppD,KAAK2wC,eAAe5+B,YAAY/R,KAAK6mD,eACrC7mD,KAAK2wC,eAAe5+B,YAAY/R,KAAKspD,qBACrCtpD,KAAK2wC,eAAe5+B,YAAY/R,KAAK0pD,oBACrC1pD,KAAK2wC,eAAe5+B,YAAY/R,KAAK2pD,yBACrC,YAAMvpD,QAAO,YAGP,YAAA+wC,kBAAR,sBACEnxC,KAAKw/B,WAAW3rB,gBAAkB7T,KAAKoyB,iBAAiBne,MAAQtW,OAAOiX,iBACvE5U,KAAKw/B,WAAW1rB,iBAAmBvK,KAAKoB,KAAK3K,KAAKoyB,iBAAiBje,OAASxW,OAAOiX,kBACnF5U,KAAKw/B,WAAW7rB,gBAAkB3T,KAAKw/B,WAAW3rB,gBAAkBtK,KAAKC,MAAMxJ,KAAK2Q,gBAAgB6C,QAAQk+B,eAC5G1xC,KAAKw/B,WAAW5rB,iBAAmBrK,KAAKg3B,MAAMvgC,KAAKw/B,WAAW1rB,iBAAmB9T,KAAK2Q,gBAAgB6C,QAAQ4qB,YAC9Gp+B,KAAKw/B,WAAWzrB,eAAiB,EACjC/T,KAAKw/B,WAAWxrB,cAAgB,EAChChU,KAAKw/B,WAAWtrB,kBAAoBlU,KAAKw/B,WAAW7rB,gBAAkB3T,KAAK0Q,eAAeiG,KAC1F3W,KAAKw/B,WAAWprB,mBAAqBpU,KAAKw/B,WAAW5rB,iBAAmB5T,KAAK0Q,eAAe4C,KAC5FtT,KAAKw/B,WAAWnrB,YAAc9K,KAAKC,MAAMxJ,KAAKw/B,WAAWtrB,kBAAoBvW,OAAOiX,kBACpF5U,KAAKw/B,WAAWlrB,aAAe/K,KAAKC,MAAMxJ,KAAKw/B,WAAWprB,mBAAqBzW,OAAOiX,kBACtF5U,KAAKw/B,WAAWvZ,gBAAkBjmB,KAAKw/B,WAAWnrB,YAAcrU,KAAK0Q,eAAeiG,KACpF3W,KAAKw/B,WAAWtZ,iBAAmBlmB,KAAKw/B,WAAWlrB,aAAetU,KAAK0Q,eAAe4C,KAEtFtT,KAAK8mD,aAAarlD,SAAQ,SAAA+jB,GACxBA,EAAQ5T,MAAMqC,MAAW,EAAKurB,WAAWnrB,YAAW,KACpDmR,EAAQ5T,MAAMuC,OAAY,EAAKqrB,WAAWtZ,iBAAgB,KAC1DV,EAAQ5T,MAAMwsB,WAAgB,EAAKoB,WAAWtZ,iBAAgB,KAE9DV,EAAQ5T,MAAMg4C,SAAW,YAGtB5pD,KAAK2pD,0BACR3pD,KAAK2pD,wBAA0Bn4C,SAASC,cAAc,SACtDzR,KAAK2wC,eAAe7+B,YAAY9R,KAAK2pD,0BAGvC,IAAME,EACD7pD,KAAK8pD,kBAAiB,wFAId9pD,KAAKw/B,WAAWvZ,gBAAe,MAG5CjmB,KAAK2pD,wBAAwBZ,UAAYc,EAEzC7pD,KAAKspD,oBAAoB13C,MAAMuC,OAASnU,KAAKo1B,iBAAiBxjB,MAAMuC,OACpEnU,KAAK2wC,eAAe/+B,MAAMqC,MAAWjU,KAAKw/B,WAAWnrB,YAAW,KAChErU,KAAK2wC,eAAe/+B,MAAMuC,OAAYnU,KAAKw/B,WAAWlrB,aAAY,MAG7D,YAAAvB,UAAP,SAAiByM,GACfxf,KAAKwQ,QAAUgP,EACfxf,KAAKupD,cAGC,YAAAA,WAAR,sBACOvpD,KAAK0pD,qBACR1pD,KAAK0pD,mBAAqBl4C,SAASC,cAAc,SACjDzR,KAAK2wC,eAAe7+B,YAAY9R,KAAK0pD,qBAIvC,IAAIG,EACC7pD,KAAK8pD,kBAAiB,yBACd9pD,KAAKwQ,QAAQ8F,WAAWtN,IAAG,kBACrBhJ,KAAK2Q,gBAAgB6C,QAAQwD,WAAU,gBACzChX,KAAK2Q,gBAAgB6C,QAAQuD,SAAQ,OAGtD8yC,GACK7pD,KAAK8pD,kBAAiB,cAAc,EAAAC,WAAU,oBAChC/pD,KAAK2Q,gBAAgB6C,QAAQsD,WAAU,KAErD9W,KAAK8pD,kBAAiB,SAAS,EAAAC,WAAU,mBAC3B/pD,KAAK2Q,gBAAgB6C,QAAQqD,eAAc,KAEzD7W,KAAK8pD,kBAAiB,SAAS,EAAAE,aAAY,0BAIhDH,GACE,+BAAsC7pD,KAAKopD,eAAiB,iCAK9DS,GACE,0BAAiC7pD,KAAKopD,eAAiB,8BAEhCppD,KAAKwQ,QAAQ4P,OAAOpX,IAAG,aAClChJ,KAAKwQ,QAAQ6P,aAAarX,IAAG,gCAGlBhJ,KAAKwQ,QAAQ6P,aAAarX,IAAG,aACxChJ,KAAKwQ,QAAQ4P,OAAOpX,IAAG,OAIrC6gD,GACK7pD,KAAK8pD,kBAAiB,mCAAkD,EAAAG,aAAY,IAAI,EAAAC,yBAAwB,yBAC5FlqD,KAAKwQ,QAAQ4P,OAAOpX,IAAG,2BAG3ChJ,KAAK8pD,kBAAiB,6BAA4C,EAAAG,aAAY,IAAI,EAAAE,mBAAkB,SAAS,EAAAD,yBAAwB,mCACjGlqD,KAAKopD,eAAiB,0BAE1DppD,KAAK8pD,kBAAiB,6BAA4C,EAAAG,aAAY,IAAI,EAAAE,mBAAkB,IAAI,EAAAD,yBAAwB,6BACjGlqD,KAAKopD,eAAiB,0BAErDppD,KAAK8pD,kBAAiB,6BAA4C,EAAAG,aAAY,IAAI,EAAAC,yBAAwB,wBACvFlqD,KAAKwQ,QAAQ4P,OAAOpX,IAAG,YAClChJ,KAAKwQ,QAAQ6P,aAAarX,IAAG,KAErChJ,KAAK8pD,kBAAiB,iBAA6B,EAAAG,aAAY,IAAI,EAAAG,uBAAsB,kBAC5EpqD,KAAK2Q,gBAAgB6C,QAAQ6lC,YAAW,UAAUr5C,KAAKwQ,QAAQ4P,OAAOpX,IAAG,WAEtFhJ,KAAK8pD,kBAAiB,iBAA6B,EAAAG,aAAY,IAAI,EAAAI,6BAA4B,2BACzErqD,KAAKwQ,QAAQ4P,OAAOpX,IAAG,WAGlD6gD,GACK7pD,KAAK8pD,kBAAiB,8FAOtB9pD,KAAK8pD,kBAAiB,iEAEH9pD,KAAKwQ,QAAQ8P,UAAUtX,IAAG,KAGlDhJ,KAAKwQ,QAAQ6F,KAAK5U,SAAQ,SAACtD,EAAGT,GAC5BmsD,GACK,EAAKC,kBAAiB,cAAuBpsD,EAAC,aAAaS,EAAE6K,IAAG,MAChE,EAAK8gD,kBAAiB,cAAuBpsD,EAAC,wBAAwBS,EAAE6K,IAAG,SAElF6gD,GACK7pD,KAAK8pD,kBAAiB,cAAuB,EAAA/hD,uBAAsB,aAAa,EAAAe,MAAMc,OAAO5J,KAAKwQ,QAAQ2E,YAAYnM,IAAG,MACzHhJ,KAAK8pD,kBAAiB,cAAuB,EAAA/hD,uBAAsB,wBAAwB/H,KAAKwQ,QAAQ8F,WAAWtN,IAAG,MAE3HhJ,KAAK0pD,mBAAmBX,UAAYc,GAG/B,YAAAxY,yBAAP,WACErxC,KAAKmxC,qBAGC,YAAAkY,oBAAR,SAA4B1yC,EAAcrD,GAExC,IAAK,IAAI5V,EAAIsC,KAAK8mD,aAAazmD,OAAQ3C,GAAK4V,EAAM5V,IAAK,CACrD,IAAMkmB,EAAMpS,SAASC,cAAc,OACnCzR,KAAK6mD,cAAc/0C,YAAY8R,GAC/B5jB,KAAK8mD,aAAa3mD,KAAKyjB,GAGzB,KAAO5jB,KAAK8mD,aAAazmD,OAASiT,GAChCtT,KAAK6mD,cAAc90C,YAAY/R,KAAK8mD,aAAa3Z,QAI9C,YAAAvkB,SAAP,SAAgBjS,EAAcrD,GAC5BtT,KAAKqpD,oBAAoB1yC,EAAMrD,GAC/BtT,KAAKmxC,qBAGA,YAAAG,kBAAP,WACEtxC,KAAKmxC,qBAGA,YAAA5+B,OAAP,WACEvS,KAAK6mD,cAAcn1C,UAAU4hB,OA1Pb,gBA6PX,YAAA9gB,QAAP,WACExS,KAAK6mD,cAAcn1C,UAAUC,IA9Pb,gBAiQX,YAAAkB,mBAAP,SAA0B/M,EAAyBC,EAAuB+M,GAExE,KAAO9S,KAAKspD,oBAAoBb,SAASpoD,QACvCL,KAAKspD,oBAAoBv3C,YAAY/R,KAAKspD,oBAAoBb,SAAS,IAIzE,GAAK3iD,GAAUC,EAAf,CAKA,IAAMuxC,EAAmBxxC,EAAM,GAAK9F,KAAK0Q,eAAemT,OAAOsI,MACzDorB,EAAiBxxC,EAAI,GAAK/F,KAAK0Q,eAAemT,OAAOsI,MACrDqrB,EAAyBjuC,KAAKmB,IAAI4sC,EAAkB,GACpDG,EAAuBluC,KAAKsB,IAAI0sC,EAAgBv3C,KAAK0Q,eAAe4C,KAAO,GAGjF,KAAIkkC,GAA0Bx3C,KAAK0Q,eAAe4C,MAAQmkC,EAAuB,GAAjF,CAKA,IAAM6S,EAAmB94C,SAAS2jB,yBAElC,GAAIriB,EACFw3C,EAAiBx4C,YACf9R,KAAKuqD,wBAAwB/S,EAAwB1xC,EAAM,GAAIC,EAAI,GAAI0xC,EAAuBD,EAAyB,QAEpH,CAEL,IAAMt8B,EAAWo8B,IAAqBE,EAAyB1xC,EAAM,GAAK,EACpEqV,EAASq8B,IAA2BC,EAAuB1xC,EAAI,GAAK/F,KAAK0Q,eAAeiG,KAC9F2zC,EAAiBx4C,YAAY9R,KAAKuqD,wBAAwB/S,EAAwBt8B,EAAUC,IAE5F,IAAMw8B,EAAkBF,EAAuBD,EAAyB,EAGxE,GAFA8S,EAAiBx4C,YAAY9R,KAAKuqD,wBAAwB/S,EAAyB,EAAG,EAAGx3C,KAAK0Q,eAAeiG,KAAMghC,IAE/GH,IAA2BC,EAAsB,CAEnD,IAAM,EAASF,IAAmBE,EAAuB1xC,EAAI,GAAK/F,KAAK0Q,eAAeiG,KACtF2zC,EAAiBx4C,YAAY9R,KAAKuqD,wBAAwB9S,EAAsB,EAAG,KAGvFz3C,KAAKspD,oBAAoBx3C,YAAYw4C,MAS/B,YAAAC,wBAAR,SAAgC3mC,EAAa4mC,EAAkBC,EAAgB1kC,QAAA,IAAAA,MAAA,GAC7E,IAAMP,EAAUhU,SAASC,cAAc,OAKvC,OAJA+T,EAAQ5T,MAAMuC,OAAY4R,EAAW/lB,KAAKw/B,WAAWtZ,iBAAgB,KACrEV,EAAQ5T,MAAMiU,IAASjC,EAAM5jB,KAAKw/B,WAAWtZ,iBAAgB,KAC7DV,EAAQ5T,MAAM+T,KAAU6kC,EAAWxqD,KAAKw/B,WAAWvZ,gBAAe,KAClET,EAAQ5T,MAAMqC,MAAWjU,KAAKw/B,WAAWvZ,iBAAmBwkC,EAASD,GAAS,KACvEhlC,GAGF,YAAA/S,aAAP,aAIO,YAAAH,iBAAP,WAEEtS,KAAKmxC,oBACLnxC,KAAKupD,cAGA,YAAApjD,MAAP,WACEnG,KAAK8mD,aAAarlD,SAAQ,SAAAuuB,GAAK,OAAAA,EAAE+4B,UAAY,OAGxC,YAAAtX,WAAP,SAAkB3rC,EAAeC,GAK/B,IAJA,IAAM2kD,EAAkB1qD,KAAK0Q,eAAemT,OAAOuI,MAAQpsB,KAAK0Q,eAAemT,OAAOpP,EAChFykC,EAAU3vC,KAAKsB,IAAI7K,KAAK0Q,eAAemT,OAAOrP,EAAGxU,KAAK0Q,eAAeiG,KAAO,GAC5E0sB,EAAcrjC,KAAK2Q,gBAAgB6C,QAAQ6vB,YAExC5uB,EAAI3O,EAAO2O,GAAK1O,EAAK0O,IAAK,CACjC,IAAMk2C,EAAa3qD,KAAK8mD,aAAaryC,GACrCk2C,EAAW5B,UAAY,GAEvB,IAAMnlC,EAAMnP,EAAIzU,KAAK0Q,eAAemT,OAAOsI,MACrC1H,EAAWzkB,KAAK0Q,eAAemT,OAAOC,MAAMnlB,IAAIilB,GAChDwf,EAAcpjC,KAAK2Q,gBAAgB6C,QAAQ4vB,YACjDunB,EAAW74C,YAAY9R,KAAKwpD,YAAYoB,UAAUnmC,EAAWb,IAAQ8mC,EAAiBtnB,EAAa8V,EAAS7V,EAAarjC,KAAKw/B,WAAWvZ,gBAAiBjmB,KAAK0Q,eAAeiG,SAIlL,sBAAY,gCAAiB,C,IAA7B,WACE,MAAO,6BAA4B3W,KAAKopD,gB,gCAGnC,YAAA7lC,wBAAP,SAA+B7b,GAA2C,OAAQ,GAC3E,YAAA+b,0BAAP,SAAiCC,GAA6B,OAAO,GAE7D,YAAAw2B,aAAR,SAAqBlqB,GACnBhwB,KAAK6qD,kBAAkB76B,EAAEsqB,GAAItqB,EAAE0qB,GAAI1qB,EAAEuqB,GAAIvqB,EAAEyqB,GAAIzqB,EAAErZ,MAAM,IAGjD,YAAAyjC,aAAR,SAAqBpqB,GACnBhwB,KAAK6qD,kBAAkB76B,EAAEsqB,GAAItqB,EAAE0qB,GAAI1qB,EAAEuqB,GAAIvqB,EAAEyqB,GAAIzqB,EAAErZ,MAAM,IAGjD,YAAAk0C,kBAAR,SAA0Br2C,EAAWkmC,EAAYjmC,EAAWgmC,EAAY9jC,EAAcm0C,GACpF,KAAOt2C,IAAMkmC,GAAMjmC,IAAMgmC,GAAI,CAC3B,IAAM72B,EAAM5jB,KAAK8mD,aAAaryC,GAC9B,IAAKmP,EACH,OAEF,IAAMmnC,EAAoBnnC,EAAI6kC,SAASj0C,GACnCu2C,IACFA,EAAKn5C,MAAMo5C,eAAiBF,EAAU,YAAc,UAEhDt2C,GAAKmC,IACTnC,EAAI,EACJC,OA9WK6iB,EAAW,GAsBnB,MAAA30B,kBACA,MAAAtB,iBACA,MAAAR,iBAxBQy2B,GAAb,CAAiC,EAAAx1B,YAApB,EAAAw1B,e,8ECvBb,WACA,OACA,OAEA,QAGa,EAAAyyB,WAAa,aACb,EAAAkB,UAAY,YACZ,EAAAjB,aAAe,eACf,EAAAkB,gBAAkB,kBAClB,EAAAjB,aAAe,eACf,EAAAE,mBAAqB,qBACrB,EAAAD,yBAA2B,qBAC3B,EAAAE,uBAAyB,mBACzB,EAAAC,6BAA+B,yBAE5C,iBAGE,WACmBv1B,EACAnkB,EACTH,GAFS,KAAAskB,YACA,KAAAnkB,kBACT,KAAAH,UALF,KAAA8S,UAAsB,IAAI,EAAA/f,SA+KpC,OAtKS,YAAAwP,UAAP,SAAiByM,GACfxf,KAAKwQ,QAAUgP,GAGV,YAAAorC,UAAP,SAAiBnmC,EAAuB0mC,EAAsB/nB,EAAiC8V,EAAiB7V,EAAsB+nB,EAAmBz0C,GASvJ,IARA,IAAMue,EAAWl1B,KAAK80B,UAAUK,yBAO5Bk2B,EAAa,EACR72C,EAAIjL,KAAKsB,IAAI4Z,EAASpkB,OAAQsW,GAAQ,EAAGnC,GAAK,EAAGA,IACxD,GAAIiQ,EAAS/K,SAASlF,EAAGxU,KAAKsjB,WAAWzf,YAAc,EAAAtB,gBAAmB4oD,GAAe32C,IAAM0kC,EAAU,CACvGmS,EAAa72C,EAAI,EACjB,MAIJ,IAASA,EAAI,EAAGA,EAAI62C,EAAY72C,IAAK,CACnCiQ,EAAS/K,SAASlF,EAAGxU,KAAKsjB,WAC1B,IAAMrP,EAAQjU,KAAKsjB,UAAU5f,WAG7B,GAAc,IAAVuQ,EAAJ,CAIA,IAAMq3C,EAActrD,KAAK80B,UAAUrjB,cAAc,QAKjD,GAJIwC,EAAQ,IACVq3C,EAAY15C,MAAMqC,MAAWm3C,EAAYn3C,EAAK,MAG5Ck3C,GAAe32C,IAAM0kC,EAOvB,OANAoS,EAAY55C,UAAUC,IAAI,EAAAs4C,cAEtB5mB,GACFioB,EAAY55C,UAAUC,IAAI,EAAAw4C,oBAGpB/mB,GACN,IAAK,MACHkoB,EAAY55C,UAAUC,IAAI,EAAAy4C,wBAC1B,MACF,IAAK,YACHkB,EAAY55C,UAAUC,IAAI,EAAA04C,8BAC1B,MACF,QACEiB,EAAY55C,UAAUC,IAAI,EAAAu4C,0BAK5BlqD,KAAKsjB,UAAU7e,UACjB6mD,EAAY55C,UAAUC,IAAI,EAAAo4C,YAGxB/pD,KAAKsjB,UAAUze,YACjBymD,EAAY55C,UAAUC,IAAI,EAAAq4C,cAGxBhqD,KAAKsjB,UAAUxe,SACjBwmD,EAAY55C,UAAUC,IAAI,EAAAs5C,WAGxBjrD,KAAKsjB,UAAU5e,eACjB4mD,EAAY55C,UAAUC,IAAI,EAAAu5C,iBAGxBlrD,KAAKsjB,UAAU1e,cACjB0mD,EAAY7tB,YAAc,EAAAj7B,qBAE1B8oD,EAAY7tB,YAAcz9B,KAAKsjB,UAAU3f,YAAc,EAAAnB,qBAGzD,IAAIU,EAAKlD,KAAKsjB,UAAU9d,aACpB8R,EAActX,KAAKsjB,UAAUve,iBAC7B5B,EAAKnD,KAAKsjB,UAAU7d,aACpB+R,EAAcxX,KAAKsjB,UAAUte,iBAC3BR,IAAcxE,KAAKsjB,UAAU9e,YACnC,GAAIA,EAAW,CACb,IAAMiT,EAAOvU,EACbA,EAAKC,EACLA,EAAKsU,EACL,IAAMC,EAAQJ,EACdA,EAAcE,EACdA,EAAcE,EAIhB,OAAQJ,GACN,KAAK,SACL,KAAK,SACCtX,KAAKsjB,UAAU7e,UAAYvB,EAAK,GAAKlD,KAAK2Q,gBAAgB6C,QAAQwC,6BACpE9S,GAAM,GAEHlD,KAAKurD,sBAAsBD,EAAatrD,KAAKwQ,QAAQ2E,WAAYnV,KAAKwQ,QAAQ6F,KAAKnT,KACtFooD,EAAY55C,UAAUC,IAAI,YAAYzO,GAExC,MACF,KAAK,SACH,IAAM,EAAQ,EAAAkF,KAAKuB,QAChBzG,GAAM,GAAM,IACZA,GAAO,EAAK,IACA,IAAb,GAEGlD,KAAKurD,sBAAsBD,EAAatrD,KAAKwQ,QAAQ2E,WAAY,IACpEnV,KAAKwrD,UAAUF,EAAa,UAAUG,EAASvoD,EAAGoF,SAAS,IAAK,IAAK,IAEvE,MACF,KAAK,EACL,QACOtI,KAAKurD,sBAAsBD,EAAatrD,KAAKwQ,QAAQ2E,WAAYnV,KAAKwQ,QAAQ8F,aAC7E9R,GACF8mD,EAAY55C,UAAUC,IAAI,YAAY,EAAA5J,wBAM9C,OAAQyP,GACN,KAAK,SACL,KAAK,SACH8zC,EAAY55C,UAAUC,IAAI,YAAYxO,GACtC,MACF,KAAK,SACHnD,KAAKwrD,UAAUF,EAAa,qBAAqBG,EAAStoD,EAAGmF,SAAS,IAAK,IAAK,IAChF,MACF,KAAK,EACL,QACM9D,GACF8mD,EAAY55C,UAAUC,IAAI,YAAY,EAAA5J,wBAI5CmtB,EAASpjB,YAAYw5C,IAEvB,OAAOp2B,GAGD,YAAAq2B,sBAAR,SAA8B/lC,EAAsBriB,EAAYD,GAC9D,GAA0D,IAAtDlD,KAAK2Q,gBAAgB6C,QAAQyD,qBAC/B,OAAO,EAIT,IAAIC,EAAgBlX,KAAKwQ,QAAQ2G,cAAcC,SAASpX,KAAKsjB,UAAUngB,GAAInD,KAAKsjB,UAAUpgB,IAQ1F,YALsBvC,IAAlBuW,IACFA,EAAgB,EAAApO,MAAMW,oBAAoBtG,EAAID,EAAIlD,KAAK2Q,gBAAgB6C,QAAQyD,sBAC/EjX,KAAKwQ,QAAQ2G,cAAcU,SAAS7X,KAAKsjB,UAAUngB,GAAInD,KAAKsjB,UAAUpgB,GAAIgU,UAAiB,SAGzFA,IACFlX,KAAKwrD,UAAUhmC,EAAS,SAAStO,EAAclO,MACxC,IAMH,YAAAwiD,UAAR,SAAkBhmC,EAAsB5T,GACtC4T,EAAQyP,aAAa,QAAS,IAAGzP,EAAQ2iC,aAAa,UAAY,IAAKv2C,EAAK,MAEhF,EAhLA,GAkLA,SAAS65C,EAAS/mC,EAAcgnC,EAAiBrrD,GAC/C,KAAOqkB,EAAKrkB,OAASA,GACnBqkB,EAAOgnC,EAAUhnC,EAEnB,OAAOA,EAtLI,EAAA+kC,yB,8EChBb,YAGMkC,EAA2D,CAE/DC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KAGVC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,KAAM,KACZC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAM,MAGd,iCACEh6B,EACAi6B,EACAthD,EACA4vB,GAEA,IAAMv1B,EAA0B,CAC9BqB,KAAM,EAGNuxB,QAAQ,EAERv5B,SAAKsB,GAEDusD,GAAal6B,EAAGqF,SAAW,EAAI,IAAMrF,EAAGmF,OAAS,EAAI,IAAMnF,EAAGkF,QAAU,EAAI,IAAMlF,EAAG4I,QAAU,EAAI,GACzG,OAAQ5I,EAAG6I,SACT,KAAK,EACY,sBAAX7I,EAAG3zB,IAEH2G,EAAO3G,IADL4tD,EACW,EAAAjhD,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,KAGN,wBAAXolB,EAAG3zB,IAER2G,EAAO3G,IADL4tD,EACW,EAAAjhD,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,KAGN,yBAAXolB,EAAG3zB,IAER2G,EAAO3G,IADL4tD,EACW,EAAAjhD,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,KAGN,wBAAXolB,EAAG3zB,MAER2G,EAAO3G,IADL4tD,EACW,EAAAjhD,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,MAG1B,MACF,KAAK,EAEH,GAAIolB,EAAGqF,SAAU,CACfryB,EAAO3G,IAAM,EAAA2M,GAAGS,GAChB,MACK,GAAIumB,EAAGmF,OAAQ,CACpBnyB,EAAO3G,IAAM,EAAA2M,GAAG4B,IAAM,EAAA5B,GAAGkC,IACzB,MAEFlI,EAAO3G,IAAM,EAAA2M,GAAGkC,IAChB,MACF,KAAK,EAEH,GAAI8kB,EAAGqF,SAAU,CACfryB,EAAO3G,IAAM,EAAA2M,GAAG4B,IAAM,KACtB,MAEF5H,EAAO3G,IAAM,EAAA2M,GAAGU,GAChB1G,EAAO4yB,QAAS,EAChB,MACF,KAAK,GAEH5yB,EAAO3G,IAAM,EAAA2M,GAAGc,GAChB9G,EAAO4yB,QAAS,EAChB,MACF,KAAK,GAEH5yB,EAAO3G,IAAM,EAAA2M,GAAG4B,IAChB5H,EAAO4yB,QAAS,EAChB,MACF,KAAK,GAEH,GAAI5F,EAAG4I,QACL,MAEEsxB,GACFlnD,EAAO3G,IAAM,EAAA2M,GAAG4B,IAAM,OAASs/C,EAAY,GAAK,IAI5ClnD,EAAO3G,MAAQ,EAAA2M,GAAG4B,IAAM,UAC1B5H,EAAO3G,IAAM,EAAA2M,GAAG4B,KAAOjC,EAAQ,IAAM,WAGvC3F,EAAO3G,IADE4tD,EACI,EAAAjhD,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,KAExB,MACF,KAAK,GAEH,GAAIolB,EAAG4I,QACL,MAEEsxB,GACFlnD,EAAO3G,IAAM,EAAA2M,GAAG4B,IAAM,OAASs/C,EAAY,GAAK,IAI5ClnD,EAAO3G,MAAQ,EAAA2M,GAAG4B,IAAM,UAC1B5H,EAAO3G,IAAM,EAAA2M,GAAG4B,KAAOjC,EAAQ,IAAM,WAGvC3F,EAAO3G,IADE4tD,EACI,EAAAjhD,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,KAExB,MACF,KAAK,GAEH,GAAIolB,EAAG4I,QACL,MAEEsxB,GACFlnD,EAAO3G,IAAM,EAAA2M,GAAG4B,IAAM,OAASs/C,EAAY,GAAK,IAI3CvhD,GAAS3F,EAAO3G,MAAQ,EAAA2M,GAAG4B,IAAM,UACpC5H,EAAO3G,IAAM,EAAA2M,GAAG4B,IAAM,UAGxB5H,EAAO3G,IADE4tD,EACI,EAAAjhD,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,KAExB,MACF,KAAK,GAEH,GAAIolB,EAAG4I,QACL,MAEEsxB,GACFlnD,EAAO3G,IAAM,EAAA2M,GAAG4B,IAAM,OAASs/C,EAAY,GAAK,IAI3CvhD,GAAS3F,EAAO3G,MAAQ,EAAA2M,GAAG4B,IAAM,UACpC5H,EAAO3G,IAAM,EAAA2M,GAAG4B,IAAM,UAGxB5H,EAAO3G,IADE4tD,EACI,EAAAjhD,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,KAExB,MACF,KAAK,GAEEolB,EAAGqF,UAAarF,EAAGkF,UAGtBlyB,EAAO3G,IAAM,EAAA2M,GAAG4B,IAAM,OAExB,MACF,KAAK,GAGD5H,EAAO3G,IADL6tD,EACW,EAAAlhD,GAAG4B,IAAM,OAASs/C,EAAY,GAAK,IAEnC,EAAAlhD,GAAG4B,IAAM,MAExB,MACF,KAAK,GAGD5H,EAAO3G,IADL6tD,EACW,EAAAlhD,GAAG4B,IAAM,OAASs/C,EAAY,GAAK,IACvCD,EACI,EAAAjhD,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,KAExB,MACF,KAAK,GAGD5H,EAAO3G,IADL6tD,EACW,EAAAlhD,GAAG4B,IAAM,OAASs/C,EAAY,GAAK,IACvCD,EACI,EAAAjhD,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,KAExB,MACF,KAAK,GAEColB,EAAGqF,SACLryB,EAAOqB,KAAO,EAEdrB,EAAO3G,IAAM,EAAA2M,GAAG4B,IAAM,MAExB,MACF,KAAK,GAEColB,EAAGqF,SACLryB,EAAOqB,KAAO,EAEdrB,EAAO3G,IAAM,EAAA2M,GAAG4B,IAAM,MAExB,MACF,KAAK,IAGD5H,EAAO3G,IADL6tD,EACW,EAAAlhD,GAAG4B,IAAM,OAASs/C,EAAY,GAAK,IAEnC,EAAAlhD,GAAG4B,IAAM,KAExB,MACF,KAAK,IAED5H,EAAO3G,IADL6tD,EACW,EAAAlhD,GAAG4B,IAAM,OAASs/C,EAAY,GAAK,IAEnC,EAAAlhD,GAAG4B,IAAM,KAExB,MACF,KAAK,IAED5H,EAAO3G,IADL6tD,EACW,EAAAlhD,GAAG4B,IAAM,OAASs/C,EAAY,GAAK,IAEnC,EAAAlhD,GAAG4B,IAAM,KAExB,MACF,KAAK,IAED5H,EAAO3G,IADL6tD,EACW,EAAAlhD,GAAG4B,IAAM,OAASs/C,EAAY,GAAK,IAEnC,EAAAlhD,GAAG4B,IAAM,KAExB,MACF,KAAK,IAED5H,EAAO3G,IADL6tD,EACW,EAAAlhD,GAAG4B,IAAM,QAAUs/C,EAAY,GAAK,IAEpC,EAAAlhD,GAAG4B,IAAM,OAExB,MACF,KAAK,IAED5H,EAAO3G,IADL6tD,EACW,EAAAlhD,GAAG4B,IAAM,QAAUs/C,EAAY,GAAK,IAEpC,EAAAlhD,GAAG4B,IAAM,OAExB,MACF,KAAK,IAED5H,EAAO3G,IADL6tD,EACW,EAAAlhD,GAAG4B,IAAM,QAAUs/C,EAAY,GAAK,IAEpC,EAAAlhD,GAAG4B,IAAM,OAExB,MACF,KAAK,IAED5H,EAAO3G,IADL6tD,EACW,EAAAlhD,GAAG4B,IAAM,QAAUs/C,EAAY,GAAK,IAEpC,EAAAlhD,GAAG4B,IAAM,OAExB,MACF,KAAK,IAED5H,EAAO3G,IADL6tD,EACW,EAAAlhD,GAAG4B,IAAM,QAAUs/C,EAAY,GAAK,IAEpC,EAAAlhD,GAAG4B,IAAM,OAExB,MACF,KAAK,IAED5H,EAAO3G,IADL6tD,EACW,EAAAlhD,GAAG4B,IAAM,QAAUs/C,EAAY,GAAK,IAEpC,EAAAlhD,GAAG4B,IAAM,OAExB,MACF,KAAK,IAED5H,EAAO3G,IADL6tD,EACW,EAAAlhD,GAAG4B,IAAM,QAAUs/C,EAAY,GAAK,IAEpC,EAAAlhD,GAAG4B,IAAM,OAExB,MACF,KAAK,IAED5H,EAAO3G,IADL6tD,EACW,EAAAlhD,GAAG4B,IAAM,QAAUs/C,EAAY,GAAK,IAEpC,EAAAlhD,GAAG4B,IAAM,OAExB,MACF,QAEE,IAAIolB,EAAGkF,SAAYlF,EAAGqF,UAAarF,EAAGmF,QAAWnF,EAAG4I,QAiB7C,GAAMjwB,IAAS4vB,IAAoBvI,EAAGmF,QAAWnF,EAAG4I,QAUhDjwB,IAAUqnB,EAAGmF,SAAWnF,EAAGkF,SAAWlF,EAAG4I,QAC/B,KAAf5I,EAAG6I,UACL71B,EAAOqB,KAAO,GAEP2rB,EAAG3zB,MAAQ2zB,EAAGkF,UAAYlF,EAAGmF,SAAWnF,EAAG4I,SAAW5I,EAAG6I,SAAW,IAAwB,IAAlB7I,EAAG3zB,IAAIgB,OAE1F2F,EAAO3G,IAAM2zB,EAAG3zB,IACP2zB,EAAG3zB,KAAO2zB,EAAGkF,SACP,MAAXlF,EAAG3zB,MACL2G,EAAO3G,IAAM,EAAA2M,GAAGgC,QAnBgD,CAElE,IAAMm/C,EAAaxB,EAAqB34B,EAAG6I,SACrCx8B,EAAM8tD,GAAcA,EAAYn6B,EAAGqF,SAAe,EAAJ,GACpD,GAAIh5B,EACF2G,EAAO3G,IAAM,EAAA2M,GAAG4B,IAAMvO,OACjB,GAAI2zB,EAAG6I,SAAW,IAAM7I,EAAG6I,SAAW,GAAI,CAC/C,IAAMA,EAAU7I,EAAGkF,QAAUlF,EAAG6I,QAAU,GAAK7I,EAAG6I,QAAU,GAC5D71B,EAAO3G,IAAM,EAAA2M,GAAG4B,IAAMjI,OAAOC,aAAai2B,SAxBxC7I,EAAG6I,SAAW,IAAM7I,EAAG6I,SAAW,GACpC71B,EAAO3G,IAAMsG,OAAOC,aAAaotB,EAAG6I,QAAU,IACtB,KAAf7I,EAAG6I,QACZ71B,EAAO3G,IAAM,EAAA2M,GAAGC,IACP+mB,EAAG6I,SAAW,IAAM7I,EAAG6I,SAAW,GAE3C71B,EAAO3G,IAAMsG,OAAOC,aAAaotB,EAAG6I,QAAU,GAAK,IAC3B,KAAf7I,EAAG6I,QACZ71B,EAAO3G,IAAM,EAAA2M,GAAGkC,IACQ,MAAf8kB,EAAG6I,QACZ71B,EAAO3G,IAAM,EAAA2M,GAAG4B,IACQ,MAAfolB,EAAG6I,QACZ71B,EAAO3G,IAAM,EAAA2M,GAAG6B,GACQ,MAAfmlB,EAAG6I,UACZ71B,EAAO3G,IAAM,EAAA2M,GAAG8B,IA2BxB,OAAO9H,I,8EC7WT,WAGA,yCAA8C6rC,GAW5C,IAAMx3B,EAAOw3B,EAAchuB,OAAOC,MAAMnlB,IAAIkzC,EAAchuB,OAAOuI,MAAQylB,EAAchuB,OAAOpP,EAAI,GAC5F24C,EAAW/yC,aAAI,EAAJA,EAAM1b,IAAIkzC,EAAcl7B,KAAO,GAE1C2xB,EAAWuJ,EAAchuB,OAAOC,MAAMnlB,IAAIkzC,EAAchuB,OAAOuI,MAAQylB,EAAchuB,OAAOpP,GAC9F6zB,GAAY8kB,IACd9kB,EAASvvB,UAAaq0C,EAAS,EAAAhrD,wBAA0B,EAAAG,gBAAkB6qD,EAAS,EAAAhrD,wBAA0B,EAAAM,wB,+zBClBlH,YACA,OACA,OACA,QACA,OAEA,OACA,OAEA,cAoBE,WACU2qD,EACA1mC,EACCqN,EACiBtI,EACC4hC,GAL7B,MAOE,cAAO,KAoBP,GA1BQ,EAAAD,YACA,EAAA1mC,YACC,EAAAqN,gBACiB,EAAAtI,iBACC,EAAA4hC,kBAnBrB,EAAAC,WAAqB,EACrB,EAAAC,mBAA6B,EAC7B,EAAAC,aAAuB,EACvB,EAAAC,cAAwB,EAExB,EAAAC,oBAAsB,IAAI,EAAA/sD,aAE1B,EAAAiuB,UAAY,IAAI,EAAAjuB,aAEhB,EAAAgtD,kBAAoB,IAAI,EAAAhtD,aAa9B,EAAKitD,iBAAmB,IAAI,EAAA7mC,iBAAgB,SAAClhB,EAAOC,GAAQ,SAAKshD,YAAYvhD,EAAOC,MACpF,EAAKrE,SAAS,EAAKmsD,kBAEnB,EAAK7F,kBAAoB,IAAI,EAAArgC,iBAC7B,EAAKqgC,kBAAkB9gC,aAAY,WAAM,SAAKmqB,8BAC9C,EAAK3vC,SAAS,EAAKsmD,mBAEnB,EAAKtmD,SAASgqB,EAAeyG,gBAAe,WAAM,SAAKk7B,UAAU/6C,uBACjE,EAAK5Q,SAAS4rD,EAAgBQ,kBAAiB,WAAM,SAAKxc,wBAG1D,EAAK+b,UAAU77B,sBAAqB,SAAAxB,GAAK,SAAK6J,YAAY7J,EAAElqB,MAAOkqB,EAAEjqB,QAIrE,EAAKrE,SAAS,EAAA+xB,yBAAyB91B,OAAQ,UAAU,WAAM,SAAK0zC,+BAIhE,yBAA0B1zC,OAAQ,CACpC,IAAM,EAAW,IAAIowD,sBAAqB,SAAA/9B,GAAK,SAAKg+B,sBAAsBh+B,EAAEA,EAAE3vB,OAAS,MAAK,CAAE4tD,UAAW,IACzG,EAASC,QAAQl6B,GACjB,EAAKtyB,SAAS,CAAEtB,QAAS,WAAM,SAAS+tD,gB,SAgH9C,OAlKmC,OAYjC,sBAAW,iCAAkB,C,IAA7B,WAA6D,OAAOnuD,KAAK2tD,oBAAoBpoC,O,gCAE7F,sBAAW,uBAAQ,C,IAAnB,WAAgE,OAAOvlB,KAAK6uB,UAAUtJ,O,gCAEtF,sBAAW,+BAAgB,C,IAA3B,WAAwE,OAAOvlB,KAAK4tD,kBAAkBroC,O,gCAEtG,sBAAW,yBAAU,C,IAArB,WAA6C,OAAOvlB,KAAKqtD,UAAU7tB,Y,gCAoC3D,YAAAwuB,sBAAR,SAA8BpuC,GAC5B5f,KAAKutD,UAAwC,IAA5B3tC,EAAMwuC,mBAClBpuD,KAAKutD,WAAavtD,KAAKwtD,oBAC1BxtD,KAAK65B,YAAY,EAAG75B,KAAK2mB,UAAY,GACrC3mB,KAAKwtD,mBAAoB,IAItB,YAAA3zB,YAAP,SAAmB/zB,EAAeC,GAC5B/F,KAAKutD,UACPvtD,KAAKwtD,mBAAoB,EAG3BxtD,KAAK6tD,iBAAiBrnC,QAAQ1gB,EAAOC,EAAK/F,KAAK2mB,YAGzC,YAAA0gC,YAAR,SAAoBvhD,EAAeC,GACjC/F,KAAKqtD,UAAU5b,WAAW3rC,EAAOC,GACjC/F,KAAK6uB,UAAUtuB,KAAK,CAAEuF,MAAK,EAAEC,IAAG,KAG3B,YAAA2N,OAAP,SAAciD,EAAcrD,GAC1BtT,KAAK2mB,UAAYrT,EACjBtT,KAAKquD,uBAGA,YAAAC,cAAP,WACEtuD,KAAKqtD,UAAU/6C,mBACftS,KAAK65B,YAAY,EAAG75B,KAAK2mB,UAAY,GACrC3mB,KAAKquD,uBAGC,YAAAA,oBAAR,WAEMruD,KAAKqtD,UAAU7tB,WAAWnrB,cAAgBrU,KAAKytD,cAAgBztD,KAAKqtD,UAAU7tB,WAAWlrB,eAAiBtU,KAAK0tD,eAGnH1tD,KAAK2tD,oBAAoBptD,KAAKP,KAAKqtD,UAAU7tB,aAGxC,YAAAp/B,QAAP,WACEJ,KAAKqtD,UAAUjtD,UACf,YAAMA,QAAO,YAGR,YAAAkyB,YAAP,SAAmByD,GAAnB,WAEE/1B,KAAKqtD,UAAUjtD,UACfJ,KAAKqtD,UAAYt3B,EACjB/1B,KAAKqtD,UAAU77B,sBAAqB,SAAAxB,GAAK,SAAK6J,YAAY7J,EAAElqB,MAAOkqB,EAAEjqB,QACrE/F,KAAK65B,YAAY,EAAG75B,KAAK2mB,UAAY,IAG/B,YAAA4nC,aAAR,WACMvuD,KAAKutD,UACPvtD,KAAKwtD,mBAAoB,EAEzBxtD,KAAK65B,YAAY,EAAG75B,KAAK2mB,UAAY,IAIlC,YAAA5T,UAAP,SAAiByM,GACfxf,KAAKqtD,UAAUt6C,UAAUyM,GACzBxf,KAAKuuD,gBAGA,YAAAld,yBAAP,WACErxC,KAAKqtD,UAAUhc,2BACfrxC,KAAK65B,YAAY,EAAG75B,KAAK2mB,UAAY,IAGhC,YAAAiC,SAAP,SAAgBjS,EAAcrD,GAC5BtT,KAAKqtD,UAAUzkC,SAASjS,EAAMrD,GAC9BtT,KAAKuuD,gBAIA,YAAAjd,kBAAP,WACEtxC,KAAKqtD,UAAU/b,qBAGV,YAAA/+B,OAAP,WACEvS,KAAKqtD,UAAU96C,UAGV,YAAAC,QAAP,WACExS,KAAKqtD,UAAU76C,WAGV,YAAAK,mBAAP,SAA0B/M,EAAyBC,EAAuB+M,GACxE9S,KAAKqtD,UAAUx6C,mBAAmB/M,EAAOC,EAAK+M,IAGzC,YAAAL,aAAP,WACEzS,KAAKqtD,UAAU56C,gBAGV,YAAAtM,MAAP,WACEnG,KAAKqtD,UAAUlnD,SAGV,YAAAod,wBAAP,SAA+B7b,GAC7B,OAAO1H,KAAKqtD,UAAU9pC,wBAAwB7b,IAGzC,YAAA+b,0BAAP,SAAiCC,GAC/B,OAAO1jB,KAAKqtD,UAAU5pC,0BAA0BC,IAhKvCsS,EAAa,GAwBrB,MAAA30B,iBACA,MAAAsB,mBAzBQqzB,GAAb,CAAmC,EAAAl0B,YAAtB,EAAAk0B,iB,8ECTb,WACA,QACA,QAMa,EAAAw4B,mBAAqB,ioBAGrB,EAAAC,gBAAoCjwD,OAAOqa,OAAO,CAC7DlC,KAAM,GACNrD,KAAM,GACN+vB,aAAa,EACbD,YAAa,QACbiW,YAAa,EACbuL,UAAY,EAAA4J,mBACZrxB,UAAW,OACXnnB,4BAA4B,EAC5ByqB,mBAAoB,MACpBC,sBAAuB,EACvB1pB,WAAY,kCACZD,SAAU,GACVD,WAAY,SACZD,eAAgB,OAChBunB,WAAY,EACZsT,cAAe,EACf1Y,SAAU,OACV01B,WAAY,IACZ/tB,kBAAmB,EACnBjO,kBAAkB,EAClB6I,iBAAiB,EACjBukB,+BAA+B,EAC/B7oC,qBAAsB,EACtB03C,cAAc,EACdpuC,mBAAmB,EACnBquC,aAAc,EACdltC,MAAO,GACPuS,sBAAuB,EAAAtoB,MACvByrB,aAAc,SACduQ,cAAe,GACf7V,aAAa,EACbuwB,cAAe,eAEf5X,YAAY,EACZ7N,SAAU,QACVK,cAAc,IAMhB,IAAM4xB,EAA2B,CAAC,OAAQ,QAE1C,aAQE,WAAYr7C,GAAZ,WAHQ,KAAAs7C,gBAAkB,IAAI,EAAAluD,aAI5BZ,KAAKwT,QAAU,EAAAlP,MAAM,EAAAmqD,iBACrBjwD,OAAO2b,KAAK3G,GAAS/R,SAAQ,SAAA8a,GAC3B,GAAIA,KAAK,EAAK/I,QAAS,CACrB,IAAMu7C,EAAWv7C,EAAQ+I,GACzB,EAAK/I,QAAQ+I,GAAKwyC,MAyE1B,OAhFE,sBAAW,6BAAc,C,IAAzB,WAA8C,OAAO/uD,KAAK8uD,gBAAgBvpC,O,gCAYnE,YAAAoG,UAAP,SAAiBtsB,EAAaN,GAC5B,KAAMM,KAAO,EAAAovD,iBACX,MAAM,IAAIl2C,MAAM,uBAAyBlZ,EAAM,KAEjD,IAA+C,IAA3CwvD,EAAyBhtD,QAAQxC,GACnC,MAAM,IAAIkZ,MAAM,WAAWlZ,EAAG,wCAE5BW,KAAKwT,QAAQnU,KAASN,IAI1BA,EAAQiB,KAAKgvD,2BAA2B3vD,EAAKN,GAGzCiB,KAAKwT,QAAQnU,KAASN,IAI1BiB,KAAKwT,QAAQnU,GAAON,EACpBiB,KAAK8uD,gBAAgBvuD,KAAKlB,MAGpB,YAAA2vD,2BAAR,SAAmC3vD,EAAaN,GAC9C,OAAQM,GACN,IAAK,YACL,IAAK,cACL,IAAK,aACL,IAAK,iBACL,IAAK,eACL,IAAK,gBACEN,IACHA,EAAQ,EAAA0vD,gBAAgBpvD,IAE1B,MACF,IAAK,cACHN,EAAQwK,KAAKg3B,MAAMxhC,GAErB,IAAK,aACL,IAAK,eACH,GAAIA,EAAQ,EACV,MAAM,IAAIwZ,MAASlZ,EAAG,kCAAkCN,GAE1D,MACF,IAAK,uBACHA,EAAQwK,KAAKmB,IAAI,EAAGnB,KAAKsB,IAAI,GAAItB,KAAKC,MAAc,GAARzK,GAAc,KAC1D,MACF,IAAK,aAEH,IADAA,EAAQwK,KAAKsB,IAAI9L,EAAO,aACZ,EACV,MAAM,IAAIwZ,MAASlZ,EAAG,kCAAkCN,GAE1D,MACF,IAAK,wBACL,IAAK,oBACH,GAAIA,GAAS,EACX,MAAM,IAAIwZ,MAASlZ,EAAG,8CAA8CN,GAI1E,OAAOA,GAGF,YAAA0sB,UAAP,SAAiBpsB,GACf,KAAMA,KAAO,EAAAovD,iBACX,MAAM,IAAIl2C,MAAM,uBAAuBlZ,EAAG,KAE5C,OAAOW,KAAKwT,QAAQnU,IAExB,EAtFA,GAAa,EAAAmwB,kB,mfCxDb,WACA,OAGA,aAYE,WACWhe,EACAy9C,EACyBt+C,GAFzB,KAAAa,WACA,KAAAy9C,gBACyB,KAAAt+C,kBAZ7B,KAAAsD,MAAgB,EAChB,KAAAE,OAAiB,EAKhB,KAAA+6C,kBAAoB,IAAI,EAAAtuD,aAQ9BZ,KAAKmvD,iBAAmB,IAAIC,EAAmB59C,EAAUy9C,EAAejvD,KAAK2Q,iBAWjF,OArBE,sBAAW,2BAAY,C,IAAvB,WAAqC,OAAO3Q,KAAKiU,MAAQ,GAAKjU,KAAKmU,OAAS,G,gCAG5E,sBAAW,+BAAgB,C,IAA3B,WAA8C,OAAOnU,KAAKkvD,kBAAkB3pC,O,gCAUrE,YAAA8M,QAAP,WACE,IAAMrsB,EAAShG,KAAKmvD,iBAAiB98B,UACjCrsB,EAAOiO,QAAUjU,KAAKiU,OAASjO,EAAOmO,SAAWnU,KAAKmU,SACxDnU,KAAKiU,MAAQjO,EAAOiO,MACpBjU,KAAKmU,OAASnO,EAAOmO,OACrBnU,KAAKkvD,kBAAkB3uD,SAzBhBm1B,EAAe,GAevB,MAAAr0B,kBAfQq0B,GAAb,GAAa,EAAAA,kBA6Cb,iBAIE,WACUZ,EACAu6B,EACA1+C,GAFA,KAAAmkB,YACA,KAAAu6B,iBACA,KAAA1+C,kBANF,KAAA2+C,QAA0B,CAAEr7C,MAAO,EAAGE,OAAQ,GAQpDnU,KAAKuvD,gBAAkBvvD,KAAK80B,UAAUrjB,cAAc,QACpDzR,KAAKuvD,gBAAgB79C,UAAUC,IAAI,8BACnC3R,KAAKuvD,gBAAgB9xB,YAAc,IACnCz9B,KAAKuvD,gBAAgBt6B,aAAa,cAAe,QACjDj1B,KAAKqvD,eAAev9C,YAAY9R,KAAKuvD,iBAmBzC,OAhBS,YAAAl9B,QAAP,WACEryB,KAAKuvD,gBAAgB39C,MAAMoF,WAAahX,KAAK2Q,gBAAgB6C,QAAQwD,WACrEhX,KAAKuvD,gBAAgB39C,MAAMmF,SAAc/W,KAAK2Q,gBAAgB6C,QAAQuD,SAAQ,KAG9E,IAAMy4C,EAAWxvD,KAAKuvD,gBAAgB9pC,wBAStC,OALuB,IAAnB+pC,EAASv7C,OAAmC,IAApBu7C,EAASr7C,SACnCnU,KAAKsvD,QAAQr7C,MAAQu7C,EAASv7C,MAC9BjU,KAAKsvD,QAAQn7C,OAAS5K,KAAKoB,KAAK6kD,EAASr7C,SAGpCnU,KAAKsvD,SAEhB,EAhCA,I,mfCjDA,WACA,QAGa,EAAA/yB,aAAe,EACf,EAAAC,aAAe,EAE5B,iBASE,WAC2B7rB,GAAA,KAAAA,kBAEzB3Q,KAAK2W,KAAOpN,KAAKmB,IAAIiG,EAAgB6C,QAAQmD,KAAM,EAAA4lB,cACnDv8B,KAAKsT,KAAO/J,KAAKmB,IAAIiG,EAAgB6C,QAAQF,KAAM,EAAAkpB,cACnDx8B,KAAKkpB,QAAU,IAAI,EAAAumC,UAAU9+C,EAAiB3Q,MAWlD,OAlBE,sBAAW,qBAAM,C,IAAjB,WAA+B,OAAOA,KAAKkpB,QAAQ8D,Q,gCAU5C,YAAAtZ,OAAP,SAAciD,EAAcrD,GAC1BtT,KAAK2W,KAAOA,EACZ3W,KAAKsT,KAAOA,GAGP,YAAAuJ,MAAP,WACE7c,KAAKkpB,QAAU,IAAI,EAAAumC,UAAUzvD,KAAK2Q,gBAAiB3Q,OAvB1C2vB,EAAa,GAUrB,MAAAtuB,kBAVQsuB,GAAb,GAAa,EAAAA,iB,8ECLb,YACA,OAOA,aAaE,WACWjE,EACAmmB,GADA,KAAAnmB,iBACA,KAAAmmB,gBATH,KAAA+M,kBAAoB,IAAI,EAAAh+C,aAW9BZ,KAAK0sB,QAAU,IAAI,EAAAgjC,QAAO,EAAMhkC,EAAgBmmB,GAChD7xC,KAAK0sB,QAAQijC,mBAIb3vD,KAAK4vD,KAAO,IAAI,EAAAF,QAAO,EAAOhkC,EAAgBmmB,GAC9C7xC,KAAK6vD,cAAgB7vD,KAAK0sB,QAE1B1sB,KAAK6yB,gBAiFT,OAnGE,sBAAW,+BAAgB,C,IAA3B,WAA0F,OAAO7yB,KAAK4+C,kBAAkBr5B,O,gCAwBxH,sBAAW,kBAAG,C,IAAd,WACE,OAAOvlB,KAAK4vD,M,gCAMd,sBAAW,qBAAM,C,IAAjB,WACE,OAAO5vD,KAAK6vD,e,gCAMd,sBAAW,qBAAM,C,IAAjB,WACE,OAAO7vD,KAAK0sB,S,gCAMP,YAAAuf,qBAAP,WACMjsC,KAAK6vD,gBAAkB7vD,KAAK0sB,UAGhC1sB,KAAK0sB,QAAQlY,EAAIxU,KAAK4vD,KAAKp7C,EAC3BxU,KAAK0sB,QAAQjY,EAAIzU,KAAK4vD,KAAKn7C,EAI3BzU,KAAK4vD,KAAKzpD,QACVnG,KAAK6vD,cAAgB7vD,KAAK0sB,QAC1B1sB,KAAK4+C,kBAAkBr+C,KAAK,CAC1BygD,aAAchhD,KAAK0sB,QACnBojC,eAAgB9vD,KAAK4vD,SAOlB,YAAA5jB,kBAAP,SAAyB+jB,GACnB/vD,KAAK6vD,gBAAkB7vD,KAAK4vD,OAKhC5vD,KAAK4vD,KAAKD,iBAAiBI,GAC3B/vD,KAAK4vD,KAAKp7C,EAAIxU,KAAK0sB,QAAQlY,EAC3BxU,KAAK4vD,KAAKn7C,EAAIzU,KAAK0sB,QAAQjY,EAC3BzU,KAAK6vD,cAAgB7vD,KAAK4vD,KAC1B5vD,KAAK4+C,kBAAkBr+C,KAAK,CAC1BygD,aAAchhD,KAAK4vD,KACnBE,eAAgB9vD,KAAK0sB,YASlB,YAAAhZ,OAAP,SAAcs8C,EAAiBC,GAC7BjwD,KAAK0sB,QAAQhZ,OAAOs8C,EAASC,GAC7BjwD,KAAK4vD,KAAKl8C,OAAOs8C,EAASC,IAOrB,YAAAp9B,cAAP,SAAqBn1B,GACnBsC,KAAK0sB,QAAQmG,cAAcn1B,GAC3BsC,KAAK4vD,KAAK/8B,cAAcn1B,IAE5B,EA1GA,GAAa,EAAA+xD,a,8ECVb,YAGA,QACA,OACA,OACA,QACA,QAEA,QAEa,EAAAS,gBAAkB,WAS/B,iBAoBE,WACUC,EACAx/C,EACAD,GAFA,KAAAy/C,iBACA,KAAAx/C,kBACA,KAAAD,iBArBH,KAAAyb,MAAgB,EAChB,KAAAC,MAAgB,EAChB,KAAA3X,EAAY,EACZ,KAAAD,EAAY,EAKZ,KAAAi4B,OAAiB,EACjB,KAAAD,OAAiB,EACjB,KAAAE,iBAAmB,EAAA9zB,kBAAkBtU,QACrC,KAAAqoC,aAAgC,EAAApxB,gBAChC,KAAA4N,QAAoB,GACnB,KAAAinC,UAAuB,EAAA7sD,SAASF,aAAa,CAAC,EAAG,EAAAhB,eAAgB,EAAAC,gBAAiB,EAAAC,iBAClF,KAAA8tD,gBAA6B,EAAA9sD,SAASF,aAAa,CAAC,EAAG,EAAAb,qBAAsB,EAAAC,sBAAuB,EAAAC,uBAS1G1C,KAAKswD,MAAQtwD,KAAK0Q,eAAeiG,KACjC3W,KAAKuwD,MAAQvwD,KAAK0Q,eAAe4C,KACjCtT,KAAK8jB,MAAQ,IAAI,EAAA0sC,aAA0BxwD,KAAKywD,wBAAwBzwD,KAAKuwD,QAC7EvwD,KAAKo6B,UAAY,EACjBp6B,KAAKs6B,aAAet6B,KAAKuwD,MAAQ,EACjCvwD,KAAK6yB,gBA8iBT,OA3iBS,YAAAtG,YAAP,SAAmB4f,GAQjB,OAPIA,GACFnsC,KAAKowD,UAAUltD,GAAKipC,EAAKjpC,GACzBlD,KAAKowD,UAAUjtD,GAAKgpC,EAAKhpC,KAEzBnD,KAAKowD,UAAUltD,GAAK,EACpBlD,KAAKowD,UAAUjtD,GAAK,GAEfnD,KAAKowD,WAGP,YAAAM,kBAAP,SAAyBvkB,GAQvB,OAPIA,GACFnsC,KAAKqwD,gBAAgBntD,GAAKipC,EAAKjpC,GAC/BlD,KAAKqwD,gBAAgBltD,GAAKgpC,EAAKhpC,KAE/BnD,KAAKqwD,gBAAgBntD,GAAK,EAC1BlD,KAAKqwD,gBAAgBltD,GAAK,GAErBnD,KAAKqwD,iBAGP,YAAAn2B,aAAP,SAAoBiS,EAAsBpzB,GACxC,OAAO,IAAI,EAAAwB,WAAWva,KAAK0Q,eAAeiG,KAAM3W,KAAKusB,YAAY4f,GAAOpzB,IAG1E,sBAAW,4BAAa,C,IAAxB,WACE,OAAO/Y,KAAKmwD,gBAAkBnwD,KAAK8jB,MAAMtI,UAAYxb,KAAKuwD,O,gCAG5D,sBAAW,iCAAkB,C,IAA7B,WACE,IACMI,EADY3wD,KAAKosB,MAAQpsB,KAAKyU,EACNzU,KAAKmsB,MACnC,OAAQwkC,GAAa,GAAKA,EAAY3wD,KAAKuwD,O,gCAQrC,YAAAE,wBAAR,SAAgCn9C,GAC9B,IAAKtT,KAAKmwD,eACR,OAAO78C,EAGT,IAAMs9C,EAAsBt9C,EAAOtT,KAAK2Q,gBAAgB6C,QAAQk7C,WAEhE,OAAOkC,EAAsB,EAAAV,gBAAkB,EAAAA,gBAAkBU,GAM5D,YAAAjB,iBAAP,SAAwBI,GACtB,GAA0B,IAAtB/vD,KAAK8jB,MAAMzjB,OAAc,MACVM,IAAbovD,IACFA,EAAW,EAAAn3C,mBAGb,IADA,IAAIlb,EAAIsC,KAAKuwD,MACN7yD,KACLsC,KAAK8jB,MAAM3jB,KAAKH,KAAKk6B,aAAa61B,MAQjC,YAAA5pD,MAAP,WACEnG,KAAKmsB,MAAQ,EACbnsB,KAAKosB,MAAQ,EACbpsB,KAAKyU,EAAI,EACTzU,KAAKwU,EAAI,EACTxU,KAAK8jB,MAAQ,IAAI,EAAA0sC,aAA0BxwD,KAAKywD,wBAAwBzwD,KAAKuwD,QAC7EvwD,KAAKo6B,UAAY,EACjBp6B,KAAKs6B,aAAet6B,KAAKuwD,MAAQ,EACjCvwD,KAAK6yB,iBAQA,YAAAnf,OAAP,SAAcs8C,EAAiBC,GAE7B,IAAMY,EAAW7wD,KAAKusB,YAAY,EAAA3T,mBAI5Bk4C,EAAe9wD,KAAKywD,wBAAwBR,GAOlD,GANIa,EAAe9wD,KAAK8jB,MAAMtI,YAC5Bxb,KAAK8jB,MAAMtI,UAAYs1C,GAKrB9wD,KAAK8jB,MAAMzjB,OAAS,EAAG,CAEzB,GAAIL,KAAKswD,MAAQN,EACf,IAAK,IAAItyD,EAAI,EAAGA,EAAIsC,KAAK8jB,MAAMzjB,OAAQ3C,IACrCsC,KAAK8jB,MAAMnlB,IAAIjB,GAAIgW,OAAOs8C,EAASa,GAKvC,IAAIE,EAAS,EACb,GAAI/wD,KAAKuwD,MAAQN,EACf,IAAK,IAAIx7C,EAAIzU,KAAKuwD,MAAO97C,EAAIw7C,EAASx7C,IAChCzU,KAAK8jB,MAAMzjB,OAAS4vD,EAAUjwD,KAAKosB,QACjCpsB,KAAK2Q,gBAAgB6C,QAAQse,YAG/B9xB,KAAK8jB,MAAM3jB,KAAK,IAAI,EAAAoa,WAAWy1C,EAASa,IAEpC7wD,KAAKosB,MAAQ,GAAKpsB,KAAK8jB,MAAMzjB,QAAUL,KAAKosB,MAAQpsB,KAAKyU,EAAIs8C,EAAS,GAGxE/wD,KAAKosB,QACL2kC,IACI/wD,KAAKmsB,MAAQ,GAEfnsB,KAAKmsB,SAKPnsB,KAAK8jB,MAAM3jB,KAAK,IAAI,EAAAoa,WAAWy1C,EAASa,UAMhD,IAASp8C,EAAIzU,KAAKuwD,MAAO97C,EAAIw7C,EAASx7C,IAChCzU,KAAK8jB,MAAMzjB,OAAS4vD,EAAUjwD,KAAKosB,QACjCpsB,KAAK8jB,MAAMzjB,OAASL,KAAKosB,MAAQpsB,KAAKyU,EAAI,EAE5CzU,KAAK8jB,MAAMqpB,OAGXntC,KAAKosB,QACLpsB,KAAKmsB,UAQb,GAAI2kC,EAAe9wD,KAAK8jB,MAAMtI,UAAW,CAEvC,IAAMw1C,EAAehxD,KAAK8jB,MAAMzjB,OAASywD,EACrCE,EAAe,IACjBhxD,KAAK8jB,MAAM2nB,UAAUulB,GACrBhxD,KAAKosB,MAAQ7iB,KAAKmB,IAAI1K,KAAKosB,MAAQ4kC,EAAc,GACjDhxD,KAAKmsB,MAAQ5iB,KAAKmB,IAAI1K,KAAKmsB,MAAQ6kC,EAAc,GACjDhxD,KAAKysC,OAASljC,KAAKmB,IAAI1K,KAAKysC,OAASukB,EAAc,IAErDhxD,KAAK8jB,MAAMtI,UAAYs1C,EAIzB9wD,KAAKwU,EAAIjL,KAAKsB,IAAI7K,KAAKwU,EAAGw7C,EAAU,GACpChwD,KAAKyU,EAAIlL,KAAKsB,IAAI7K,KAAKyU,EAAGw7C,EAAU,GAChCc,IACF/wD,KAAKyU,GAAKs8C,GAEZ/wD,KAAKwsC,OAASjjC,KAAKsB,IAAI7K,KAAKwsC,OAAQwjB,EAAU,GAE9ChwD,KAAKo6B,UAAY,EAKnB,GAFAp6B,KAAKs6B,aAAe21B,EAAU,EAE1BjwD,KAAKixD,mBACPjxD,KAAKkxD,QAAQlB,EAASC,GAGlBjwD,KAAKswD,MAAQN,GACf,IAAStyD,EAAI,EAAGA,EAAIsC,KAAK8jB,MAAMzjB,OAAQ3C,IACrCsC,KAAK8jB,MAAMnlB,IAAIjB,GAAIgW,OAAOs8C,EAASa,GAKzC7wD,KAAKswD,MAAQN,EACbhwD,KAAKuwD,MAAQN,GAGf,sBAAY,+BAAgB,C,IAA5B,WACE,OAAOjwD,KAAKmwD,iBAAmBnwD,KAAK2Q,gBAAgB6C,QAAQse,a,gCAGtD,YAAAo/B,QAAR,SAAgBlB,EAAiBC,GAC3BjwD,KAAKswD,QAAUN,IAKfA,EAAUhwD,KAAKswD,MACjBtwD,KAAKmxD,cAAcnB,EAASC,GAE5BjwD,KAAKoxD,eAAepB,EAASC,KAIzB,YAAAkB,cAAR,SAAsBnB,EAAiBC,GACrC,IAAMoB,EAAqB,EAAAC,6BAA6BtxD,KAAK8jB,MAAO9jB,KAAKswD,MAAON,EAAShwD,KAAKosB,MAAQpsB,KAAKyU,EAAGzU,KAAKusB,YAAY,EAAA3T,oBAC/H,GAAIy4C,EAAShxD,OAAS,EAAG,CACvB,IAAMkxD,EAAkB,EAAAC,4BAA4BxxD,KAAK8jB,MAAOutC,GAChE,EAAAI,2BAA2BzxD,KAAK8jB,MAAOytC,EAAgBG,QACvD1xD,KAAK2xD,4BAA4B3B,EAASC,EAASsB,EAAgBK,gBAI/D,YAAAD,4BAAR,SAAoC3B,EAAiBC,EAAiB2B,GAIpE,IAHA,IAAMf,EAAW7wD,KAAKusB,YAAY,EAAA3T,mBAE9Bi5C,EAAsBD,EACnBC,KAAwB,GACV,IAAf7xD,KAAKosB,OACHpsB,KAAKyU,EAAI,GACXzU,KAAKyU,IAEHzU,KAAK8jB,MAAMzjB,OAAS4vD,GAEtBjwD,KAAK8jB,MAAM3jB,KAAK,IAAI,EAAAoa,WAAWy1C,EAASa,MAGtC7wD,KAAKmsB,QAAUnsB,KAAKosB,OACtBpsB,KAAKmsB,QAEPnsB,KAAKosB,SAGTpsB,KAAKysC,OAASljC,KAAKmB,IAAI1K,KAAKysC,OAASmlB,EAAc,IAG7C,YAAAR,eAAR,SAAuBpB,EAAiBC,GAOtC,IANA,IAAMY,EAAW7wD,KAAKusB,YAAY,EAAA3T,mBAG5Bk5C,EAAW,GACbC,EAAgB,EAEXt9C,EAAIzU,KAAK8jB,MAAMzjB,OAAS,EAAGoU,GAAK,EAAGA,IAAK,CAE/C,IAAI6zB,EAAWtoC,KAAK8jB,MAAMnlB,IAAI8V,GAC9B,MAAK6zB,IAAaA,EAASvvB,WAAauvB,EAAS9tB,oBAAsBw1C,GAAvE,CAMA,IADA,IAAMgC,EAA6B,CAAC1pB,GAC7BA,EAASvvB,WAAatE,EAAI,GAC/B6zB,EAAWtoC,KAAK8jB,MAAMnlB,MAAM8V,GAC5Bu9C,EAAaxJ,QAAQlgB,GAKvB,IAAM2pB,EAAYjyD,KAAKosB,MAAQpsB,KAAKyU,EACpC,KAAIw9C,GAAax9C,GAAKw9C,EAAYx9C,EAAIu9C,EAAa3xD,QAAnD,CAIA,IAAM6xD,EAAiBF,EAAaA,EAAa3xD,OAAS,GAAGma,mBACvD23C,EAAkB,EAAAC,+BAA+BJ,EAAchyD,KAAKswD,MAAON,GAC3EqC,EAAaF,EAAgB9xD,OAAS2xD,EAAa3xD,OACrDiyD,OAAY,EAGdA,EAFiB,IAAftyD,KAAKosB,OAAepsB,KAAKyU,IAAMzU,KAAK8jB,MAAMzjB,OAAS,EAEtCkJ,KAAKmB,IAAI,EAAG1K,KAAKyU,EAAIzU,KAAK8jB,MAAMtI,UAAY62C,GAE5C9oD,KAAKmB,IAAI,EAAG1K,KAAK8jB,MAAMzjB,OAASL,KAAK8jB,MAAMtI,UAAY62C,GAKxE,IADA,IAAME,EAAyB,GACtB70D,EAAI,EAAGA,EAAI20D,EAAY30D,IAAK,CACnC,IAAM4c,EAAUta,KAAKk6B,aAAa,EAAAthB,mBAAmB,GACrD25C,EAASpyD,KAAKma,GAEZi4C,EAASlyD,OAAS,IACpByxD,EAAS3xD,KAAK,CAGZ2F,MAAO2O,EAAIu9C,EAAa3xD,OAAS0xD,EACjCQ,SAAQ,IAEVR,GAAiBQ,EAASlyD,QAE5B2xD,EAAa7xD,KAAI,MAAjB6xD,EAAqBO,GAGrB,IAAIC,EAAgBL,EAAgB9xD,OAAS,EACzCua,EAAUu3C,EAAgBK,GACd,IAAZ53C,IAEFA,EAAUu3C,IADVK,IAKF,IAFA,IAAIC,EAAeT,EAAa3xD,OAASgyD,EAAa,EAClD13C,EAASu3C,EACNO,GAAgB,GAAG,CACxB,IAAMC,EAAcnpD,KAAKsB,IAAI8P,EAAQC,GAQrC,GAPAo3C,EAAaQ,GAAe/3C,cAAcu3C,EAAaS,GAAe93C,EAAS+3C,EAAa93C,EAAU83C,EAAaA,GAAa,GAEhH,KADhB93C,GAAW83C,KAGT93C,EAAUu3C,IADVK,IAIa,KADf73C,GAAU+3C,GACQ,CAChBD,IACA,IAAME,EAAoBppD,KAAKmB,IAAI+nD,EAAc,GACjD93C,EAAS,EAAAi4C,4BAA4BZ,EAAcW,EAAmB3yD,KAAKswD,QAK/E,IAAS5yD,EAAI,EAAGA,EAAIs0D,EAAa3xD,OAAQ3C,IACnCy0D,EAAgBz0D,GAAKsyD,GACvBgC,EAAat0D,GAAGyb,QAAQg5C,EAAgBz0D,GAAImzD,GAMhD,IADA,IAAIgB,EAAsBQ,EAAaC,EAChCT,KAAwB,GACV,IAAf7xD,KAAKosB,MACHpsB,KAAKyU,EAAIw7C,EAAU,GACrBjwD,KAAKyU,IACLzU,KAAK8jB,MAAMqpB,QAEXntC,KAAKosB,QACLpsB,KAAKmsB,SAIHnsB,KAAKosB,MAAQ7iB,KAAKsB,IAAI7K,KAAK8jB,MAAMtI,UAAWxb,KAAK8jB,MAAMzjB,OAAS0xD,GAAiB9B,IAC/EjwD,KAAKosB,QAAUpsB,KAAKmsB,OACtBnsB,KAAKmsB,QAEPnsB,KAAKosB,SAIXpsB,KAAKysC,OAASljC,KAAKsB,IAAI7K,KAAKysC,OAAS4lB,EAAYryD,KAAKosB,MAAQ6jC,EAAU,KAM1E,GAAI6B,EAASzxD,OAAS,EAAG,CAGvB,IAAMwyD,EAA+B,GAG/BC,EAA8B,GACpC,IAASp1D,EAAI,EAAGA,EAAIsC,KAAK8jB,MAAMzjB,OAAQ3C,IACrCo1D,EAAc3yD,KAAKH,KAAK8jB,MAAMnlB,IAAIjB,IAEpC,IAAMq1D,EAAsB/yD,KAAK8jB,MAAMzjB,OAEnC2yD,EAAoBD,EAAsB,EAC1CE,EAAoB,EACpBC,EAAepB,EAASmB,GAC5BjzD,KAAK8jB,MAAMzjB,OAASkJ,KAAKsB,IAAI7K,KAAK8jB,MAAMtI,UAAWxb,KAAK8jB,MAAMzjB,OAAS0xD,GACvE,IAAIoB,EAAqB,EACzB,IAASz1D,EAAI6L,KAAKsB,IAAI7K,KAAK8jB,MAAMtI,UAAY,EAAGu3C,EAAsBhB,EAAgB,GAAIr0D,GAAK,EAAGA,IAChG,GAAIw1D,GAAgBA,EAAaptD,MAAQktD,EAAoBG,EAAoB,CAE/E,IAAK,IAAIC,EAAQF,EAAaX,SAASlyD,OAAS,EAAG+yD,GAAS,EAAGA,IAC7DpzD,KAAK8jB,MAAMtL,IAAI9a,IAAKw1D,EAAaX,SAASa,IAE5C11D,IAGAm1D,EAAa1yD,KAAK,CAChByB,MAAOoxD,EAAoB,EAC3BloC,OAAQooC,EAAaX,SAASlyD,SAGhC8yD,GAAsBD,EAAaX,SAASlyD,OAC5C6yD,EAAepB,IAAWmB,QAE1BjzD,KAAK8jB,MAAMtL,IAAI9a,EAAGo1D,EAAcE,MAKpC,IAAIK,EAAqB,EACzB,IAAS31D,EAAIm1D,EAAaxyD,OAAS,EAAG3C,GAAK,EAAGA,IAC5Cm1D,EAAan1D,GAAGkE,OAASyxD,EACzBrzD,KAAK8jB,MAAMwvC,gBAAgB/yD,KAAKsyD,EAAan1D,IAC7C21D,GAAsBR,EAAan1D,GAAGotB,OAExC,IAAMkmC,EAAeznD,KAAKmB,IAAI,EAAGqoD,EAAsBhB,EAAgB/xD,KAAK8jB,MAAMtI,WAC9Ew1C,EAAe,GACjBhxD,KAAK8jB,MAAMyvC,cAAchzD,KAAKywD,KAoB7B,YAAAhU,yBAAP,SAAgCwW,EAAmB5W,EAAqB3hC,GACtE,SADsE,IAAAA,OAAA,GAC/D2hC,GAAa,CAClB,IAAMviC,EAAOra,KAAK8jB,MAAMnlB,IAAI60D,GAC5B,IAAKn5C,EACH,MAAO,EAAE,GAAI,GAGf,IADA,IAAMha,EAAS,EAAcga,EAAKG,mBAAqBH,EAAKha,OACnD3C,EAAI,EAAGA,EAAI2C,IAAU3C,EAM5B,GALI2c,EAAK1b,IAAIjB,GAAG,EAAAyE,yBAGdy6C,GAAeviC,EAAK1b,IAAIjB,GAAG,EAAAwE,sBAAsB7B,QAAU,GAEzDu8C,EAAc,EAChB,MAAO,CAAC4W,EAAW91D,GAGvB81D,IAEF,MAAO,CAACA,EAAW,IAad,YAAApU,4BAAP,SAAmCoU,EAAmBv4C,EAAoBC,EAAsBC,QAAtB,IAAAD,MAAA,GACxE,IAAMb,EAAOra,KAAK8jB,MAAMnlB,IAAI60D,GAC5B,OAAKn5C,EAGEA,EAAKW,kBAAkBC,EAAWC,EAAUC,GAF1C,IAKJ,YAAAonC,uBAAP,SAA8B9tC,GAI5B,IAHA,IAAIknC,EAAQlnC,EACR+tC,EAAO/tC,EAEJknC,EAAQ,GAAK37C,KAAK8jB,MAAMnlB,IAAIg9C,GAAQ5iC,WACzC4iC,IAGF,KAAO6G,EAAO,EAAIxiD,KAAK8jB,MAAMzjB,QAAUL,KAAK8jB,MAAMnlB,IAAI6jD,EAAO,GAAIzpC,WAC/DypC,IAEF,MAAO,CAAE7G,MAAK,EAAE6G,KAAI,IAOf,YAAA3vB,cAAP,SAAqBn1B,GAUnB,IATIA,QACGsC,KAAKmrC,KAAKztC,KACbA,EAAIsC,KAAKorC,SAAS1tC,KAGpBsC,KAAKmrC,KAAO,GACZztC,EAAI,GAGCA,EAAIsC,KAAKswD,MAAO5yD,GAAKsC,KAAK2Q,gBAAgB6C,QAAQo7C,aACvD5uD,KAAKmrC,KAAKztC,IAAK,GAQZ,YAAA0tC,SAAP,SAAgB52B,GAId,IAHIA,UACFA,EAAIxU,KAAKwU,IAEHxU,KAAKmrC,OAAO32B,IAAMA,EAAI,IAC9B,OAAOA,GAAKxU,KAAKswD,MAAQtwD,KAAKswD,MAAQ,EAAI97C,EAAI,EAAI,EAAIA,GAOjD,YAAAo2B,SAAP,SAAgBp2B,GAId,IAHIA,UACFA,EAAIxU,KAAKwU,IAEHxU,KAAKmrC,OAAO32B,IAAMA,EAAIxU,KAAKswD,QACnC,OAAO97C,GAAKxU,KAAKswD,MAAQtwD,KAAKswD,MAAQ,EAAI97C,EAAI,EAAI,EAAIA,GAGjD,YAAA4V,UAAP,SAAiB3V,GAAjB,WACQg/C,EAAS,IAAI,EAAAC,OAAOj/C,GA0B1B,OAzBAzU,KAAKmpB,QAAQhpB,KAAKszD,GAClBA,EAAO/xD,SAAS1B,KAAK8jB,MAAM46B,QAAO,SAAA5zB,GAChC2oC,EAAOp5C,MAAQyQ,EAEX2oC,EAAOp5C,KAAO,GAChBo5C,EAAOrzD,cAGXqzD,EAAO/xD,SAAS1B,KAAK8jB,MAAM6vC,UAAS,SAAApuC,GAC9BkuC,EAAOp5C,MAAQkL,EAAM3jB,QACvB6xD,EAAOp5C,MAAQkL,EAAMuF,YAGzB2oC,EAAO/xD,SAAS1B,KAAK8jB,MAAM8vC,UAAS,SAAAruC,GAE9BkuC,EAAOp5C,MAAQkL,EAAM3jB,OAAS6xD,EAAOp5C,KAAOkL,EAAM3jB,MAAQ2jB,EAAMuF,QAClE2oC,EAAOrzD,UAILqzD,EAAOp5C,KAAOkL,EAAM3jB,QACtB6xD,EAAOp5C,MAAQkL,EAAMuF,YAGzB2oC,EAAO/xD,SAAS+xD,EAAOI,WAAU,WAAM,SAAKC,cAAcL,OACnDA,GAGD,YAAAK,cAAR,SAAsBL,GACpBzzD,KAAKmpB,QAAQ7oB,OAAON,KAAKmpB,QAAQtnB,QAAQ4xD,GAAS,IAG7C,YAAAjY,SAAP,SAAgBvgC,EAAoBtB,EAAqB6K,EAAmBuvC,EAAwBC,GAClG,OAAO,IAAIC,EAAqBj0D,KAAMib,EAAWtB,EAAY6K,EAAUuvC,EAAeC,IAE1F,EA5kBA,GAAa,EAAAtE,SA0lBb,iBAGE,WACUzjC,EACAioC,EACAC,EACAC,EACAC,EACAC,QAHA,IAAAH,MAAA,QACA,IAAAC,MAAoBnoC,EAAQnI,MAAMzjB,aAClC,IAAAg0D,MAAA,QACA,IAAAC,MAAA,GALA,KAAAroC,UACA,KAAAioC,aACA,KAAAC,cACA,KAAAC,YACA,KAAAC,iBACA,KAAAC,eAEJt0D,KAAKm0D,YAAc,IACrBn0D,KAAKm0D,YAAc,GAEjBn0D,KAAKo0D,UAAYp0D,KAAKisB,QAAQnI,MAAMzjB,SACtCL,KAAKo0D,UAAYp0D,KAAKisB,QAAQnI,MAAMzjB,QAEtCL,KAAKu0D,SAAWv0D,KAAKm0D,YA0BzB,OAvBS,YAAA1Y,QAAP,WACE,OAAOz7C,KAAKu0D,SAAWv0D,KAAKo0D,WAGvB,YAAAzmB,KAAP,WACE,IAAMtoB,EAAQrlB,KAAKisB,QAAQs2B,uBAAuBviD,KAAKu0D,UAEnDlvC,EAAMs2B,MAAQ37C,KAAKm0D,YAAcn0D,KAAKq0D,iBACxChvC,EAAMs2B,MAAQ37C,KAAKm0D,YAAcn0D,KAAKq0D,gBAEpChvC,EAAMm9B,KAAOxiD,KAAKo0D,UAAYp0D,KAAKs0D,eACrCjvC,EAAMm9B,KAAOxiD,KAAKo0D,UAAYp0D,KAAKs0D,cAGrCjvC,EAAMs2B,MAAQpyC,KAAKmB,IAAI2a,EAAMs2B,MAAO,GACpCt2B,EAAMm9B,KAAOj5C,KAAKsB,IAAIwa,EAAMm9B,KAAMxiD,KAAKisB,QAAQnI,MAAMzjB,QAErD,IADA,IAAI2F,EAAS,GACJtI,EAAI2nB,EAAMs2B,MAAOj+C,GAAK2nB,EAAMm9B,OAAQ9kD,EAC3CsI,GAAUhG,KAAKisB,QAAQmzB,4BAA4B1hD,EAAGsC,KAAKk0D,YAG7D,OADAl0D,KAAKu0D,SAAWlvC,EAAMm9B,KAAO,EACtB,CAACn9B,MAAOA,EAAOpiB,QAAS+C,IAEnC,EA3CA,GAAa,EAAAiuD,wB,8EC7mBb,WAgBA,aAYE,WACUO,GAAA,KAAAA,aARH,KAAAC,gBAAkB,IAAI,EAAA7zD,aAEtB,KAAA0yD,gBAAkB,IAAI,EAAA1yD,aAEtB,KAAA2yD,cAAgB,IAAI,EAAA3yD,aAMzBZ,KAAK00D,OAAS,IAAIp4C,MAAStc,KAAKw0D,YAChCx0D,KAAKm0D,YAAc,EACnBn0D,KAAK20D,QAAU,EAmMnB,OA9ME,sBAAW,uBAAQ,C,IAAnB,WAA8C,OAAO30D,KAAKy0D,gBAAgBlvC,O,gCAE1E,sBAAW,uBAAQ,C,IAAnB,WAA8C,OAAOvlB,KAAKszD,gBAAgB/tC,O,gCAE1E,sBAAW,qBAAM,C,IAAjB,WAAsC,OAAOvlB,KAAKuzD,cAAchuC,O,gCAUhE,sBAAW,wBAAS,C,IAApB,WACE,OAAOvlB,KAAKw0D,Y,IAGd,SAAqB1D,GAEnB,GAAI9wD,KAAKw0D,aAAe1D,EAAxB,CAOA,IADA,IAAM8D,EAAW,IAAIt4C,MAAqBw0C,GACjCpzD,EAAI,EAAGA,EAAI6L,KAAKsB,IAAIimD,EAAc9wD,KAAKK,QAAS3C,IACvDk3D,EAASl3D,GAAKsC,KAAK00D,OAAO10D,KAAK60D,gBAAgBn3D,IAEjDsC,KAAK00D,OAASE,EACd50D,KAAKw0D,WAAa1D,EAClB9wD,KAAKm0D,YAAc,I,gCAGrB,sBAAW,qBAAM,C,IAAjB,WACE,OAAOn0D,KAAK20D,S,IAGd,SAAkBG,GAChB,GAAIA,EAAY90D,KAAK20D,QACnB,IAAK,IAAIj3D,EAAIsC,KAAK20D,QAASj3D,EAAIo3D,EAAWp3D,IACxCsC,KAAK00D,OAAOh3D,QAAKiD,EAGrBX,KAAK20D,QAAUG,G,gCAWV,YAAAn2D,IAAP,SAAWiD,GACT,OAAO5B,KAAK00D,OAAO10D,KAAK60D,gBAAgBjzD,KAWnC,YAAA4W,IAAP,SAAW5W,EAAe7C,GACxBiB,KAAK00D,OAAO10D,KAAK60D,gBAAgBjzD,IAAU7C,GAQtC,YAAAoB,KAAP,SAAYpB,GACViB,KAAK00D,OAAO10D,KAAK60D,gBAAgB70D,KAAK20D,UAAY51D,EAC9CiB,KAAK20D,UAAY30D,KAAKw0D,YACxBx0D,KAAKm0D,cAAgBn0D,KAAKm0D,YAAcn0D,KAAKw0D,WAC7Cx0D,KAAKuzD,cAAchzD,KAAK,IAExBP,KAAK20D,WASF,YAAAl6B,QAAP,WACE,GAAIz6B,KAAK20D,UAAY30D,KAAKw0D,WACxB,MAAM,IAAIj8C,MAAM,4CAIlB,OAFAvY,KAAKm0D,cAAgBn0D,KAAKm0D,YAAcn0D,KAAKw0D,WAC7Cx0D,KAAKuzD,cAAchzD,KAAK,GACjBP,KAAK00D,OAAO10D,KAAK60D,gBAAgB70D,KAAK20D,QAAU,KAMzD,sBAAW,qBAAM,C,IAAjB,WACE,OAAO30D,KAAK20D,UAAY30D,KAAKw0D,Y,gCAOxB,YAAArnB,IAAP,WACE,OAAOntC,KAAK00D,OAAO10D,KAAK60D,gBAAgB70D,KAAK20D,UAAY,KAYpD,YAAAr0D,OAAP,SAAcwF,EAAeivD,G,IAAqB,wDAEhD,GAAIA,EAAa,CACf,IAAK,IAAIr3D,EAAIoI,EAAOpI,EAAIsC,KAAK20D,QAAUI,EAAar3D,IAClDsC,KAAK00D,OAAO10D,KAAK60D,gBAAgBn3D,IAAMsC,KAAK00D,OAAO10D,KAAK60D,gBAAgBn3D,EAAIq3D,IAE9E/0D,KAAK20D,SAAWI,EAIlB,IAASr3D,EAAIsC,KAAK20D,QAAU,EAAGj3D,GAAKoI,EAAOpI,IACzCsC,KAAK00D,OAAO10D,KAAK60D,gBAAgBn3D,EAAIs3D,EAAM30D,SAAWL,KAAK00D,OAAO10D,KAAK60D,gBAAgBn3D,IAEzF,IAASA,EAAI,EAAGA,EAAIs3D,EAAM30D,OAAQ3C,IAChCsC,KAAK00D,OAAO10D,KAAK60D,gBAAgB/uD,EAAQpI,IAAMs3D,EAAMt3D,GAIvD,GAAIsC,KAAK20D,QAAUK,EAAM30D,OAASL,KAAKw0D,WAAY,CACjD,IAAMS,EAAej1D,KAAK20D,QAAUK,EAAM30D,OAAUL,KAAKw0D,WACzDx0D,KAAKm0D,aAAec,EACpBj1D,KAAK20D,QAAU30D,KAAKw0D,WACpBx0D,KAAKuzD,cAAchzD,KAAK00D,QAExBj1D,KAAK20D,SAAWK,EAAM30D,QAQnB,YAAAorC,UAAP,SAAiBuL,GACXA,EAAQh3C,KAAK20D,UACf3d,EAAQh3C,KAAK20D,SAEf30D,KAAKm0D,aAAend,EACpBh3C,KAAK20D,SAAW3d,EAChBh3C,KAAKuzD,cAAchzD,KAAKy2C,IAGnB,YAAArc,cAAP,SAAqB70B,EAAekxC,EAAezB,GACjD,KAAIyB,GAAS,GAAb,CAGA,GAAIlxC,EAAQ,GAAKA,GAAS9F,KAAK20D,QAC7B,MAAM,IAAIp8C,MAAM,+BAElB,GAAIzS,EAAQyvC,EAAS,EACnB,MAAM,IAAIh9B,MAAM,gDAGlB,GAAIg9B,EAAS,EAAG,CACd,IAAK,IAAI73C,EAAIs5C,EAAQ,EAAGt5C,GAAK,EAAGA,IAC9BsC,KAAKwY,IAAI1S,EAAQpI,EAAI63C,EAAQv1C,KAAKrB,IAAImH,EAAQpI,IAEhD,IAAMw3D,EAAgBpvD,EAAQkxC,EAAQzB,EAAUv1C,KAAK20D,QACrD,GAAIO,EAAe,EAEjB,IADAl1D,KAAK20D,SAAWO,EACTl1D,KAAK20D,QAAU30D,KAAKw0D,YACzBx0D,KAAK20D,UACL30D,KAAKm0D,cACLn0D,KAAKuzD,cAAchzD,KAAK,QAI5B,IAAS7C,EAAI,EAAGA,EAAIs5C,EAAOt5C,IACzBsC,KAAKwY,IAAI1S,EAAQpI,EAAI63C,EAAQv1C,KAAKrB,IAAImH,EAAQpI,MAW5C,YAAAm3D,gBAAR,SAAwBjzD,GACtB,OAAQ5B,KAAKm0D,YAAcvyD,GAAS5B,KAAKw0D,YAE7C,EApNA,GAAa,EAAAhE,gB,6BCuLb,SAAgBoC,EAA4B9uC,EAAqBpmB,EAAWiZ,GAE1E,GAAIjZ,IAAMomB,EAAMzjB,OAAS,EACvB,OAAOyjB,EAAMpmB,GAAG8c,mBAKlB,IAAM26C,GAAerxC,EAAMpmB,GAAG6b,WAAW5C,EAAO,IAAuC,IAAhCmN,EAAMpmB,GAAGgG,SAASiT,EAAO,GAC1Ey+C,EAA2D,IAA7BtxC,EAAMpmB,EAAI,GAAGgG,SAAS,GAC1D,OAAIyxD,GAAcC,EACTz+C,EAAO,EAETA,E,iDAtMT,wCAA6CmN,EAAkCuxC,EAAiBrF,EAAiBsF,EAAyBzE,GAKxI,IAFA,IAAMQ,EAAqB,GAElB58C,EAAI,EAAGA,EAAIqP,EAAMzjB,OAAS,EAAGoU,IAAK,CAEzC,IAAI/W,EAAI+W,EACJ6zB,EAAWxkB,EAAMnlB,MAAMjB,GAC3B,GAAK4qC,EAASvvB,UAAd,CAMA,IADA,IAAMi5C,EAA6B,CAACluC,EAAMnlB,IAAI8V,IACvC/W,EAAIomB,EAAMzjB,QAAUioC,EAASvvB,WAClCi5C,EAAa7xD,KAAKmoC,GAClBA,EAAWxkB,EAAMnlB,MAAMjB,GAKzB,GAAI43D,GAAmB7gD,GAAK6gD,EAAkB53D,EAC5C+W,GAAKu9C,EAAa3xD,OAAS,MAD7B,CAUA,IAJA,IAAImyD,EAAgB,EAChB53C,EAAUg4C,EAA4BZ,EAAcQ,EAAe6C,GACnE5C,EAAe,EACf93C,EAAS,EACN83C,EAAeT,EAAa3xD,QAAQ,CACzC,IAAMk1D,EAAuB3C,EAA4BZ,EAAcS,EAAc4C,GAC/EG,EAAoBD,EAAuB56C,EAC3C86C,EAAqBzF,EAAUp1C,EAC/B83C,EAAcnpD,KAAKsB,IAAI2qD,EAAmBC,GAEhDzD,EAAaQ,GAAe/3C,cAAcu3C,EAAaS,GAAe93C,EAAQC,EAAS83C,GAAa,IAEpG93C,GAAW83C,KACK1C,IACdwC,IACA53C,EAAU,IAEZD,GAAU+3C,KACK6C,IACb9C,IACA93C,EAAS,GAIK,IAAZC,GAAmC,IAAlB43C,GAC2C,IAA1DR,EAAaQ,EAAgB,GAAG9uD,SAASssD,EAAU,KACrDgC,EAAaQ,GAAe/3C,cAAcu3C,EAAaQ,EAAgB,GAAIxC,EAAU,EAAGp1C,IAAW,GAAG,GAEtGo3C,EAAaQ,EAAgB,GAAGr5C,QAAQ62C,EAAU,EAAGa,IAM3DmB,EAAaQ,GAAev4C,aAAaW,EAASo1C,EAASa,GAI3D,IADA,IAAI6E,EAAgB,EACX,EAAI1D,EAAa3xD,OAAS,EAAG,EAAI,IACpC,EAAImyD,GAAwD,IAAvCR,EAAa,GAAGx3C,oBADE,IAEzCk7C,IAMAA,EAAgB,IAClBrE,EAASlxD,KAAKsU,EAAIu9C,EAAa3xD,OAASq1D,GACxCrE,EAASlxD,KAAKu1D,IAGhBjhD,GAAKu9C,EAAa3xD,OAAS,IAE7B,OAAOgxD,GAQT,uCAA4CvtC,EAAkCutC,GAM5E,IALA,IAAMK,EAAmB,GAErBiE,EAAoB,EACpBC,EAAoBvE,EAASsE,GAC7BE,EAAoB,EACfn4D,EAAI,EAAGA,EAAIomB,EAAMzjB,OAAQ3C,IAChC,GAAIk4D,IAAsBl4D,EAAG,CAC3B,IAAMg4D,EAAgBrE,IAAWsE,GAGjC7xC,EAAM2wC,gBAAgBl0D,KAAK,CACzBqB,MAAOlE,EAAIm4D,EACX/qC,OAAQ4qC,IAGVh4D,GAAKg4D,EAAgB,EACrBG,GAAqBH,EACrBE,EAAoBvE,IAAWsE,QAE/BjE,EAAOvxD,KAAKzC,GAGhB,MAAO,CACLg0D,OAAM,EACNE,aAAciE,IAUlB,sCAA2C/xC,EAAkCgyC,GAG3E,IADA,IAAMC,EAA+B,GAC5Br4D,EAAI,EAAGA,EAAIo4D,EAAUz1D,OAAQ3C,IACpCq4D,EAAe51D,KAAK2jB,EAAMnlB,IAAIm3D,EAAUp4D,KAI1C,IAASA,EAAI,EAAGA,EAAIq4D,EAAe11D,OAAQ3C,IACzComB,EAAMtL,IAAI9a,EAAGq4D,EAAer4D,IAE9BomB,EAAMzjB,OAASy1D,EAAUz1D,QAiB3B,0CAA+C2xD,EAA4BqD,EAAiBrF,GAS1F,IARA,IAAMgG,EAA2B,GAC3BC,EAAcjE,EAAa9jB,KAAI,SAACnwC,EAAGL,GAAM,OAAAk1D,EAA4BZ,EAAct0D,EAAG23D,MAAUa,QAAO,SAACt2D,EAAGzB,GAAM,OAAAyB,EAAIzB,KAIvHwc,EAAS,EACTw7C,EAAU,EACVC,EAAiB,EACdA,EAAiBH,GAAa,CACnC,GAAIA,EAAcG,EAAiBpG,EAAS,CAE1CgG,EAAe71D,KAAK81D,EAAcG,GAClC,MAEFz7C,GAAUq1C,EACV,IAAMqG,EAAmBzD,EAA4BZ,EAAcmE,EAASd,GACxE16C,EAAS07C,IACX17C,GAAU07C,EACVF,KAEF,IAAMG,EAA8D,IAA/CtE,EAAamE,GAASzyD,SAASiX,EAAS,GACzD27C,GACF37C,IAEF,IAAM0wC,EAAaiL,EAAetG,EAAU,EAAIA,EAChDgG,EAAe71D,KAAKkrD,GACpB+K,GAAkB/K,EAGpB,OAAO2K,GAGT,iC,8ZCxMA,WAIA,cAWE,WACS37C,GADT,MAGE,cAAO,K,OAFA,EAAAA,OATD,EAAAiD,IAAco2C,EAAO6C,UACtB,EAAAC,YAAsB,EAIrB,EAAAC,WAAa,IAAI,EAAA71D,a,EAkB3B,OA1B4B,OAM1B,sBAAW,iBAAE,C,IAAb,WAA0B,OAAOZ,KAAKsd,K,gCAGtC,sBAAW,wBAAS,C,IAApB,WAAuC,OAAOtd,KAAKy2D,WAAWlxC,O,gCAQvD,YAAAnlB,QAAP,WACMJ,KAAKw2D,aAGTx2D,KAAKw2D,YAAa,EAClBx2D,KAAKqa,MAAQ,EAEbra,KAAKy2D,WAAWl2D,SAvBH,EAAAg2D,QAAU,EAyB3B,EA1BA,CAHA,KAG4Bz0D,YAAf,EAAA4xD,U,mfCJb,WACA,QAEA,aAGE,WACmC3iC,EACEqB,GADF,KAAArB,iBACE,KAAAqB,mBAqBvC,OAjBS,YAAAutB,UAAP,SAAiBp6B,EAA2CC,EAAsBM,EAAkBC,EAAkBI,GACpH,OAAO,EAAAw5B,UACLp6B,EACAC,EACAM,EACAC,EACA/lB,KAAKoyB,iBAAiBqK,aACtBz8B,KAAK+wB,eAAeyO,WAAWvZ,gBAC/BjmB,KAAK+wB,eAAeyO,WAAWtZ,iBAC/BC,IAIG,YAAAwR,iBAAP,SAAwBpS,EAAmBC,EAAsBM,EAAkBC,GACjF,IAAMK,EAASpmB,KAAK2/C,UAAUp6B,EAAOC,EAASM,EAAUC,GACxD,OAAO,EAAA4R,iBAAiBvR,IAxBfgQ,EAAY,GAIpB,MAAAtzB,gBACA,MAAAH,mBALQyzB,GAAb,GAAa,EAAAA,gB,mfCHb,WACA,OAEA,QAEMsgC,EAA8Cl4D,OAAOqa,OAAO,CAChE2gB,uBAAuB,EACvBqS,mBAAmB,EACnBhB,QAAQ,EACRZ,YAAY,IAGd,aAcE,WAEmB0sB,EACgBjmD,EACHkf,EACIjf,GAHjB,KAAAgmD,kBACgB,KAAAjmD,iBACH,KAAAkf,cACI,KAAAjf,kBAhB7B,KAAAqpB,qBAA+B,EAC/B,KAAA+R,gBAA0B,EAGzB,KAAAtd,QAAU,IAAI,EAAA7tB,aAEd,KAAAg2D,aAAe,IAAI,EAAAh2D,aAEnB,KAAA8tB,UAAY,IAAI,EAAA9tB,aAUtBZ,KAAKu5B,gBAAkB,EAAAj1B,MAAMoyD,GAoCjC,OAjDE,sBAAW,qBAAM,C,IAAjB,WAAsC,OAAO12D,KAAKyuB,QAAQlJ,O,gCAE1D,sBAAW,0BAAW,C,IAAtB,WAAyC,OAAOvlB,KAAK42D,aAAarxC,O,gCAElE,sBAAW,uBAAQ,C,IAAnB,WAAwC,OAAOvlB,KAAK0uB,UAAUnJ,O,gCAYvD,YAAA1I,MAAP,WACE7c,KAAKu5B,gBAAkB,EAAAj1B,MAAMoyD,IAGxB,YAAAxjC,iBAAP,SAAwBrtB,EAAcgxD,GAEpC,QAFoC,IAAAA,OAAA,IAEhC72D,KAAK2Q,gBAAgB6C,QAAQm7C,aAAjC,CAKA,IAAM9qC,EAAS7jB,KAAK0Q,eAAemT,OAC/BA,EAAOuI,QAAUvI,EAAOsI,OAC1BnsB,KAAK22D,kBAIHE,GACF72D,KAAK42D,aAAar2D,OAIpBP,KAAK4vB,YAAYiF,MAAM,iBAAiBhvB,EAAI,KAAK,WAAM,OAAAA,EAAKu/C,MAAM,IAAIlX,KAAI,SAAAle,GAAK,OAAAA,EAAElsB,WAAW,SAC5F9D,KAAKyuB,QAAQluB,KAAKsF,KAGb,YAAAixD,mBAAP,SAA0BjxD,GACpB7F,KAAK2Q,gBAAgB6C,QAAQm7C,eAGjC3uD,KAAK4vB,YAAYiF,MAAM,mBAAmBhvB,EAAI,KAAK,WAAM,OAAAA,EAAKu/C,MAAM,IAAIlX,KAAI,SAAAle,GAAK,OAAAA,EAAElsB,WAAW,SAC9F9D,KAAK0uB,UAAUnuB,KAAKsF,KAvDXkqB,EAAW,GAiBnB,MAAAlvB,gBACA,MAAAO,aACA,MAAAC,kBAnBQ0uB,GAAb,GAAa,EAAAA,e,ssBCZb,IAiBYgnC,EAjBZ,QAiBA,SAAYA,GACV,qBACA,mBACA,mBACA,qBACA,iBALF,CAAYA,EAAA,EAAAA,WAAA,EAAAA,SAAQ,KAQpB,IAAMC,EAAoD,CACxDniC,MAAOkiC,EAASE,MAChBC,KAAMH,EAASI,KACfr0C,KAAMi0C,EAASK,KACf7tB,MAAOwtB,EAASM,MAChBC,IAAKP,EAASQ,KAKhB,aAKE,WACoC5mD,GADpC,WACoC,KAAAA,kBAElC3Q,KAAKw3D,kBACLx3D,KAAK2Q,gBAAgBwhB,gBAAe,SAAA9yB,GACtB,aAARA,GACF,EAAKm4D,qBA6Cb,OAxCU,YAAAA,gBAAR,WACEx3D,KAAKy3D,UAAYT,EAAqBh3D,KAAK2Q,gBAAgB6C,QAAQwlB,WAG7D,YAAA0+B,wBAAR,SAAgCC,GAC9B,IAAK,IAAIj6D,EAAI,EAAGA,EAAIi6D,EAAet3D,OAAQ3C,IACR,mBAAtBi6D,EAAej6D,KACxBi6D,EAAej6D,GAAKi6D,EAAej6D,OAKjC,YAAAk6D,KAAR,SAAavwD,EAAewwD,EAAiBF,GAC3C33D,KAAK03D,wBAAwBC,GAC7BtwD,EAAKpJ,KAAI,MAAToJ,EAAI,GAAMwb,QAhCK,aAgCiBg1C,GAAYF,KAG9C,YAAA9iC,MAAA,SAAMgjC,G,IAAiB,wDACjB73D,KAAKy3D,WAAaV,EAASE,OAC7Bj3D,KAAK43D,KAAK/0C,QAAQkqB,IAAK8qB,EAASF,IAIpC,YAAAT,KAAA,SAAKW,G,IAAiB,wDAChB73D,KAAKy3D,WAAaV,EAASI,MAC7Bn3D,KAAK43D,KAAK/0C,QAAQq0C,KAAMW,EAASF,IAIrC,YAAA70C,KAAA,SAAK+0C,G,IAAiB,wDAChB73D,KAAKy3D,WAAaV,EAASK,MAC7Bp3D,KAAK43D,KAAK/0C,QAAQC,KAAM+0C,EAASF,IAIrC,YAAApuB,MAAA,SAAMsuB,G,IAAiB,wDACjB73D,KAAKy3D,WAAaV,EAASM,OAC7Br3D,KAAK43D,KAAK/0C,QAAQ0mB,MAAOsuB,EAASF,IArD3B9nC,EAAU,GAMlB,MAAAxuB,kBANQwuB,GAAb,GAAa,EAAAA,c,mfCnCb,WAEA,aASE,WACmCnf,GAAA,KAAAA,iBAEjC1Q,KAAK4pC,aAiCT,OAvCE,sBAAW,oBAAK,C,IAAhB,WAA6B,OAAO5pC,KAAKge,Q,gCACzC,sBAAW,kBAAG,C,IAAd,WAA2B,OAAOhe,KAAKse,M,gCAQhC,YAAAsrB,WAAP,WACE5pC,KAAKge,OAAShe,KAAK0Q,eAAemT,OAAOpP,EACzCzU,KAAKse,KAAOte,KAAK0Q,eAAemT,OAAOpP,GAGlC,YAAA21B,UAAP,SAAiB31B,GACXA,EAAIzU,KAAKge,OACXhe,KAAKge,OAASvJ,EACLA,EAAIzU,KAAKse,OAClBte,KAAKse,KAAO7J,IAIT,YAAAmmB,eAAP,SAAsB2f,EAAYE,GAChC,GAAIF,EAAKE,EAAI,CACX,IAAMhjC,EAAO8iC,EACbA,EAAKE,EACLA,EAAKhjC,EAEH8iC,EAAKv6C,KAAKge,SACZhe,KAAKge,OAASu8B,GAEZE,EAAKz6C,KAAKse,OACZte,KAAKse,KAAOm8B,IAIT,YAAAjN,aAAP,WACExtC,KAAK46B,eAAe,EAAG56B,KAAK0Q,eAAe4C,KAAO,IA3CzC8c,EAAe,GAUvB,MAAAvvB,iBAVQuvB,GAAb,GAAa,EAAAA,mB,qSCIb,WACA,QAEA,aAIE,a,IAAY,sDAFJ,KAAA0nC,SAAW,IAAI5/C,IAGrB,IAA4B,UAAA6/C,EAAA,eAAS,CAA1B,WAAC1nD,EAAA,KAAI2nD,EAAA,KACdh4D,KAAKwY,IAAInI,EAAI2nD,IAqBnB,OAjBE,YAAAx/C,IAAA,SAAOnI,EAA2B4nD,GAChC,IAAMjyD,EAAShG,KAAK83D,SAASn5D,IAAI0R,GAEjC,OADArQ,KAAK83D,SAASt/C,IAAInI,EAAI4nD,GACfjyD,GAGT,YAAAvE,QAAA,SAAQ4pB,GACNrrB,KAAK83D,SAASr2D,SAAQ,SAAC1C,EAAOM,GAAQ,OAAAgsB,EAAShsB,EAAKN,OAGtD,YAAAqZ,IAAA,SAAI/H,GACF,OAAOrQ,KAAK83D,SAAS1/C,IAAI/H,IAG3B,YAAA1R,IAAA,SAAO0R,GACL,OAAOrQ,KAAK83D,SAASn5D,IAAI0R,IAE7B,EA3BA,GAAa,EAAA6nD,oBA6Bb,iBAGE,aAFiB,KAAAC,UAA+B,IAAID,EAGlDl4D,KAAKm4D,UAAU3/C,IAAI,EAAArX,sBAAuBnB,MAiC9C,OA9BS,YAAAyvB,WAAP,SAAqBpf,EAA2B4nD,GAC9Cj4D,KAAKm4D,UAAU3/C,IAAInI,EAAI4nD,IAGlB,YAAAnrB,WAAP,SAAqBz8B,GACnB,OAAOrQ,KAAKm4D,UAAUx5D,IAAI0R,IAGrB,YAAAqf,eAAP,SAAyBvX,G,IAAW,wDAIlC,IAHA,IAAMigD,EAAsB,EAAAC,uBAAuBlgD,GAAMmgD,MAAK,SAAC76D,EAAGmL,GAAM,OAAAnL,EAAEmE,MAAQgH,EAAEhH,SAE9E22D,EAAqB,GACF,MAAAH,EAAA,eAAqB,CAAzC,IAAMI,EAAU,KACbR,EAAUh4D,KAAKm4D,UAAUx5D,IAAI65D,EAAWnoD,IAC9C,IAAK2nD,EACH,MAAM,IAAIz/C,MAAM,oBAAoBJ,EAAK9Z,KAAI,+BAA+Bm6D,EAAWnoD,GAAE,KAE3FkoD,EAAYp4D,KAAK63D,GAGnB,IAAMS,EAAqBL,EAAoB/3D,OAAS,EAAI+3D,EAAoB,GAAGx2D,MAAQ82D,EAAKr4D,OAGhG,GAAIq4D,EAAKr4D,SAAWo4D,EAClB,MAAM,IAAIlgD,MAAM,gDAAgDJ,EAAK9Z,KAAI,iBAAgBo6D,EAAqB,GAAC,mBAAmBC,EAAKr4D,OAAM,qBAI/I,OAAO,IAAI8X,EAAI,WAAJA,EAAI,aAAQugD,EAASH,OAEpC,EArCA,GAAa,EAAAhpC,wB,mfCvCb,WACA,OAMMopC,EAAyD,CAM7DC,KAAM,CACJ7/B,OAAQ,EACR8/B,SAAU,WAAM,WAOlBC,IAAK,CACH//B,OAAQ,EACR8/B,SAAU,SAAC7oC,GAET,OAAiB,IAAbA,EAAE8D,QAAiD,IAAb9D,EAAE0H,SAI5C1H,EAAEiI,MAAO,EACTjI,EAAElD,KAAM,EACRkD,EAAEoI,OAAQ,GACH,KAQX2gC,MAAO,CACLhgC,OAAQ,GACR8/B,SAAU,SAAC7oC,GAET,OAAiB,KAAbA,EAAE0H,SAWVshC,KAAM,CACJjgC,OAAQ,GACR8/B,SAAU,SAAC7oC,GAET,OAAiB,KAAbA,EAAE0H,QAAgD,IAAb1H,EAAE8D,SAW/CmlC,IAAK,CACHlgC,OACE,GAEF8/B,SAAU,SAAC7oC,GAAuB,YAWtC,SAASkpC,EAAUlpC,EAAoBmpC,GACrC,IAAIn1D,GAAQgsB,EAAEiI,KAAO,GAAiB,IAAMjI,EAAEoI,MAAQ,EAAkB,IAAMpI,EAAElD,IAAM,EAAgB,GAoBtG,OAnBiB,IAAbkD,EAAE8D,QACJ9vB,GAAQ,GACRA,GAAQgsB,EAAE0H,SAEV1zB,GAAmB,EAAXgsB,EAAE8D,OACK,EAAX9D,EAAE8D,SACJ9vB,GAAQ,IAEK,EAAXgsB,EAAE8D,SACJ9vB,GAAQ,KAEO,KAAbgsB,EAAE0H,OACJ1zB,GAAQ,GACc,IAAbgsB,EAAE0H,QAAkCyhC,IAG7Cn1D,GAAQ,IAGLA,EAGT,IAAMo1D,EAAIzzD,OAAOC,aAKXyzD,EAAwD,CAM5DC,QAAS,SAACtpC,GACR,IAAMtU,EAAS,CAACw9C,EAAUlpC,GAAG,GAAS,GAAIA,EAAEgI,IAAM,GAAIhI,EAAEpM,IAAM,IAK9D,OAAIlI,EAAO,GAAK,KAAOA,EAAO,GAAK,KAAOA,EAAO,GAAK,IAC7C,GAEF,MAAS09C,EAAE19C,EAAO,IAAM09C,EAAE19C,EAAO,IAAM09C,EAAE19C,EAAO,KAOzD69C,IAAK,SAACvpC,GACJ,IAAMiC,EAAsB,IAAbjC,EAAE0H,QAA8C,IAAb1H,EAAE8D,OAAoC,IAAM,IAC9F,MAAO,MAASolC,EAAUlpC,GAAG,GAAK,IAAIA,EAAEgI,IAAG,IAAIhI,EAAEpM,IAAMqO,IAoB3D,aAQE,WACmCvhB,EACFof,GAFjC,WACmC,KAAApf,iBACF,KAAAof,eATzB,KAAA0pC,WAAmD,GACnD,KAAAC,WAAkD,GAClD,KAAAC,gBAA0B,GAC1B,KAAAC,gBAA0B,GAC1B,KAAAC,kBAAoB,IAAI,EAAAh5D,aACxB,KAAAi5D,WAAqC,KAO3Cr7D,OAAO2b,KAAKw+C,GAAmBl3D,SAAQ,SAAApD,GAAQ,SAAKy7D,YAAYz7D,EAAMs6D,EAAkBt6D,OACxFG,OAAO2b,KAAKk/C,GAAmB53D,SAAQ,SAAApD,GAAQ,SAAK07D,YAAY17D,EAAMg7D,EAAkBh7D,OAExF2B,KAAK6c,QA6HT,OA1HS,YAAAi9C,YAAP,SAAmBz7D,EAAc27D,GAC/Bh6D,KAAKw5D,WAAWn7D,GAAQ27D,GAGnB,YAAAD,YAAP,SAAmB17D,EAAc47D,GAC/Bj6D,KAAKy5D,WAAWp7D,GAAQ47D,GAG1B,sBAAW,6BAAc,C,IAAzB,WACE,OAAOj6D,KAAK05D,iB,IAGd,SAA0Br7D,GACxB,IAAK2B,KAAKw5D,WAAWn7D,GACnB,MAAM,IAAIka,MAAM,qBAAqBla,EAAI,KAE3C2B,KAAK05D,gBAAkBr7D,EACvB2B,KAAK45D,kBAAkBr5D,KAAKP,KAAKw5D,WAAWn7D,GAAM06B,S,gCAGpD,sBAAW,6BAAc,C,IAAzB,WACE,OAAO/4B,KAAK25D,iB,IAGd,SAA0Bt7D,GACxB,IAAK2B,KAAKy5D,WAAWp7D,GACnB,MAAM,IAAIka,MAAM,qBAAqBla,EAAI,KAE3C2B,KAAK25D,gBAAkBt7D,G,gCAGlB,YAAAwe,MAAP,WACE7c,KAAKk5B,eAAiB,OACtBl5B,KAAK8rC,eAAiB,UACtB9rC,KAAK65D,WAAa,MAMpB,sBAAW,+BAAgB,C,IAA3B,WACE,OAAO75D,KAAK45D,kBAAkBr0C,O,gCAazB,YAAAwS,kBAAP,SAAyB/H,GAEvB,GAAIA,EAAEgI,IAAM,GAAKhI,EAAEgI,KAAOh4B,KAAK0Q,eAAeiG,MACvCqZ,EAAEpM,IAAM,GAAKoM,EAAEpM,KAAO5jB,KAAK0Q,eAAe4C,KAC/C,OAAO,EAIT,GAAiB,IAAb0c,EAAE8D,QAAiD,KAAb9D,EAAE0H,OAC1C,OAAO,EAET,GAAiB,IAAb1H,EAAE8D,QAAgD,KAAb9D,EAAE0H,OACzC,OAAO,EAET,GAAiB,IAAb1H,EAAE8D,SAAkD,IAAb9D,EAAE0H,QAAgD,IAAb1H,EAAE0H,QAChF,OAAO,EAQT,GAJA1H,EAAEgI,MACFhI,EAAEpM,MAGe,KAAboM,EAAE0H,QAAmC13B,KAAK65D,YAAc75D,KAAKk6D,eAAel6D,KAAK65D,WAAY7pC,GAC/F,OAAO,EAIT,IAAKhwB,KAAKw5D,WAAWx5D,KAAK05D,iBAAiBb,SAAS7oC,GAClD,OAAO,EAIT,IAAMmqC,EAASn6D,KAAKy5D,WAAWz5D,KAAK25D,iBAAiB3pC,GAYrD,OAXImqC,IAE2B,YAAzBn6D,KAAK25D,gBACP35D,KAAK8vB,aAAagnC,mBAAmBqD,GAErCn6D,KAAK8vB,aAAaoD,iBAAiBinC,GAAQ,IAI/Cn6D,KAAK65D,WAAa7pC,GAEX,GAGF,YAAAiJ,cAAP,SAAqBF,GACnB,MAAO,CACLqhC,QAAkB,EAATrhC,GACTshC,MAAgB,EAATthC,GACPuhC,QAAkB,EAATvhC,GACTwhC,QAAkB,EAATxhC,GACTP,SAAmB,GAATO,KAIN,YAAAmhC,eAAR,SAAuBM,EAAqBC,GAC1C,OAAID,EAAGxiC,MAAQyiC,EAAGziC,MACdwiC,EAAG52C,MAAQ62C,EAAG72C,MACd42C,EAAG1mC,SAAW2mC,EAAG3mC,SACjB0mC,EAAG9iC,SAAW+iC,EAAG/iC,SACjB8iC,EAAGviC,OAASwiC,EAAGxiC,OACfuiC,EAAG1tC,MAAQ2tC,EAAG3tC,KACd0tC,EAAGpiC,QAAUqiC,EAAGriC,YA1IXlI,EAAgB,GASxB,MAAArvB,gBACA,MAAAG,eAVQkvB,GAAb,GAAa,EAAAA,oB,8ECnJb,IAiBA,aAME,WAAoBwqC,GAAA,KAAAA,UALZ,KAAAhqC,aAAwC,GACxC,KAAAiqC,WAA2C,GAC3C,KAAAC,aAAe,EACf,KAAAC,cAAgB,EAwE1B,OApES,YAAAz9B,UAAP,SAAiBv3B,GAGf,GAAI7F,KAAK0wB,aAAarwB,OAAQ,CAC5B,IAAK,IAAI3C,EAAIsC,KAAK66D,cAAen9D,EAAIsC,KAAK0wB,aAAarwB,SAAU3C,EAAG,CAClE,IAAM,EAAOsC,KAAK0wB,aAAahzB,GACzBo9D,EAAK96D,KAAK26D,WAAWj9D,GAC3BsC,KAAK06D,QAAQ,GACTI,GAAIA,IAGV96D,KAAK0wB,aAAe,GACpB1wB,KAAK26D,WAAa,GAClB36D,KAAK46D,aAAe,EAEpB56D,KAAK66D,cAAgB,WAGvB76D,KAAK06D,QAAQ70D,IAGR,YAAAulB,MAAP,SAAavlB,EAA2BwlB,GAAxC,WACE,GAAIrrB,KAAK46D,aA/Ca,IAgDpB,MAAM,IAAIriD,MAAM,+DAIbvY,KAAK0wB,aAAarwB,SACrBL,KAAK66D,cAAgB,EACrBv+B,YAAW,WAAM,SAAKy+B,kBAGxB/6D,KAAK46D,cAAgB/0D,EAAKxF,OAC1BL,KAAK0wB,aAAavwB,KAAK0F,GACvB7F,KAAK26D,WAAWx6D,KAAKkrB,IAGb,YAAA0vC,YAAV,WAEE,IAFF,WACQC,EAAYphB,KAAKC,MAChB75C,KAAK0wB,aAAarwB,OAASL,KAAK66D,eAAe,CACpD,IAAMh1D,EAAO7F,KAAK0wB,aAAa1wB,KAAK66D,eAC9BC,EAAK96D,KAAK26D,WAAW36D,KAAK66D,eAOhC,GANA76D,KAAK66D,gBAEL76D,KAAK06D,QAAQ70D,GACb7F,KAAK46D,cAAgB/0D,EAAKxF,OACtBy6D,GAAIA,IAEJlhB,KAAKC,MAAQmhB,GAjEE,GAkEjB,MAGAh7D,KAAK0wB,aAAarwB,OAASL,KAAK66D,eAG9B76D,KAAK66D,cAjEuB,KAkE9B76D,KAAK0wB,aAAe1wB,KAAK0wB,aAAa3mB,MAAM/J,KAAK66D,eACjD76D,KAAK26D,WAAa36D,KAAK26D,WAAW5wD,MAAM/J,KAAK66D,eAC7C76D,KAAK66D,cAAgB,GAEvBv+B,YAAW,WAAM,SAAKy+B,gBAAe,KAErC/6D,KAAK0wB,aAAe,GACpB1wB,KAAK26D,WAAa,GAClB36D,KAAK46D,aAAe,EACpB56D,KAAK66D,cAAgB,IAG3B,EA5EA,GAAa,EAAAlqC,e,8ECxBb,WAEA,aAeE,WACmBjgB,GAAA,KAAAA,iBAZX,KAAAuqD,eAAkC,GAGlC,KAAAC,sBAAuC,GAGvC,KAAAhhB,aAAe,IAAI,EAAAt5C,aAEnB,KAAAw5C,aAAe,IAAI,EAAAx5C,aA2N7B,OA5NE,sBAAW,0BAAW,C,IAAtB,WAAoD,OAAOZ,KAAKk6C,aAAa30B,O,gCAE7E,sBAAW,0BAAW,C,IAAtB,WAAoD,OAAOvlB,KAAKo6C,aAAa70B,O,gCAQtE,YAAAyE,qBAAP,SAA4BC,GAA5B,WAEE,OADAjqB,KAAKi7D,eAAe96D,KAAK8pB,GAClB,CACL7pB,QAAS,WAEP,IAAM+6D,EAAgB,EAAKF,eAAep5D,QAAQooB,IAE3B,IAAnBkxC,GACF,EAAKF,eAAe36D,OAAO66D,EAAe,MAM3C,YAAApkC,YAAP,SAAmBvR,EAAsB41C,EAA6BC,GACpEr7D,KAAKi7C,SAAWz1B,EAChBxlB,KAAKm2B,cAAgBilC,EACrBp7D,KAAK+wB,eAAiBsqC,EAEtBr7D,KAAKi7C,SAASrzC,iBAAiB,YAAa5H,KAAKq+C,aAAa/+C,KAAKU,OACnEA,KAAKi7C,SAASrzC,iBAAiB,QAAS5H,KAAKylD,aAAanmD,KAAKU,QAGzD,YAAAq+C,aAAR,SAAqB94B,GAGnB,GAFAvlB,KAAKs7D,gBAAkB/1C,EAElBvlB,KAAKi7C,UAAaj7C,KAAKm2B,cAA5B,CAIA,IAAM8K,EAAWjhC,KAAKu7D,wBAAwBh2C,EAAOvlB,KAAKi7C,SAAUj7C,KAAKm2B,eAEpE8K,IAIAjhC,KAAKw7D,iBAAoBv6B,EAASzsB,IAAMxU,KAAKw7D,gBAAgBhnD,GAAKysB,EAASxsB,IAAMzU,KAAKw7D,gBAAgB/mD,IACzGzU,KAAKmmD,SAASllB,GACdjhC,KAAKw7D,gBAAkBv6B,MAInB,YAAAklB,SAAR,SAAiBllB,GACXjhC,KAAKy7D,aAEcz7D,KAAK07D,gBAAgB17D,KAAKy7D,aAAcx6B,KAI3DjhC,KAAKq6C,oBACLr6C,KAAK27D,YAAY16B,IAGnBjhC,KAAK27D,YAAY16B,IAIb,YAAA06B,YAAR,SAAoB16B,GAApB,WACQ26B,EAAkD,IAAI1jD,IACxD2jD,GAAe,EAGnB77D,KAAKi7D,eAAex5D,SAAQ,SAACwoB,EAAcvsB,GACzCusB,EAAa6xC,YAAY76B,GAAU,SAAC86B,GAClCH,EAAgBpjD,IAAI9a,EAAGq+D,GAIvB,IADA,IAAIC,GAAgB,EACX99C,EAAI,EAAGA,EAAIxgB,EAAGwgB,IAChB09C,EAAgBxjD,IAAI8F,KAAM09C,EAAgBj9D,IAAIuf,KACjD89C,GAAgB,GAWpB,IANKA,GAAiBD,IACpBF,GAAe,EACf,EAAKI,eAAeF,IAIlBH,EAAgBr1D,OAAS,EAAK00D,eAAe56D,SAAWw7D,EAE1D,IAAS39C,EAAI,EAAGA,EAAI09C,EAAgBr1D,KAAM2X,IAAK,CAC7C,IAAMg+C,EAAcN,EAAgBj9D,IAAIuf,GACxC,GAAIg+C,EAAa,CACf,EAAKD,eAAeC,GACpB,eAQJ,YAAAzW,aAAR,SAAqBlgC,GACnB,GAAKvlB,KAAKi7C,UAAaj7C,KAAKm2B,eAAkBn2B,KAAKy7D,aAAnD,CAIA,IAAMx6B,EAAWjhC,KAAKu7D,wBAAwBh2C,EAAOvlB,KAAKi7C,SAAUj7C,KAAKm2B,eAEpE8K,GAIDjhC,KAAK07D,gBAAgB17D,KAAKy7D,aAAcx6B,IAC1CjhC,KAAKy7D,aAAaU,SAAS52C,EAAOvlB,KAAKy7D,aAAa/2C,QAIhD,YAAA21B,kBAAR,SAA0B1nC,EAAmBC,GACtC5S,KAAKi7C,UAAaj7C,KAAKy7D,cAAiBz7D,KAAKs7D,mBAK7C3oD,IAAaC,GAAW5S,KAAKy7D,aAAap2C,MAAMvf,MAAM2O,GAAK9B,GAAY3S,KAAKy7D,aAAap2C,MAAMtf,IAAI0O,GAAK7B,KAC3G5S,KAAKo8D,WAAWp8D,KAAKi7C,SAAUj7C,KAAKy7D,aAAcz7D,KAAKs7D,iBACvDt7D,KAAKy7D,kBAAe96D,EACpBX,KAAKk7D,sBAAsBz5D,SAAQ,SAAA1D,GAAK,OAAAA,EAAEqC,aAC1CJ,KAAKk7D,sBAAwB,KAIzB,YAAAe,eAAR,SAAuBF,GAAvB,WACE,GAAK/7D,KAAKi7C,UAAaj7C,KAAKs7D,iBAAoBt7D,KAAKm2B,cAArD,CAIA,IAAM8K,EAAWjhC,KAAKu7D,wBAAwBv7D,KAAKs7D,gBAAiBt7D,KAAKi7C,SAAUj7C,KAAKm2B,eAEnF8K,GAKDjhC,KAAK07D,gBAAgBK,EAAM96B,KAC7BjhC,KAAKy7D,aAAeM,EACpB/7D,KAAKq8D,WAAWr8D,KAAKi7C,SAAU8gB,EAAM/7D,KAAKs7D,iBAGtCt7D,KAAK+wB,gBACP/wB,KAAKk7D,sBAAsB/6D,KAAKH,KAAK+wB,eAAepI,UAAS,SAAAqH,GAC3D,EAAKqqB,kBAAkBrqB,EAAElqB,MAAQ,EAAI,EAAK4K,eAAemT,OAAOsI,MAAO6D,EAAEjqB,IAAM,EAAI,EAAK2K,eAAemT,OAAOsI,cAM5G,YAAAkwC,WAAV,SAAqB72C,EAAsBu2C,EAAax2C,GACtD,IAAMF,EAAQ02C,EAAK12C,MACbi3C,EAAet8D,KAAK0Q,eAAemT,OAAOsI,MAEhDnsB,KAAKk6C,aAAa35C,KAAKP,KAAK09C,sBAAsBr4B,EAAMvf,MAAM0O,EAAI,EAAG6Q,EAAMvf,MAAM2O,EAAI6nD,EAAe,EAAGj3C,EAAMtf,IAAIyO,EAAG6Q,EAAMtf,IAAI0O,EAAI6nD,EAAe,OAAG37D,IACpJ6kB,EAAQ9T,UAAUC,IAAI,wBAElBoqD,EAAKQ,OACPR,EAAKQ,MAAMh3C,EAAOw2C,EAAKr3C,OAIjB,YAAA03C,WAAV,SAAqB52C,EAAsBu2C,EAAax2C,GACtD,IAAMF,EAAQ02C,EAAK12C,MACbi3C,EAAet8D,KAAK0Q,eAAemT,OAAOsI,MAEhDnsB,KAAKo6C,aAAa75C,KAAKP,KAAK09C,sBAAsBr4B,EAAMvf,MAAM0O,EAAI,EAAG6Q,EAAMvf,MAAM2O,EAAI6nD,EAAe,EAAGj3C,EAAMtf,IAAIyO,EAAG6Q,EAAMtf,IAAI0O,EAAI6nD,EAAe,OAAG37D,IACpJ6kB,EAAQ9T,UAAU4hB,OAAO,wBAErByoC,EAAKS,OACPT,EAAKS,MAAMj3C,EAAOw2C,EAAKr3C,OASnB,YAAAg3C,gBAAR,SAAwBK,EAAa96B,GACnC,IAAMw7B,EAAWV,EAAK12C,MAAMvf,MAAM2O,IAAMsnD,EAAK12C,MAAMtf,IAAI0O,EACjDioD,EAAkBX,EAAK12C,MAAMvf,MAAM2O,EAAIwsB,EAASxsB,EAChDkoD,EAAiBZ,EAAK12C,MAAMtf,IAAI0O,EAAIwsB,EAASxsB,EAInD,OAASgoD,GAAYV,EAAK12C,MAAMvf,MAAM0O,GAAKysB,EAASzsB,GAAKunD,EAAK12C,MAAMtf,IAAIyO,GAAKysB,EAASzsB,GACnFkoD,GAAmBX,EAAK12C,MAAMtf,IAAIyO,GAAKysB,EAASzsB,GAChDmoD,GAAkBZ,EAAK12C,MAAMvf,MAAM0O,GAAKysB,EAASzsB,GACjDkoD,GAAmBC,IACpBZ,EAAK12C,MAAMvf,MAAM2O,GAAKwsB,EAASxsB,GAC/BsnD,EAAK12C,MAAMtf,IAAI0O,GAAKwsB,EAASxsB,GAOzB,YAAA8mD,wBAAR,SAAgCh2C,EAAmBC,EAAsB41C,GACvE,IAAMh1C,EAASg1C,EAAazb,UAAUp6B,EAAOC,EAASxlB,KAAK0Q,eAAeiG,KAAM3W,KAAK0Q,eAAe4C,MACpG,GAAK8S,EAIL,MAAO,CAAE5R,EAAG4R,EAAO,GAAI3R,EAAG2R,EAAO,GAAKpmB,KAAK0Q,eAAemT,OAAOsI,QAG3D,YAAAuxB,sBAAR,SAA8BpD,EAAYC,EAAYG,EAAYD,EAAYv3C,GAC5E,MAAO,CAAEo3C,GAAE,EAAEC,GAAE,EAAEG,GAAE,EAAED,GAAE,EAAE9jC,KAAM3W,KAAK0Q,eAAeiG,KAAMzT,GAAE,IAE/D,EAvOA,GAAa,EAAA2uB,c,8ECJb,iBAGE,WACUwL,GAAA,KAAAA,YAOZ,OAHE,sBAAW,wBAAS,C,IAApB,WACE,OAAO7rB,SAASorD,gBAAkB58D,KAAKq9B,WAAa7rB,SAASqrD,Y,gCAEjE,EAXA,GAAa,EAAApnC,sB,8ECFb,WACA,QAGA,aAOE,aANQ,KAAAqnC,WAAuDt+D,OAAOY,OAAO,MACrE,KAAA2f,QAAkB,GAElB,KAAAg+C,UAAY,IAAI,EAAAn8D,aAItB,IAAMo8D,EAAkB,IAAI,EAAAC,UAC5Bj9D,KAAK0B,SAASs7D,GACdh9D,KAAK+e,QAAUi+C,EAAgB9uC,QAC/BluB,KAAKk9D,gBAAkBF,EA2D3B,OAjEE,sBAAW,uBAAQ,C,IAAnB,WAAwC,OAAOh9D,KAAK+8D,UAAUx3C,O,gCAS9D,sBAAW,uBAAQ,C,IAAnB,WACE,OAAO/mB,OAAO2b,KAAKna,KAAK88D,a,gCAG1B,sBAAW,4BAAa,C,IAAxB,WACE,OAAO98D,KAAK+e,S,IAGd,SAAyBmP,GACvB,IAAKluB,KAAK88D,WAAW5uC,GACnB,MAAM,IAAI3V,MAAM,4BAA4B2V,EAAO,KAErDluB,KAAK+e,QAAUmP,EACfluB,KAAKk9D,gBAAkBl9D,KAAK88D,WAAW5uC,GACvCluB,KAAK+8D,UAAUx8D,KAAK2tB,I,gCAGf,YAAAxsB,SAAP,SAAgBosB,GACd9tB,KAAK88D,WAAWhvC,EAASI,SAAWJ,GAM/B,YAAAuc,QAAP,SAAe8yB,GACb,OAAOn9D,KAAKk9D,gBAAgB7yB,QAAQ8yB,IAG/B,YAAA/f,mBAAP,SAA0Bv9C,GAGxB,IAFA,IAAImG,EAAS,EACP3F,EAASR,EAAEQ,OACR3C,EAAI,EAAGA,EAAI2C,IAAU3C,EAAG,CAC/B,IAAIsG,EAAOnE,EAAEiE,WAAWpG,GAExB,GAAI,OAAUsG,GAAQA,GAAQ,MAAQ,CACpC,KAAMtG,GAAK2C,EAMT,OAAO2F,EAAShG,KAAKqqC,QAAQrmC,GAE/B,IAAMC,EAASpE,EAAEiE,WAAWpG,GAGxB,OAAUuG,GAAUA,GAAU,MAChCD,EAAyB,MAAjBA,EAAO,OAAkBC,EAAS,MAAS,MAEnD+B,GAAUhG,KAAKqqC,QAAQpmC,GAG3B+B,GAAUhG,KAAKqqC,QAAQrmC,GAEzB,OAAOgC,GAEX,EAtEA,GAAa,EAAAqqB,kB,8ECJb,IA0DIod,EA1DJ,QAIM2vB,EAAgB,CACpB,CAAC,IAAQ,KAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MA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","file":"xterm.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 32);\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: any;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n\n  // TODO: Move resize event here\n\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): {[event: string]: boolean};\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: any;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: any;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n  readonly charsets: ReadonlyArray<ICharset>;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: any;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IConstructorSignature0<T> {\n  new(...services: { serviceBrand: any }[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n  new(first: A1, ...services: { serviceBrand: any }[]): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n  new(first: A1, second: A2, ...services: { serviceBrand: any }[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n  new(first: A1, second: A2, third: A3, ...services: { serviceBrand: any }[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, ...services: { serviceBrand: any }[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: { serviceBrand: any }[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: { serviceBrand: any }[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: { serviceBrand: any }[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: { serviceBrand: any }[]): T;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n\n  createInstance<T>(ctor: IConstructorSignature0<T>): T;\n  createInstance<A1, T>(ctor: IConstructorSignature1<A1, T>, first: A1): T;\n  createInstance<A1, A2, T>(ctor: IConstructorSignature2<A1, A2, T>, first: A1, second: A2): T;\n  createInstance<A1, A2, A3, T>(ctor: IConstructorSignature3<A1, A2, A3, T>, first: A1, second: A2, third: A3): T;\n  createInstance<A1, A2, A3, A4, T>(ctor: IConstructorSignature4<A1, A2, A3, A4, T>, first: A1, second: A2, third: A3, fourth: A4): T;\n  createInstance<A1, A2, A3, A4, A5, T>(ctor: IConstructorSignature5<A1, A2, A3, A4, A5, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5): T;\n  createInstance<A1, A2, A3, A4, A5, A6, T>(ctor: IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6): T;\n  createInstance<A1, A2, A3, A4, A5, A6, A7, T>(ctor: IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7): T;\n  createInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8): T;\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: any;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: any;\n\n  readonly options: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n\n  setOption<T>(key: string, value: T): void;\n  getOption<T>(key: string): T | undefined;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\nexport type RendererType = 'dom' | 'canvas';\n\nexport interface IPartialTerminalOptions {\n  allowTransparency?: boolean;\n  bellSound?: string;\n  bellStyle?: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols?: number;\n  cursorBlink?: boolean;\n  cursorStyle?: 'block' | 'underline' | 'bar';\n  cursorWidth?: number;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  logLevel?: LogLevel;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  rendererType?: RendererType;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollSensitivity?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  wordSeparator?: string;\n  windowOptions?: IWindowOptions;\n}\n\nexport interface ITerminalOptions {\n  allowTransparency: boolean;\n  bellSound: string;\n  bellStyle: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols: number;\n  cursorBlink: boolean;\n  cursorStyle: 'block' | 'underline' | 'bar';\n  cursorWidth: number;\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fastScrollModifier: 'alt' | 'ctrl' | 'shift' | undefined;\n  fastScrollSensitivity: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  minimumContrastRatio: number;\n  rendererType: RendererType;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  scrollSensitivity: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  windowOptions: IWindowOptions;\n  wordSeparator: string;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  convertEol: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selection?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    this._disposables.forEach(d => d.dispose());\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   */\n  public register<T extends IDisposable>(d: T): void {\n    this._disposables.push(d);\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..31 (32th bit unused)\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 4 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: any;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: any;\n\n  readonly isFocused: boolean;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: any;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: any;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  refreshRows(start: number, end: number): void;\n  resize(cols: number, rows: number): void;\n  changeOptions(): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n  registerCharacterJoiner(handler: CharacterJoinerHandler): number;\n  deregisterCharacterJoiner(joinerId: number): boolean;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: any;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRedrawRequest: IEvent<ISelectionRedrawRequestEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  isClickInSelection(event: MouseEvent): boolean;\n  selectWordAtCursor(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n}\n\nexport const ISoundService = createDecorator<ISoundService>('SoundService');\nexport interface ISoundService {\n  serviceBrand: any;\n\n  playBellSound(): void;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content: number = 0;\n  public fg: number = 0;\n  public bg: number = 0;\n  public combinedData: string = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n  static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    return newObj;\n  }\n\n  // data\n  public fg: number = 0;\n  public bg: number = 0;\n\n  // flags\n  public isInverse(): number   { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number      { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number     { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number    { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number       { return this.bg & BgFlags.DIM; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF)) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF)) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  useCapture?: boolean\n): IDisposable {\n  node.addEventListener(type, handler, useCapture);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, useCapture);\n    }\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor } from 'browser/Types';\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    const a = (fg.rgba & 0xFF) / 255;\n    if (a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    const r = bgR + Math.round((fgR - bgR) * a);\n    const g = bgG + Math.round((fgG - bgG) * a);\n    const b = bgB + Math.round((fgB - bgB) * a);\n    const css = channels.toCss(r, g, b);\n    const rgba = channels.toRgba(r, g, b);\n    return { css, rgba };\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    const [r, g, b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: rgbaColor\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  export function toColor(css: string): IColor {\n    return {\n      css,\n      rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        return reduceLuminance(bgRgba, fgRgba, ratio);\n      }\n      return increaseLuminance(bgRgba, fgRgba, ratio);\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number): IColor {\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = !!~userAgent.indexOf('Firefox');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = contains(['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'], platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = contains(['Windows', 'Win16', 'Win32', 'WinCE'], platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n\n/**\n * Return if the given array contains the given element\n * @param arr The array to search for the given element.\n * @param el The element to look for into the array\n */\nfunction contains(arr: any[], el: any): boolean {\n  return arr.indexOf(el) >= 0;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRenderLayer } from 'browser/renderer/Types';\nimport { ICellData } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, Attributes } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from 'browser/renderer/atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { channels, color, rgba } from 'browser/Color';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: BaseCharAtlas | undefined;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    private _rendererId: number,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    this._container.removeChild(this._canvas);\n    this._charAtlas?.dispose();\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', {alpha: this._alpha}));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(): void {}\n  public onBlur(): void {}\n  public onFocus(): void {}\n  public onCursorMove(): void {}\n  public onGridChanged(startRow: number, endRow: number): void {}\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean = false): void {}\n\n  public setColors(colorSet: IColorSet): void {\n    this._refreshCharAtlas(colorSet);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._colors);\n    this.onGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(this._optionsService.options, this._rendererId, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._colors);\n  }\n\n  public abstract reset(): void;\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      width * this._scaledCellWidth,\n      height * this._scaledCellHeight);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      window.devicePixelRatio * width,\n      this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n      x * this._scaledCellWidth + window.devicePixelRatio / 2,\n      y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n      width * this._scaledCellWidth - window.devicePixelRatio,\n      (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = 'middle';\n    this._clipRow(y);\n    this._ctx.fillText(\n      cell.getChars(),\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n    const contrastColor = this._getContrastColor(cell);\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (contrastColor || cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(cell, x, y, contrastColor);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n    const atlasDidDraw = this._charAtlas && this._charAtlas.draw(\n      this._ctx,\n      this._currentGlyphIdentifier,\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop\n    );\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(cell: ICellData, x: number, y: number, fgOverride?: IColor): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(!!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = 'middle';\n\n    if (cell.isInverse()) {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isBgDefault()) {\n        this._ctx.fillStyle = color.opaque(this._colors.background).css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        let bg = cell.getBgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n          bg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[bg].css;\n      }\n    } else {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._ctx.fillText(\n      cell.getChars(),\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n    this._ctx.restore();\n  }\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      0,\n      y * this._scaledCellHeight,\n      this._bufferService.cols * this._scaledCellWidth,\n      this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.options.fontWeightBold : this._optionsService.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.options.fontSize * window.devicePixelRatio}px ${this._optionsService.options.fontFamily}`;\n  }\n\n  private _getContrastColor(cell: CellData): IColor | undefined {\n    if (this._optionsService.options.minimumContrastRatio === 1) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const adjustedColor = this._colors.contrastCache.getColor(cell.bg, cell.fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    let fgColor = cell.getFgColor();\n    let fgColorMode = cell.getFgColorMode();\n    let bgColor = cell.getBgColor();\n    let bgColorMode = cell.getBgColorMode();\n    const isInverse = !!cell.isInverse();\n    const isBold = !!cell.isInverse();\n    if (isInverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, isInverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, isInverse, isBold);\n    const result = rgba.ensureContrastRatio(bgRgba, fgRgba, this._optionsService.options.minimumContrastRatio);\n\n    if (!result) {\n      this._colors.contrastCache.setColor(cell.bg, cell.fg, null);\n      return undefined;\n    }\n\n    const color: IColor = {\n      css: channels.toCss(\n        (result >> 24) & 0xFF,\n        (result >> 16) & 0xFF,\n        (result >> 8) & 0xFF\n      ),\n      rgba: result\n    };\n    this._colors.contrastCache.setColor(cell.bg, cell.fg, color);\n\n    return color;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._colors.ansi[bgColor].rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.foreground.rgba;\n        }\n        return this._colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._optionsService.options.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._colors.ansi[fgColor].rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.background.rgba;\n        }\n        return this._colors.foreground.rgba;\n    }\n  }\n}\n\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number): void {\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0);\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0);\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0);\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0);\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0);\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0);\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | null } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | null = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = null;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (values[0] instanceof Array) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (value instanceof Array) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n\n  public addHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setHandler(ident: number, handler: IOscHandler): void {\n    this._handlers[ident] = [handler];\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => {};\n  }\n\n  public reset(): void {\n    // cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      this.end(false);\n    }\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = handlers.length - 1; j >= 0; j--) {\n        handlers[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = handlers.length - 1; j >= 0; j--) {\n        handlers[j].put(data, start, end);\n      }\n    }\n  }\n\n  private _end(success: boolean): void {\n    // other than the old code we always have to call .end\n    // to keep the bubbling we use `success` to indicate\n    // whether a handler should execute\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'END', success);\n    } else {\n      let j = handlers.length - 1;\n      for (; j >= 0; j--) {\n        if (handlers[j].end(success) !== false) {\n          break;\n        }\n      }\n      j--;\n      // cleanup left over handlers\n      for (; j >= 0; j--) {\n        handlers[j].end(false);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._id = -1;\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean): void {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n      this._end(success);\n    }\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => any) {}\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): any {\n    let ret;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => {};\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => {};\n  }\n\n  public addHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public setHandler(ident: number, handler: IDcsHandler): void {\n    this._handlers[ident] = [handler];\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    if (this._active.length) {\n      this.unhook(false);\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let j = this._active.length - 1;\n      for (; j >= 0; j--) {\n        if (this._active[j].unhook(success) !== false) {\n          break;\n        }\n      }\n      j--;\n      // cleanup left over handlers\n      for (; j >= 0; j--) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams | undefined;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => any) {}\n\n  public hook(params: IParams): void {\n    this._params = params.clone();\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): any {\n    let ret;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params ? this._params : new Params());\n    }\n    this._params = undefined;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DynamicCharAtlas } from 'browser/renderer/atlas/DynamicCharAtlas';\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: number[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireCharAtlas(\n  options: ITerminalOptions,\n  rendererId: number,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, options, colors);\n\n  // Check to see if the renderer already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(rendererId);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the renderer from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the renderer to the cache entry and return\n      entry.ownedBy.push(rendererId);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [rendererId]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n */\nexport function removeTerminalFromCache(rendererId: number): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(rendererId);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only renderer\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet, IPartialColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, options: ITerminalOptions, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors = <IPartialColorSet>{\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: undefined,\n    cursorAccent: undefined,\n    selection: undefined,\n    // For the static char atlas, we only use the first 16 colors, but we need all 256 for the\n    // dynamic character atlas.\n    ansi: colors.ansi.slice(0, 16)\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColor, IColorSet, IColorContrastCache } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\nimport { channels, color, css } from 'browser/Color';\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS. Do not mutate DEFAULT_ANSI_COLORS, instead make a copy\n// and mutate that.\nexport const DEFAULT_ANSI_COLORS = (() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})();\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n  private _contrastCache: IColorContrastCache;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this._contrastCache = new ColorContrastCache();\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selection: DEFAULT_SELECTION,\n      selectionOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n  }\n\n  public onOptionsChange(key: string): void {\n    if (key === 'minimumContrastRatio') {\n      this._contrastCache.clear();\n    }\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selection = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.selectionOpaque = color.blend(this.colors.background, this.colors.selection);\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    // Clear our the cache\n    this._contrastCache.clear();\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    // Check if the printed color was transparent\n    if (data[3] !== 0xFF) {\n      if (!allowTransparency) {\n        // Ideally we'd just ignore the alpha channel, but...\n        //\n        // Browsers may not give back exactly the same RGB values we put in, because most/all\n        // convert the color to a pre-multiplied representation. getImageData converts that back to\n        // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n        // on their own.\n        //\n        // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n        // into 0x00000000.\n        //\n        // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n        // pixels that have just been set using putImageData() might be returned to an equivalent\n        // getImageData() as different values.\"\n        // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n        //\n        // So let's just use the fallback color in this case instead.\n        console.warn(\n          `Color: ${css} is using transparency, but allowTransparency is false. ` +\n          `Using fallback ${fallback.css}.`\n        );\n        return fallback;\n      }\n\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // the color value has alpha less than 1.0, and the string is the color value in the CSS rgba()\n      const [r, g, b, a] = this._ctx.fillStyle.substring(5, this._ctx.fillStyle.length - 1).split(',').map(component => Number(component));\n      const alpha = Math.round(a * 255);\n      const rgba: number = channels.toRgba(r, g, b, alpha);\n      return {\n        rgba,\n        css\n      };\n    }\n\n    return {\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // if it has alpha equal to 1.0, then the string is a lowercase six-digit hex value, prefixed with a \"#\" character\n      css: this._ctx.fillStyle,\n      rgba: channels.toRgba(data[0], data[1], data[2], data[3])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoinerRegistry, ICharacterJoiner } from 'browser/renderer/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerRegistry implements ICharacterJoinerRegistry {\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(private _bufferService: IBufferService) { }\n\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    const joinedRanges: [number, number][] = this._characterJoiners[0].handler(text);\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      const joinerRanges = this._characterJoiners[i].handler(text);\n      for (let j = 0; j < joinerRanges.length; j++) {\n        CharacterJoinerRegistry._mergeRanges(joinedRanges, joinerRanges[j]);\n      }\n    }\n    this._stringRangesToCellRanges(joinedRanges, lineData, startCol);\n    return joinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  return [event.clientX - rect.left, event.clientY - rect.top];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IDisposable {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public refresh(rowStart: number, rowEnd: number, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    this._rowStart = Math.max(this._rowStart, 0);\n    this._rowEnd = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Run render callback\n    this._renderCallback(this._rowStart, this._rowEnd);\n\n    // Reset debouncer\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n    this._animationFrame = undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._resolutionMediaMatchList || !this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] ? clone(val[key], depth - 1) : val[key]);\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, ITerminalOptions, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi, IParser, IFunctionIdentifier, ILinkProvider, IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\nimport { ITerminal } from '../Types';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { Terminal as TerminalCore } from '../Terminal';\nimport * as Strings from '../browser/LocalizableStrings';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { AddonManager } from './AddonManager';\nimport { IParams } from 'common/parser/Types';\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n  }\n\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi { return new BufferNamespaceApi(this._core.buffers); }\n  public get markers(): ReadonlyArray<IMarker> { return this._core.markers; }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public addMarker(cursorYOffset: number): IMarker {\n    return this.registerMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeUtf8(data: Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'fontWeight' | 'fontWeightBold' | 'logLevel' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell'): boolean;\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'): void;\n  public setOption(key: 'logLevel', value: 'debug' | 'info' | 'warn' | 'error' | 'off'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell', value: boolean): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    values.forEach(value => {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    });\n  }\n}\n\nclass BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n\nclass BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n  private _onBufferChange = new EventEmitter<IBufferApi>();\n  public get onBufferChange(): IEvent<IBufferApi> { return this._onBufferChange.event; }\n\n  constructor(private _buffers: IBufferSet) {\n    this._normal = new BufferApiView(this._buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._buffers.alt, 'alternate');\n    this._buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._buffers.active === this._buffers.normal) { return this.normal; }\n    if (this._buffers.active === this._buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._buffers.alt);\n  }\n}\n\nclass BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, <ICellData>cell);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n\nclass ParserApi implements IParser {\n  constructor(private _core: ITerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean): IDisposable {\n    return this._core.addCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean): IDisposable {\n    return this._core.addDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean): IDisposable {\n    return this._core.addEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._core.addOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n\nclass UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ITerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { IInputHandlingTerminal, ICompositionHelper, ITerminalOptions, ITerminal, IBrowser, CustomKeyEventHandler } from './Types';\nimport { IRenderer, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0 } from 'common/data/EscapeSequences';\nimport { InputHandler } from './InputHandler';\nimport { Renderer } from 'browser/renderer/Renderer';\nimport { Linkifier } from 'browser/Linkifier';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from 'browser/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition, ILinkProvider } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IKeyboardEvent, KeyboardResultType, IBufferLine, IAttributeData, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { IOptionsService, IBufferService, ICoreMouseService, ICoreService, ILogService, IDirtyRowService, IInstantiationService, ICharsetService, IUnicodeService } from 'common/services/Services';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService, ICoreBrowserService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { LogService } from 'common/services/LogService';\nimport { ILinkifier, IMouseZoneManager, LinkMatcherHandler, ILinkMatcherOptions, IViewport, ILinkifier2 } from 'browser/Types';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document = (typeof window !== 'undefined') ? window.document : null;\n\n\nexport class Terminal extends Disposable implements ITerminal, IDisposable, IInputHandlingTerminal {\n  public textarea: HTMLTextAreaElement;\n  public element: HTMLElement;\n  public screenElement: HTMLElement;\n\n  private _document: Document;\n  private _viewportScrollArea: HTMLElement;\n  private _viewportElement: HTMLElement;\n  private _helperContainer: HTMLElement;\n  private _compositionView: HTMLElement;\n\n  private _visualBellTimer: number;\n\n  public browser: IBrowser = <any>Browser;\n\n  // TODO: We should remove options once components adopt optionsService\n  public get options(): ITerminalOptions { return this.optionsService.options; }\n\n  private _customKeyEventHandler: CustomKeyEventHandler;\n\n  // common services\n  private _bufferService: IBufferService;\n  private _coreService: ICoreService;\n  private _charsetService: ICharsetService;\n  private _coreMouseService: ICoreMouseService;\n  private _dirtyRowService: IDirtyRowService;\n  private _instantiationService: IInstantiationService;\n  private _logService: ILogService;\n  public optionsService: IOptionsService;\n  public unicodeService: IUnicodeService;\n\n  // browser services\n  private _charSizeService: ICharSizeService;\n  private _mouseService: IMouseService;\n  private _renderService: IRenderService;\n  private _selectionService: ISelectionService;\n  private _soundService: ISoundService;\n\n  // modes\n  public insertMode: boolean;\n  public bracketedPasteMode: boolean;\n\n  // mouse properties\n  public mouseEvents: CoreMouseEventType = CoreMouseEventType.NONE;\n  public sendFocus: boolean;\n\n  // write buffer\n  private _writeBuffer: WriteBuffer;\n\n  // Store if user went browsing history in scrollback\n  private _userScrolling: boolean;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  private _inputHandler: InputHandler;\n  public linkifier: ILinkifier;\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport;\n  private _compositionHelper: ICompositionHelper;\n  private _mouseZoneManager: IMouseZoneManager;\n  private _accessibilityManager: AccessibilityManager;\n  private _colorManager: ColorManager;\n  private _theme: ITheme;\n  private _windowsMode: IDisposable | undefined;\n\n  // bufferline to clone/copy from for new blank lines\n  private _blankLine: IBufferLine = null;\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  public onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this.onA11yCharEmitter.event; }\n  public onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this.onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: ITerminalOptions = {}\n  ) {\n    super();\n\n    // Setup and initialize common services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this._instantiationService.createInstance(BufferService);\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this._coreService = this._instantiationService.createInstance(CoreService, () => this.scrollToBottom());\n    this._instantiationService.setService(ICoreService, this._coreService);\n    this._coreService.onData(e => this._onData.fire(e));\n    this._coreService.onBinary(e => this._onBinary.fire(e));\n    this._coreMouseService = this._instantiationService.createInstance(CoreMouseService);\n    this._instantiationService.setService(ICoreMouseService, this._coreMouseService);\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n    this.unicodeService = this._instantiationService.createInstance(UnicodeService);\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n\n    this._setupOptionsListeners();\n    this._setup();\n\n    this._writeBuffer = new WriteBuffer(data => this._inputHandler.parse(data));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._windowsMode?.dispose();\n    this._windowsMode = undefined;\n    this._renderService?.dispose();\n    this._customKeyEventHandler = null;\n    this.write = () => { };\n    this.element?.parentNode?.removeChild(this.element);\n  }\n\n  private _setup(): void {\n    this._customKeyEventHandler = null;\n\n    // modes\n    this.insertMode = false;\n    this.bracketedPasteMode = false;\n\n    this._userScrolling = false;\n\n    if (this._inputHandler) {\n      this._inputHandler.reset();\n    } else {\n      // Register input handler and refire/handle events\n      this._inputHandler = new InputHandler(this, this._bufferService, this._charsetService, this._coreService, this._dirtyRowService, this._logService, this.optionsService, this._coreMouseService, this.unicodeService, this._instantiationService);\n      this._inputHandler.onRequestBell(() => this.bell());\n      this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end));\n      this._inputHandler.onRequestReset(() => this.reset());\n      this._inputHandler.onCursorMove(() => this._onCursorMove.fire());\n      this._inputHandler.onLineFeed(() => this._onLineFeed.fire());\n      this.register(this._inputHandler);\n    }\n\n    if (!this.linkifier) {\n      this.linkifier = new Linkifier(this._bufferService, this._logService, this.optionsService, this.unicodeService);\n    }\n    if (!this.linkifier2) {\n      this.linkifier2 = new Linkifier2(this._bufferService);\n    }\n\n    if (this.options.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  private _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.addCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          disposables.forEach(d => d.dispose());\n        }\n      };\n    }\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  public get buffers(): IBufferSet {\n    return this._bufferService.buffers;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _setupOptionsListeners(): void {\n    // TODO: These listeners should be owned by individual components\n    this.optionsService.onOptionChange(key => {\n      switch (key) {\n        case 'fontFamily':\n        case 'fontSize':\n          // When the font changes the size of the cells may change which requires a renderer clear\n          this._renderService?.clear();\n          this._charSizeService?.measure();\n          break;\n        case 'cursorBlink':\n        case 'cursorStyle':\n          // The DOM renderer needs a row refresh to update the cursor styles\n          this.refresh(this.buffer.y, this.buffer.y);\n          break;\n        case 'drawBoldTextInBrightColors':\n        case 'letterSpacing':\n        case 'lineHeight':\n        case 'fontWeight':\n        case 'fontWeightBold':\n        case 'minimumContrastRatio':\n          // When the font changes the size of the cells may change which requires a renderer clear\n          if (this._renderService) {\n            this._renderService.clear();\n            this._renderService.onResize(this.cols, this.rows);\n            this.refresh(0, this.rows - 1);\n          }\n          break;\n        case 'rendererType':\n          if (this._renderService) {\n            this._renderService.setRenderer(this._createRenderer());\n            this._renderService.onResize(this.cols, this.rows);\n          }\n          break;\n        case 'scrollback':\n          this.buffers.resize(this.cols, this.rows);\n          this.viewport?.syncScrollArea();\n          break;\n        case 'screenReaderMode':\n          if (this.optionsService.options.screenReaderMode) {\n            if (!this._accessibilityManager && this._renderService) {\n              this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n            }\n          } else {\n            this._accessibilityManager?.dispose();\n            this._accessibilityManager = null;\n          }\n          break;\n        case 'tabStopWidth': this.buffers.setupTabStops(); break;\n        case 'theme':\n          this._setTheme(this.optionsService.options.theme);\n          break;\n        case 'windowsMode':\n          if (this.optionsService.options.windowsMode) {\n            this._enableWindowsMode();\n          } else {\n            this._windowsMode?.dispose();\n            this._windowsMode = undefined;\n          }\n          break;\n      }\n    });\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element.classList.add('focus');\n    this.showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea, this.bracketedPasteMode, this._coreService);\n    this.register(addDisposableDomListener(this.textarea, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea, this.screenElement, this._selectionService, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea, this.screenElement, this._selectionService, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea, this.screenElement);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'compositionstart', () => this._compositionHelper.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea, 'compositionend', () => this._compositionHelper.compositionend()));\n    this.register(this.onRender(() => this._compositionHelper.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!document.body.contains(parent)) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    const coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea);\n    this._instantiationService.setService(ICoreBrowserService, coreBrowserService);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._theme = this.options.theme || this._theme;\n    this.options.theme = undefined;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this.optionsService.onOptionChange(e => this._colorManager.onOptionsChange(e));\n    this._colorManager.setTheme(this._theme);\n\n    const renderer = this._createRenderer();\n    this._renderService = this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement);\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this._renderService.onRender(e => this._onRender.fire(e));\n    this.onResize(e => this._renderService.resize(e.cols, e.rows));\n\n    this._soundService = this._instantiationService.createInstance(SoundService);\n    this._instantiationService.setService(ISoundService, this._soundService);\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number, suppressEvent: boolean) => this.scrollLines(amount, suppressEvent),\n      this._viewportElement,\n      this._viewportScrollArea\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => this._renderService.onCursorMove()));\n    this.register(this.onResize(() => this._renderService.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService.onBlur()));\n    this.register(this.onFocus(() => this._renderService.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport.syncScrollArea()));\n\n    this._selectionService = this._instantiationService.createInstance(SelectionService,\n      (amount: number, suppressEvent: boolean) => this.scrollLines(amount, suppressEvent),\n      this.element,\n      this.screenElement);\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRedrawRequest(e => this._renderService.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea.value = text;\n      this.textarea.focus();\n      this.textarea.select();\n    }));\n    this.register(this.onScroll(() => {\n      this.viewport.syncScrollArea();\n      this._selectionService.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService.refresh()));\n\n    this._mouseZoneManager = this._instantiationService.createInstance(MouseZoneManager, this.element, this.screenElement);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager.clearAll()));\n    this.linkifier.attachToDom(this.element, this._mouseZoneManager);\n    this.linkifier2.attachToDom(this.element, this._mouseService, this._renderService);\n\n    // This event listener must be registered aftre MouseZoneManager is created\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.mouseEvents) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return this._instantiationService.createInstance(Renderer, this._colorManager.colors, this.screenElement, this.linkifier, this.linkifier2);\n      case 'dom': return this._instantiationService.createInstance(DomRenderer, this._colorManager.colors, this.element, this.screenElement, this._viewportElement, this.linkifier, this.linkifier2);\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    this._colorManager?.setTheme(theme);\n    this._renderService?.setColors(this._colorManager.colors);\n    this.viewport?.onThemeChange(this._colorManager.colors);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService.getRawByteCoords(ev, self.screenElement, self.cols, self.rows);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction;\n      switch ((<any>ev).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          // only UP/DOWN wheel events are respected\n          if ((ev as WheelEvent).deltaY !== 0) {\n            action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          }\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self._coreMouseService.triggerMouseEvent({\n        col: pos.x - 33, // FIXME: why -33 here?\n        row: pos.y - 33,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: Event) => void } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document.removeEventListener('mouseup', requestedEvents.mouseup);\n          if (requestedEvents.mousedrag) {\n            this._document.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        ev.preventDefault();\n        return this.cancel(ev);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this._coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      this.mouseEvents = events;\n      if (events) {\n        if (this.optionsService.options.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this._coreMouseService.explainEvents(events));\n        }\n        this.element.classList.add('enable-mouse-events');\n        this._selectionService.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element.classList.remove('enable-mouse-events');\n        this._selectionService.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel);\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document.removeEventListener('mouseup', requestedEvents.mouseup);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document.removeEventListener('mousemove', requestedEvents.mousedrag);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    });\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this._coreMouseService.activeProtocol = this._coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.mouseEvents || this._selectionService.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (!requestedEvents.wheel) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        if (!this.buffer.hasScrollback) {\n          const amount = this.viewport.getLinesScrolled(ev);\n\n          // Do nothing if there's no vertical scroll\n          if (amount === 0) {\n            return;\n          }\n\n          // Construct and send sequences\n          const sequence = C0.ESC + (this._coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n          let data = '';\n          for (let i = 0; i < Math.abs(amount); i++) {\n            data += sequence;\n          }\n          this._coreService.triggerDataEvent(data, true);\n        }\n        return;\n      }\n    }));\n\n    // allow wheel scrolling in\n    // the shell for example\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (requestedEvents.wheel) return;\n      if (!this.viewport.onWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.mouseEvents) return;\n      this.viewport.onTouchStart(ev);\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.mouseEvents) return;\n      if (!this.viewport.onTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    this.linkifier?.linkifyRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService && this._selectionService.shouldColumnSelect(ev)) {\n      this.element.classList.add('column-select');\n    } else {\n      this.element.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  public showCursor(): void {\n    if (!this._coreService.isCursorInitialized) {\n      this._coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    let newLine: IBufferLine;\n    newLine = this._blankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = this.buffer.getBlankLine(eraseAttr, isWrapped);\n      this._blankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = this.buffer.ybase + this.buffer.scrollTop;\n    const bottomRow = this.buffer.ybase + this.buffer.scrollBottom;\n\n    if (this.buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = this.buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === this.buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          this.buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          this.buffer.lines.push(newLine.clone());\n        }\n      } else {\n        this.buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        this.buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this._userScrolling) {\n          this.buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this._userScrolling) {\n          this.buffer.ydisp = Math.max(this.buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      this.buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      this.buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this._userScrolling) {\n      this.buffer.ydisp = this.buffer.ybase;\n    }\n\n    // Flag rows that need updating\n    this._dirtyRowService.markRangeDirty(this.buffer.scrollTop, this.buffer.scrollBottom);\n\n    this._onScroll.fire(this.buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean): void {\n    if (disp < 0) {\n      if (this.buffer.ydisp === 0) {\n        return;\n      }\n      this._userScrolling = true;\n    } else if (disp + this.buffer.ydisp >= this.buffer.ybase) {\n      this._userScrolling = false;\n    }\n\n    const oldYdisp = this.buffer.ydisp;\n    this.buffer.ydisp = Math.max(Math.min(this.buffer.ydisp + disp, this.buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === this.buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(this.buffer.ydisp);\n    }\n\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea, this.bracketedPasteMode, this._coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public addEscHandler(id: IFunctionIdentifier, callback: () => boolean): IDisposable {\n    return this._inputHandler.addEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean): IDisposable {\n    return this._inputHandler.addDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean): IDisposable {\n    return this._inputHandler.addCsiHandler(id, callback);\n  }\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._inputHandler.addOscHandler(ident, callback);\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    const joinerId = this._renderService.registerCharacterJoiner(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (this._renderService.deregisterCharacterJoiner(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart[0],\n      startRow: this._selectionService.selectionStart[1],\n      endColumn: this._selectionService.selectionEnd[0],\n      endRow: this._selectionService.selectionEnd[1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean {\n    this._keyDownHandled = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    if (!this._compositionHelper.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    const result = evaluateKeyboardEvent(event, this._coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this.showCursor();\n    this._coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.options.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: IKeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey);\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this.showCursor();\n    this._coreService.triggerDataEvent(key, true);\n\n    return true;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService.playBellSound();\n    }\n\n    if (this._visualBell()) {\n      this.element.classList.add('visual-bell-active');\n      clearTimeout(this._visualBellTimer);\n      this._visualBellTimer = window.setTimeout(() => {\n        this.element.classList.remove('visual-bell-active');\n      }, 200);\n    }\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    if (x < MINIMUM_COLS) x = MINIMUM_COLS;\n    if (y < MINIMUM_ROWS) y = MINIMUM_ROWS;\n\n    this.buffers.resize(x, y);\n\n    this._bufferService.resize(x, y);\n    this.buffers.setupTabStops(this.cols);\n\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n\n    this.refresh(0, this.rows - 1);\n    this._onResize.fire({ cols: x, rows: y });\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y));\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire(this.buffer.ydisp);\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  public is(term: string): boolean {\n    return (this.options.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * Emit the data event and populate the given data.\n   * @param data The data to populate in the event.\n   */\n  // public handler(data: string): void {\n  //   // Prevents all events to pty process if stdin is disabled\n  //   if (this.options.disableStdin) {\n  //     return;\n  //   }\n\n  //   // Clear the selection if the selection manager is available and has an active selection\n  //   if (this.selectionService && this.selectionService.hasSelection) {\n  //     this.selectionService.clearSelection();\n  //   }\n\n  //   // Input is being sent to the terminal, the terminal should focus the prompt.\n  //   if (this.buffer.ybase !== this.buffer.ydisp) {\n  //     this.scrollToBottom();\n  //   }\n  //   this._onData.fire(data);\n  // }\n\n  /**\n   * Emit the 'title' event and populate the given title.\n   * @param title The title to populate in the event.\n   */\n  public handleTitle(title: string): void {\n    this._onTitleChange.fire(title);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n    const userScrolling = this._userScrolling;\n\n    this._setup();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this._coreService.reset();\n    this._coreMouseService.reset();\n    this._selectionService?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n    this._userScrolling = userScrolling;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  public writeSync(data: string | Uint8Array): void {\n    this._writeBuffer.writeSync(data);\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: CompositionEvent): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n    this._clearTextareaPosition();\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          this._coreService.triggerDataEvent(input, true);\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cellHeight = Math.ceil(this._charSizeService.height * this._optionsService.options.lineHeight);\n      const cursorTop = this._bufferService.buffer.y * cellHeight;\n      const cursorLeft = this._bufferService.buffer.x * this._charSizeService.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.options.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.options.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      this._textarea.style.width = compositionViewBounds.width + 'px';\n      this._textarea.style.height = compositionViewBounds.height + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n\n  /**\n   * Clears the textarea's position so that the cursor does not blink on IE.\n   * @private\n   */\n  private _clearTextareaPosition(): void {\n    this._textarea.style.left = '';\n    this._textarea.style.top = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private readonly _scrollLines: (amount: number, suppressEvent: boolean) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    const newScrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._lastScrollTop !== newScrollTop) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If element's scroll top changed, this can happen when hiding the element\n    if (this._lastScrollTop !== this._viewportElement.scrollTop) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio !== this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff, true);\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += amount;\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.options.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.options.fastScrollSensitivity * this._optionsService.options.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.options.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, bracketedPasteMode: boolean, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, bracketedPasteMode, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, bracketedPasteMode: boolean, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.position = 'absolute';\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n\n  // Reset the terminal textarea's styling\n  // Timeout needs to be long enough for click event to be handled.\n  setTimeout(() => {\n    textarea.style.position = '';\n    textarea.style.width = '';\n    textarea.style.height = '';\n    textarea.style.left = '';\n    textarea.style.top = '';\n    textarea.style.zIndex = '';\n  }, 200);\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord && !selectionService.isClickInSelection(ev)) {\n    selectionService.selectWordAtCursor(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IInputHandlingTerminal } from './Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IAttributeData, IDisposable, IWindowOptions } from 'common/Types';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService, ICoreMouseService, ICharsetService, IUnicodeService, IInstantiationService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IRenderService } from 'browser/services/Services';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: {[key: string]: number} = {'(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2};\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document common VT features here that are currently unsupported\n */\n// @vt: #N   DCS   SIXEL   \"SIXEL Graphics\"  \"DCS Ps ; Ps ; Ps ; q \tPt ST\"   \"Draw SIXEL image starting at cursor position.\"\n// @vt: #N   OSC    1   \"Set Icon Name\"  \"OSC 1 ; Pt BEL\"  \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\n\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n *\n * @vt: #P[See limited support below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n * `ESC P 0 ST` for invalid requests.\n *\n * Supported requests and responses:\n *\n * | Type                             | Request           | Response (`Pt`)                                       |\n * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | always reporting `0 \" q` (DECSCA is unsupported)      |\n * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n *\n *\n * TODO:\n * - fix SGR report\n * - either implement DECSCA or remove the report\n * - either check which conformance is better suited or remove the report completely\n *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  hook(params: IParams): void {\n    this._data = new Uint32Array(0);\n  }\n\n  put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  unhook(success: boolean): void {\n    if (!success) {\n      this._data = new Uint32Array(0);\n      return;\n    }\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n      case '\"p': // DECSCL\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r61;1\"p${C0.ESC}\\\\`);\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n                ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n      case ' q': // DECSCUSR\n        const STYLES: {[key: string]: number} = {'block': 2, 'underline': 4, 'bar': 6};\n        let style = STYLES[this._optionsService.options.cursorStyle];\n        style -= this._optionsService.options.cursorBlink ? 1 : 0;\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n *\n * @vt: #N  DCS   DECUDK   \"User Defined Keys\"  \"DCS Ps ; Ps | Pt ST\"   \"Definitions for user-defined keys.\"\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n *\n * @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\"  \"DCS + q Pt ST\"   \"Request Terminfo String.\"\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n *\n * @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"  \"DCS + p Pt ST\"   \"Set Terminfo Data.\"\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _windowTitleStack: string[] = [];\n  private _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _onRequestRefreshRows = new EventEmitter<number, number>();\n  public get onRequestRefreshRows(): IEvent<number, number> { return this._onRequestRefreshRows.event; }\n  private _onRequestReset = new EventEmitter<void>();\n  public get onRequestReset(): IEvent<void> { return this._onRequestReset.event; }\n  private _onRequestBell = new EventEmitter<void>();\n  public get onRequestBell(): IEvent<void> { return this._onRequestBell.event; }\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  constructor(\n    private _terminal: IInputHandlingTerminal,\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _instantiationService: IInstantiationService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser())\n  {\n    super();\n    this.register(this._parser);\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.setCsiHandler({final: '@'}, params => this.insertChars(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: '@'}, params => this.scrollLeft(params));\n    this._parser.setCsiHandler({final: 'A'}, params => this.cursorUp(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: 'A'}, params => this.scrollRight(params));\n    this._parser.setCsiHandler({final: 'B'}, params => this.cursorDown(params));\n    this._parser.setCsiHandler({final: 'C'}, params => this.cursorForward(params));\n    this._parser.setCsiHandler({final: 'D'}, params => this.cursorBackward(params));\n    this._parser.setCsiHandler({final: 'E'}, params => this.cursorNextLine(params));\n    this._parser.setCsiHandler({final: 'F'}, params => this.cursorPrecedingLine(params));\n    this._parser.setCsiHandler({final: 'G'}, params => this.cursorCharAbsolute(params));\n    this._parser.setCsiHandler({final: 'H'}, params => this.cursorPosition(params));\n    this._parser.setCsiHandler({final: 'I'}, params => this.cursorForwardTab(params));\n    this._parser.setCsiHandler({final: 'J'}, params => this.eraseInDisplay(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'J'}, params => this.eraseInDisplay(params));\n    this._parser.setCsiHandler({final: 'K'}, params => this.eraseInLine(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'K'}, params => this.eraseInLine(params));\n    this._parser.setCsiHandler({final: 'L'}, params => this.insertLines(params));\n    this._parser.setCsiHandler({final: 'M'}, params => this.deleteLines(params));\n    this._parser.setCsiHandler({final: 'P'}, params => this.deleteChars(params));\n    this._parser.setCsiHandler({final: 'S'}, params => this.scrollUp(params));\n    this._parser.setCsiHandler({final: 'T'}, params => this.scrollDown(params));\n    this._parser.setCsiHandler({final: 'X'}, params => this.eraseChars(params));\n    this._parser.setCsiHandler({final: 'Z'}, params => this.cursorBackwardTab(params));\n    this._parser.setCsiHandler({final: '`'}, params => this.charPosAbsolute(params));\n    this._parser.setCsiHandler({final: 'a'}, params => this.hPositionRelative(params));\n    this._parser.setCsiHandler({final: 'b'}, params => this.repeatPrecedingCharacter(params));\n    this._parser.setCsiHandler({final: 'c'}, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.setCsiHandler({prefix: '>', final: 'c'}, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.setCsiHandler({final: 'd'}, params => this.linePosAbsolute(params));\n    this._parser.setCsiHandler({final: 'e'}, params => this.vPositionRelative(params));\n    this._parser.setCsiHandler({final: 'f'}, params => this.hVPosition(params));\n    this._parser.setCsiHandler({final: 'g'}, params => this.tabClear(params));\n    this._parser.setCsiHandler({final: 'h'}, params => this.setMode(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'h'}, params => this.setModePrivate(params));\n    this._parser.setCsiHandler({final: 'l'}, params => this.resetMode(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'l'}, params => this.resetModePrivate(params));\n    this._parser.setCsiHandler({final: 'm'}, params => this.charAttributes(params));\n    this._parser.setCsiHandler({final: 'n'}, params => this.deviceStatus(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'n'}, params => this.deviceStatusPrivate(params));\n    this._parser.setCsiHandler({intermediates: '!', final: 'p'}, params => this.softReset(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: 'q'}, params => this.setCursorStyle(params));\n    this._parser.setCsiHandler({final: 'r'}, params => this.setScrollRegion(params));\n    this._parser.setCsiHandler({final: 's'}, params => this.saveCursor(params));\n    this._parser.setCsiHandler({final: 't'}, params => this.windowOptions(params));\n    this._parser.setCsiHandler({final: 'u'}, params => this.restoreCursor(params));\n    this._parser.setCsiHandler({intermediates: '\\'', final: '}'}, params => this.insertColumns(params));\n    this._parser.setCsiHandler({intermediates: '\\'', final: '~'}, params => this.deleteColumns(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.setOscHandler(0, new OscHandler((data: string) => { this.setTitle(data); this.setIconName(data); }));\n    //   1 - icon name\n    this._parser.setOscHandler(1, new OscHandler((data: string) => this.setIconName(data)));\n    //   2 - title\n    this._parser.setOscHandler(2, new OscHandler((data: string) => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    //  11 - Change VT100 text background color to Pt.\n    //  12 - Change text cursor color to Pt.\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    // 111 - Reset VT100 text background color.\n    // 112 - Reset text cursor color.\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.setEscHandler({final: '7'}, () => this.saveCursor());\n    this._parser.setEscHandler({final: '8'}, () => this.restoreCursor());\n    this._parser.setEscHandler({final: 'D'}, () => this.index());\n    this._parser.setEscHandler({final: 'E'}, () => this.nextLine());\n    this._parser.setEscHandler({final: 'H'}, () => this.tabSet());\n    this._parser.setEscHandler({final: 'M'}, () => this.reverseIndex());\n    this._parser.setEscHandler({final: '='}, () => this.keypadApplicationMode());\n    this._parser.setEscHandler({final: '>'}, () => this.keypadNumericMode());\n    this._parser.setEscHandler({final: 'c'}, () => this.fullReset());\n    this._parser.setEscHandler({final: 'n'}, () => this.setgLevel(2));\n    this._parser.setEscHandler({final: 'o'}, () => this.setgLevel(3));\n    this._parser.setEscHandler({final: '|'}, () => this.setgLevel(3));\n    this._parser.setEscHandler({final: '}'}, () => this.setgLevel(2));\n    this._parser.setEscHandler({final: '~'}, () => this.setgLevel(1));\n    this._parser.setEscHandler({intermediates: '%', final: '@'}, () => this.selectDefaultCharset());\n    this._parser.setEscHandler({intermediates: '%', final: 'G'}, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.setEscHandler({intermediates: '(', final: flag}, () => this.selectCharset('(' + flag));\n      this._parser.setEscHandler({intermediates: ')', final: flag}, () => this.selectCharset(')' + flag));\n      this._parser.setEscHandler({intermediates: '*', final: flag}, () => this.selectCharset('*' + flag));\n      this._parser.setEscHandler({intermediates: '+', final: flag}, () => this.selectCharset('+' + flag));\n      this._parser.setEscHandler({intermediates: '-', final: flag}, () => this.selectCharset('-' + flag));\n      this._parser.setEscHandler({intermediates: '.', final: flag}, () => this.selectCharset('.' + flag));\n      this._parser.setEscHandler({intermediates: '/', final: flag}, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.setEscHandler({intermediates: '#', final: '8'}, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.setDcsHandler({intermediates: '$', final: 'q'}, new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public parse(data: string | Uint8Array): void {\n    let buffer = this._bufferService.buffer;\n    const cursorStartX = buffer.x;\n    const cursorStartY = buffer.y;\n\n    this._logService.debug('parsing data', data);\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    this._dirtyRowService.clearRange();\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = 0; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        this._parser.parse(this._parseBuffer, len);\n      }\n    } else {\n      const len = (typeof data === 'string')\n        ? this._stringDecoder.decode(data, this._parseBuffer)\n        : this._utf8Decoder.decode(data, this._parseBuffer);\n      this._parser.parse(this._parseBuffer, len);\n    }\n\n    buffer = this._bufferService.buffer;\n    if (buffer.x !== cursorStartX || buffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowService.start, this._dirtyRowService.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const buffer = this._bufferService.buffer;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.options.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._terminal.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = buffer.lines.get(buffer.y + buffer.ybase);\n\n    this._dirtyRowService.markDirty(buffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (buffer.x && end - start > 0 && bufferRow.getWidth(buffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(buffer.x - 1, 0, 1, curAttr.fg, curAttr.bg);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._terminal.onA11yCharEmitter.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // buffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for buffer.x to avoid overflow left\n      if (!chWidth && buffer.x) {\n        if (!bufferRow.getWidth(buffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(buffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(buffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (buffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          buffer.x = 0;\n          buffer.y++;\n          if (buffer.y === buffer.scrollBottom + 1) {\n            buffer.y--;\n            this._terminal.scroll(this._eraseAttrData(), true);\n          } else {\n            if (buffer.y >= this._bufferService.rows) {\n              buffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            buffer.lines.get(buffer.y).isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = buffer.lines.get(buffer.y + buffer.ybase);\n        } else {\n          buffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(buffer.x, chWidth, buffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(buffer.x++, code, chWidth, curAttr.fg, curAttr.bg);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that buffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(buffer.x++, 0, 0, curAttr.fg, curAttr.bg);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(buffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (buffer.x < cols && end - start > 0 && bufferRow.getWidth(buffer.x) === 0 && !bufferRow.hasContent(buffer.x)) {\n      bufferRow.setCellFromCodePoint(buffer.x, 0, 1, curAttr.fg, curAttr.bg);\n    }\n\n    this._dirtyRowService.markDirty(buffer.y);\n  }\n\n  /**\n   * Forward addCsiHandler from parser.\n   */\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.addCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.options.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.addCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward addDcsHandler from parser.\n   */\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean): IDisposable {\n    return this._parser.addDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward addEscHandler from parser.\n   */\n  public addEscHandler(id: IFunctionIdentifier, callback: () => boolean): IDisposable {\n    return this._parser.addEscHandler(id, callback);\n  }\n\n  /**\n   * Forward addOscHandler from parser.\n   */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._parser.addOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): void {\n    this._onRequestBell.fire();\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): void {\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    this._dirtyRowService.markDirty(buffer.y);\n    if (this._optionsService.options.convertEol) {\n      buffer.x = 0;\n    }\n    buffer.y++;\n    if (buffer.y === buffer.scrollBottom + 1) {\n      buffer.y--;\n      this._terminal.scroll(this._eraseAttrData());\n    } else if (buffer.y >= this._bufferService.rows) {\n      buffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (buffer.x >= this._bufferService.cols) {\n      buffer.x--;\n    }\n    this._dirtyRowService.markDirty(buffer.y);\n\n    this._onLineFeed.fire();\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): void {\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   */\n  public backspace(): void {\n    this._restrictCursor();\n    if (this._bufferService.buffer.x > 0) {\n      this._bufferService.buffer.x--;\n    }\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    const originalX = this._bufferService.buffer.x;\n    this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    if (this._optionsService.options.screenReaderMode) {\n      this._terminal.onA11yTabEmitter.fire(this._bufferService.buffer.x - originalX);\n    }\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): void {\n    this._charsetService.setgLevel(1);\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): void {\n    this._charsetService.setgLevel(0);\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(): void {\n    this._bufferService.buffer.x = Math.min(this._bufferService.cols - 1, Math.max(0, this._bufferService.buffer.x));\n    this._bufferService.buffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._bufferService.buffer.scrollBottom, Math.max(this._bufferService.buffer.scrollTop, this._bufferService.buffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._bufferService.buffer.y));\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = this._bufferService.buffer.scrollTop + y;\n    } else {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._bufferService.buffer.x + x, this._bufferService.buffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): void {\n    // stop at scrollTop\n    const diffToTop = this._bufferService.buffer.y - this._bufferService.buffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): void {\n    // stop at scrollBottom\n    const diffToBottom = this._bufferService.buffer.scrollBottom - this._bufferService.buffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): void {\n    this._moveCursor(params.params[0] || 1, 0);\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): void {\n    this._moveCursor(-(params.params[0] || 1), 0);\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): void {\n    this.cursorDown(params);\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): void {\n    this.cursorUp(params);\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): void {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): void {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1);\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): void {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): void {\n    this._moveCursor(params.params[0] || 1, 0);\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): void {\n    this._setCursor(this._bufferService.buffer.x, (params.params[0] || 1) - 1);\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): void {\n    this._moveCursor(0, params.params[0] || 1);\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): void {\n    this.cursorPosition(params);\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): void {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._bufferService.buffer.tabs[this._bufferService.buffer.x];\n    } else if (param === 3) {\n      this._bufferService.buffer.tabs = {};\n    }\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    }\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.x = buffer.prevStop();\n    }\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y);\n    line.replaceCells(\n      start,\n      end,\n      this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData()\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y);\n    line.fill(this._bufferService.buffer.getNullCell(this._eraseAttrData()));\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Currently the same as ED.\"\n   */\n  public eraseInDisplay(params: IParams): void {\n    this._restrictCursor();\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._bufferService.buffer.x, this._bufferService.cols, this._bufferService.buffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._bufferService.buffer.x + 1, true);\n        if (this._bufferService.buffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._bufferService.buffer.lines.get(j + 1).isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._bufferService.buffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._bufferService.buffer.lines.trimStart(scrollBackSize);\n          this._bufferService.buffer.ybase = Math.max(this._bufferService.buffer.ybase - scrollBackSize, 0);\n          this._bufferService.buffer.ydisp = Math.max(this._bufferService.buffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Currently the same as EL.\"\n   */\n  public eraseInLine(params: IParams): void {\n    this._restrictCursor();\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._bufferService.buffer.y, this._bufferService.buffer.x, this._bufferService.cols);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.buffer.x + 1);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.cols);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): void {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n\n    const row: number = buffer.y + buffer.ybase;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - buffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + buffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      buffer.lines.splice(row, 0, buffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): void {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n\n    const row: number = buffer.y + buffer.ybase;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - buffer.scrollBottom;\n    j = this._bufferService.rows - 1 + buffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(row, 1);\n      buffer.lines.splice(j, 0, buffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.y + this._bufferService.buffer.ybase);\n    if (line) {\n      line.insertCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.y + this._bufferService.buffer.ybase);\n    if (line) {\n      line.deleteCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): void {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 0, buffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): void {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 0, buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y);\n      line.deleteCells(0, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y);\n      line.insertCells(0, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = this._bufferService.buffer.lines.get(buffer.ybase + y);\n      line.insertCells(buffer.x, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y);\n      line.deleteCells(buffer.x, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.y + this._bufferService.buffer.ybase);\n    if (line) {\n      line.replaceCells(\n        this._bufferService.buffer.x,\n        this._bufferService.buffer.x + (params.params[0] || 1),\n        this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): void {\n    if (!this._parser.precedingCodepoint) {\n      return;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): void {\n    if (params.params[0] > 0) {\n      return;\n    }\n    if (this._terminal.is('xterm') || this._terminal.is('rxvt-unicode') || this._terminal.is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._terminal.is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): void {\n    if (params.params[0] > 0) {\n      return;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._terminal.is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._terminal.is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._terminal.is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._terminal.is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM). Always off.   | #N      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public setMode(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._terminal.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    }\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.options.windowOptions.setWinLines) {\n            this._terminal.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._terminal.viewport?.syncScrollArea();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._terminal.sendFocus = true;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n          // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._terminal.viewport?.syncScrollArea();\n          this._terminal.showCursor();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._terminal.bracketedPasteMode = true;\n          break;\n      }\n    }\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM). Always off.     | #N      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._terminal.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    }\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.options.windowOptions.setWinLines) {\n            this._terminal.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._terminal.viewport?.syncScrollArea();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._terminal.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._terminal.viewport?.syncScrollArea();\n          this._terminal.showCursor();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._terminal.bracketedPasteMode = false;\n          break;\n      }\n    }\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance);\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n          || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    if (accu[0] === 38) {\n      if (accu[1] === 2) {\n        attr.fg |= Attributes.CM_RGB;\n        attr.fg &= ~Attributes.RGB_MASK;\n        attr.fg |= AttributeData.fromColorRGB([accu[3], accu[4], accu[5]]);\n      } else if (accu[1] === 5) {\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P256 | (accu[3] & 0xff);\n      }\n    } else if (accu[0] === 48) {\n      if (accu[1] === 2) {\n        attr.bg |= Attributes.CM_RGB;\n        attr.bg &= ~Attributes.RGB_MASK;\n        attr.bg |= AttributeData.fromColorRGB([accu[3], accu[4], accu[5]]);\n      } else if (accu[1] === 5) {\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P256 | (accu[3] & 0xff);\n      }\n    }\n\n    return advance;\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied from in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined. (no support for newer underline styles)      | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters.                                  | #N      |\n   * | 21        | Doubly  underlined.                                      | #N      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out.                                         | #N      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38) and background (Ps=48) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): void {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): void {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._bufferService.buffer.y + 1;\n        const x = this._bufferService.buffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): void {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._bufferService.buffer.y + 1;\n        const x = this._bufferService.buffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): void {\n    this._coreService.isCursorHidden = false;\n    this._terminal.insertMode = false;\n    this._terminal.viewport?.syncScrollArea();\n    this._bufferService.buffer.scrollTop = 0;\n    this._bufferService.buffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._bufferService.buffer.savedX = 0;\n    this._bufferService.buffer.savedY = this._bufferService.buffer.ybase;\n    this._bufferService.buffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._bufferService.buffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._bufferService.buffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): void {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): void {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) >  this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._bufferService.buffer.scrollTop = top - 1;\n      this._bufferService.buffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): void {\n    if (!paramToWindowOption(params.params[0], this._optionsService.options.windowOptions)) {\n      return;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    const rs = this._instantiationService.getService(IRenderService);\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (rs && second !== 2) {\n          console.log(rs.dimensions);\n          const w = rs.dimensions.scaledCanvasWidth.toFixed(0);\n          const h = rs.dimensions.scaledCanvasHeight.toFixed(0);\n          this._coreService.triggerDataEvent(`${C0.ESC}[4;${h};${w}t`);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        if (rs) {\n          const w = rs.dimensions.scaledCellWidth.toFixed(0);\n          const h = rs.dimensions.scaledCellHeight.toFixed(0);\n          this._coreService.triggerDataEvent(`${C0.ESC}[6;${h};${w}t`);\n        }\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop());\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop());\n          }\n        }\n        break;\n    }\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): void {\n    this._bufferService.buffer.savedX = this._bufferService.buffer.x;\n    this._bufferService.buffer.savedY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    this._bufferService.buffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._bufferService.buffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._bufferService.buffer.savedCharset = this._charsetService.charset;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): void {\n    this._bufferService.buffer.x = this._bufferService.buffer.savedX || 0;\n    this._bufferService.buffer.y = Math.max(this._bufferService.buffer.savedY - this._bufferService.buffer.ybase, 0);\n    this._curAttrData.fg = this._bufferService.buffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._bufferService.buffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._bufferService.buffer.savedCharset) {\n      this._charsetService.charset = this._bufferService.buffer.savedCharset;\n    }\n    this._restrictCursor();\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): void {\n    this._windowTitle = data;\n    this._terminal.handleTitle(data);\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): void {\n    this._iconName = data;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): void {\n    this._bufferService.buffer.x = 0;\n    this.index();\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): void {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._terminal.viewport?.syncScrollArea();\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): void {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._terminal.viewport?.syncScrollArea();\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): void {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): void {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return;\n    }\n    if (collectAndFlag[0] === '/') {\n      return;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): void {\n    this._restrictCursor();\n    const buffer = this._bufferService.buffer;\n    this._bufferService.buffer.y++;\n    if (buffer.y === buffer.scrollBottom + 1) {\n      buffer.y--;\n      this._terminal.scroll(this._eraseAttrData());\n    } else if (buffer.y >= this._bufferService.rows) {\n      buffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): void {\n    this._bufferService.buffer.tabs[this._bufferService.buffer.x] = true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): void {\n    this._restrictCursor();\n    const buffer = this._bufferService.buffer;\n    if (buffer.y === buffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = buffer.scrollBottom - buffer.scrollTop;\n      buffer.lines.shiftElements(buffer.y + buffer.ybase, scrollRegionHeight, 1);\n      buffer.lines.set(buffer.y + buffer.ybase, buffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    } else {\n      buffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): void {\n    this._parser.reset();\n    this._onRequestReset.fire();\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): void {\n    this._charsetService.setgLevel(level);\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): void {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n    const buffer = this._bufferService.buffer;\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = buffer.y + buffer.ybase + yOffset;\n      buffer.lines.get(row).fill(cell);\n      buffer.lines.get(row).isWrapped = false;\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: {[flag: number]: ExecuteHandlerType};\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.setEscHandler({final: '\\\\'}, () => {});\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public addEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): void {\n    this._escHandlers[this._identifier(id, [0x30, 0x7e])] = [handler];\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public addCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): void {\n    this._csiHandlers[this._identifier(id)] = [handler];\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public addDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.addHandler(this._identifier(id), handler);\n  }\n  public setDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): void {\n    this._dcsParser.setHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public addOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.addHandler(ident, handler);\n  }\n  public setOscHandler(ident: number, handler: IOscHandler): void {\n    this._oscParser.setHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n  }\n\n\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   */\n  public parse(data: Uint32Array, length: number): void {\n    let code = 0;\n    let transition = 0;\n    let currentState = this.currentState;\n    const osc = this._oscParser;\n    const dcs = this._dcsParser;\n    let collect = this._collect;\n    const params = this._params;\n    const table: Uint8Array = this._transitions.table;\n\n    // process input string\n    for (let i = 0; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = table[currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState,\n              collect,\n              params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // undefined or true means success and to stop bubbling\n            if (handlers[j](params) !== false) {\n              break;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(collect << 8 | code, params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          collect <<= 8;\n          collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // undefined or true means success and to stop bubbling\n            if (handlersEsc[jj]() !== false) {\n              break;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          dcs.hook(collect << 8 | code, params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              dcs.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          dcs.unhook(code !== 0x18 && code !== 0x1a);\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          osc.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code <= 0x9f)) {\n              osc.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          osc.end(code !== 0x18 && code !== 0x1a);\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n\n    // save collected intermediates\n    this._collect = collect;\n\n    // save state\n    this.currentState = currentState;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from 'browser/renderer/TextRenderLayer';\nimport { SelectionRenderLayer } from 'browser/renderer/SelectionRenderLayer';\nimport { CursorRenderLayer } from 'browser/renderer/CursorRenderLayer';\nimport { IRenderLayer, IRenderer, IRenderDimensions, CharacterJoinerHandler, ICharacterJoinerRegistry, IRequestRefreshRowsEvent } from 'browser/renderer/Types';\nimport { LinkRenderLayer } from 'browser/renderer/LinkRenderLayer';\nimport { CharacterJoinerRegistry } from 'browser/renderer/CharacterJoinerRegistry';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { removeTerminalFromCache } from 'browser/renderer/atlas/CharAtlasCache';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nlet nextRendererId = 1;\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _id = nextRendererId++;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRefreshRows = new EventEmitter<IRequestRefreshRowsEvent>();\n  public get onRequestRefreshRows(): IEvent<IRequestRefreshRowsEvent> { return this._onRequestRefreshRows.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _screenElement: HTMLElement,\n    readonly linkifier: ILinkifier,\n    readonly linkifier2: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService readonly coreService: ICoreService,\n    @ICoreBrowserService readonly coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n    const allowTransparency = this._optionsService.options.allowTransparency;\n    this._characterJoinerRegistry = new CharacterJoinerRegistry(this._bufferService);\n\n    this._renderLayers = [\n      new TextRenderLayer(this._screenElement, 0, this._colors, this._characterJoinerRegistry, allowTransparency, this._id, this._bufferService, _optionsService),\n      new SelectionRenderLayer(this._screenElement, 1, this._colors, this._id, this._bufferService, _optionsService),\n      new LinkRenderLayer(this._screenElement, 2, this._colors, this._id, linkifier, linkifier2, this._bufferService, _optionsService),\n      new CursorRenderLayer(this._screenElement, 3, this._colors, this._id, this._onRequestRefreshRows, this._bufferService, _optionsService, coreService, coreBrowserService)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._renderLayers.forEach(l => l.dispose());\n    removeTerminalFromCache(this._id);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._bufferService.cols, this._bufferService.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n\n    // Clear layers and force a full render\n    this._renderLayers.forEach(l => {\n      l.setColors(this._colors);\n      l.reset();\n    });\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    this._renderLayers.forEach(l => l.resize(this.dimensions));\n\n    // Resize the screen\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur());\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus());\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(start, end, columnSelectMode));\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove());\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    this._renderLayers.forEach(l => operation(l));\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    this._renderLayers.forEach(l => l.onGridChanged(start, end));\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._optionsService.options.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._optionsService.options.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._bufferService.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._bufferService.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._characterJoinerRegistry.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._characterJoinerRegistry.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharacterJoinerRegistry, IRenderDimensions } from 'browser/renderer/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { JoinedCellData } from 'browser/renderer/CharacterJoinerRegistry';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n  private _workCell = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    characterJoinerRegistry: ICharacterJoinerRegistry,\n    alpha: boolean,\n    rendererId: number,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'text', zIndex, alpha, colors, rendererId, bufferService, optionsService);\n    this._state = new GridCache<CharData>();\n    this._characterJoinerRegistry = characterJoinerRegistry;\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    joinerRegistry: ICharacterJoinerRegistry | null,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = joinerRegistry ? joinerRegistry.getJoinedCharacters(row) : [];\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, null, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle ? prevFillStyle : '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle ? prevFillStyle : '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, this._characterJoinerRegistry, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(cell, x, y);\n      if (cell.isUnderline()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            let bg = cell.getBgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n              bg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[bg].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        this._fillBottomLineAtCells(x, y, cell.getWidth());\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  public onOptionsChanged(): void {\n    this._setTransparency(this._optionsService.options.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { IGlyphIdentifier, ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'browser/Types';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { color } from 'browser/Color';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this._cacheCanvas.getContext('2d', {alpha: true}));\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d', {alpha: this._config.allowTransparency}));\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek()!.index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap! : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    }\n    if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    }\n    if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return color.opaque(this._config.colors.background);\n    }\n    if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = 'middle';\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight / 2);\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { IDisposable } from 'common/Types';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  protected _doWarmUp(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorContrastCache } from 'browser/Types';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: { [bg: number]: { [fg: number]: IColor | null | undefined } | undefined } = {};\n  private _rgba: { [bg: number]: { [fg: number]: string | null | undefined } | undefined } = {};\n\n  public clear(): void {\n    this._color = {};\n    this._rgba = {};\n  }\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    if (!this._rgba[bg]) {\n      this._rgba[bg] = {};\n    }\n    this._rgba[bg]![fg] = value;\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._rgba[bg] ? this._rgba[bg]![fg] : undefined;\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    if (!this._color[bg]) {\n      this._color[bg] = {};\n    }\n    this._color[bg]![fg] = value;\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color[bg] ? this._color[bg]![fg] : undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'selection', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selection.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number], end: [number, number], columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRequestRefreshRowsEvent } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    private _onRequestRefreshRowsEvent: IEventEmitter<IRequestRefreshRowsEvent>,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService,\n    private readonly _coreService: ICoreService,\n    private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    // TODO: Consider initial options? Maybe onOptionsChanged should be called at the end of open?\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = undefined;\n      this.onOptionsChanged();\n    }\n  }\n\n  public onBlur(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.pause();\n    }\n    this._onRequestRefreshRowsEvent.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onFocus(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.resume();\n    } else {\n      this._onRequestRefreshRowsEvent.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n    }\n  }\n\n  public onOptionsChanged(): void {\n    if (this._optionsService.options.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._coreBrowserService.isFocused, () => {\n          this._render(true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRefreshRowsEvent.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onCursorMove(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  public onGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    this._bufferService.buffer.lines.get(cursorY)!.loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === this._optionsService.options.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.options.cursorStyle || 'block'](cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.options.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, this._optionsService.options.cursorWidth);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'link', zIndex, true, colors, rendererId, bufferService, optionsService);\n    linkifier.onLinkHover(e => this._onLinkHover(e));\n    linkifier.onLinkLeave(e => this._onLinkLeave(e));\n\n    linkifier2.onLinkHover(e => this._onLinkHover(e));\n    linkifier2.onLinkLeave(e => this._onLinkLeave(e));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, IMouseZoneManager, IMouseZone, IRegisteredLinkMatcher } from 'browser/Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ILogService, IBufferService, IOptionsService, IUnicodeService } from 'common/services/Services';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: IRegisteredLinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _element: HTMLElement | undefined;\n\n  private _rowsTimeoutId: number | undefined;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number | undefined, end: number | undefined };\n\n  private _onLinkHover = new EventEmitter<ILinkifierEvent>();\n  public get onLinkHover(): IEvent<ILinkifierEvent> { return this._onLinkHover.event; }\n  private _onLinkLeave = new EventEmitter<ILinkifierEvent>();\n  public get onLinkLeave(): IEvent<ILinkifierEvent> { return this._onLinkLeave.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    protected readonly _bufferService: IBufferService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _unicodeService: IUnicodeService\n  ) {\n    this._rowsToLinkify = {\n      start: undefined,\n      end: undefined\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(element: HTMLElement, mouseZoneManager: IMouseZoneManager): void {\n    this._element = element;\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n    this._rowsTimeoutId = <number><any>setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency);\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = undefined;\n    const buffer = this._bufferService.buffer;\n\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._logService.debug('_rowToLinkify was unset before _linkifyRows was called');\n      return;\n    }\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._bufferService.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._bufferService.cols);\n    const iterator = this._bufferService.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = undefined;\n    this._rowsToLinkify.end = undefined;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: IRegisteredLinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: IRegisteredLinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, (matcher.regex.flags || '') + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        this._logService.debug('match found without corresponding matchIndex', match, matcher);\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._bufferService.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._bufferService.buffer.lines.get(bufferIndex[0]);\n      if (!line) {\n        break;\n      }\n\n      const attr = line.getFg(bufferIndex[1]);\n      const fg = attr ? (attr >> 9) & 0x1ff : undefined;\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number | undefined): void {\n    if (!this._mouseZoneManager || !this._element) {\n      return;\n    }\n    // FIXME: get cell length from buffer to avoid mismatch after Unicode version change\n    const width = this._unicodeService.getStringCellWidth(uri);\n    const x1 = x % this._bufferService.cols;\n    const y1 = y + Math.floor(x / this._bufferService.cols);\n    let x2 = (x1 + width) % this._bufferService.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._bufferService.cols);\n    if (x2 === 0) {\n      x2 = this._bufferService.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        const newWindow = window.open();\n        if (newWindow) {\n          newWindow.opener = null;\n          newWindow.location.href = uri;\n        } else {\n          console.warn('Opening link blocked as opener could not be cleared');\n        }\n      },\n      () => {\n        this._onLinkHover.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          // Note that IViewportRange use 1-based coordinates to align with escape sequences such\n          // as CUP which use 1,1 as the default for row/col\n          matcher.hoverTooltipCallback(e, uri, { start: { x: x1, y: y1 }, end: { x: x2, y: y2 } });\n        }\n      },\n      () => {\n        this._onLinkLeave.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICharSizeService, IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService implements ISelectionService {\n  serviceBrand: any;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n\n  private _onLinuxMouseSelection = new EventEmitter<string>();\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = new EventEmitter<ISelectionRedrawRequestEvent>();\n  public get onRedrawRequest(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n\n  constructor(\n    private readonly _scrollLines: (amount: number, suppressEvent: boolean) => void,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(<MouseEvent>event);\n    this._mouseUpListener = event => this._onMouseUp(<MouseEvent>event);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, start[0], end[0]);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine && bufferLine.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  public isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  public selectWordAtCursor(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, false);\n      this._model.selectionEnd = undefined;\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(event, this._screenElement)[1];\n    const terminalHeight = this._bufferService.rows * Math.ceil(this._charSizeService.height * this._optionsService.options.lineHeight);\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.options.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current work.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.WORD;\n      this._selectWordAt(coords, true);\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.options.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._scrollLines(this._dragScrollAmount, false);\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME) {\n      if (event.altKey && this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else if (this.hasSelection) {\n      this._onSelectionChange.fire();\n    }\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine && nextBufferLine.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.options.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = [this._bufferService.cols, wrappedRange.last];\n    this._model.selectionStartLength = 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        return [Math.max(this.selectionStart[0] + this.selectionStartLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\nfunction moveHorizontallyOnly(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line && line.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line && line.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line && line.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  serviceBrand: any;\n\n  private static _audioContext: AudioContext;\n\n  static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (<any>window).AudioContext || (<any>window).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.options.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IMouseZoneManager, IMouseZone } from 'browser/Types';\nimport { IBufferService } from 'common/services/Services';\n\nconst HOVER_DURATION = 500;\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number | undefined;\n  private _currentZone: IMouseZone | undefined;\n  private _lastHoverCoords: [number | undefined, number | undefined] = [undefined, undefined];\n  private _initialSelectionLength: number = 0;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @ISelectionService private readonly _selectionService: ISelectionService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!start || !end) {\n      start = 0;\n      end = this._bufferService.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = undefined;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._element.addEventListener('mousemove', this._mouseMoveListener);\n      this._element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = <number><any>setTimeout(() => this._onTooltip(e), HOVER_DURATION);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = undefined;\n    const zone = this._findZoneEventAt(e);\n    if (zone && zone.tooltipCallback) {\n      zone.tooltipCallback(e);\n    }\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._getSelectionLength();\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone?.willLinkActivate(e)) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._getSelectionLength();\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _getSelectionLength(): number {\n    const selectionText = this._selectionService.selectionText;\n    return selectionText ? selectionText.length : 0;\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone | undefined {\n    const coords = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return undefined;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from './browser/LocalizableStrings';\nimport { ITerminal } from './Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new RenderDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._terminal.element.removeChild(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = <HTMLElement>e.target;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      if (this._liveRegion.parentNode) {\n        this._accessibilityTreeRoot.removeChild(this._liveRegion);\n      }\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerHTML = '&nbsp;';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler, IRequestRefreshRowsEvent } from 'browser/renderer/Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { color } from 'browser/Color';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRefreshRows = new EventEmitter<IRequestRefreshRowsEvent>();\n  public get onRequestRefreshRows(): IEvent<IRequestRefreshRowsEvent> { return this._onRequestRefreshRows.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    private readonly _linkifier2: ILinkifier2,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = new DomRendererRowFactory(document, this._optionsService, this._colors);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this._linkifier.onLinkHover(e => this._onLinkHover(e));\n    this._linkifier.onLinkLeave(e => this._onLinkLeave(e));\n\n    this._linkifier2.onLinkHover(e => this._onLinkHover(e));\n    this._linkifier2.onLinkLeave(e => this._onLinkLeave(e));\n  }\n\n  public dispose(): void {\n    this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.removeChild(this._rowContainer);\n    this._screenElement.removeChild(this._selectionContainer);\n    this._screenElement.removeChild(this._themeStyleElement);\n    this._screenElement.removeChild(this._dimensionsStyleElement);\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._bufferService.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._bufferService.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n\n    this._rowElements.forEach(element => {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    });\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.actualCellWidth}px` +\n      `}`;\n\n    this._dimensionsStyleElement.innerHTML = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${this._colors.foreground.css};` +\n      ` font-family: ${this._optionsService.options.fontFamily};` +\n      ` font-size: ${this._optionsService.options.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.options.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.options.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${this._colors.cursor.css};` +\n      `  color: ${this._colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${this._colors.cursorAccent.css};` +\n      `  color: ${this._colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${this._colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${this._colors.cursor.css};` +\n      ` color: ${this._colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.options.cursorWidth}px 0 0 ${this._colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${this._colors.selection.css};` +\n      `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(this._colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.innerHTML = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, start[0], end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n  }\n\n  public clear(): void {\n    this._rowElements.forEach(e => e.innerHTML = '');\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.options.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerHTML = '';\n\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData!, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, this._bufferService.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number { return -1; }\n  public deregisterCharacterJoiner(joinerId: number): boolean { return false; }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = <HTMLElement>row.children[x];\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'browser/Color';\nimport { IColorSet, IColor } from 'browser/Types';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    private readonly _document: Document,\n    private readonly _optionsService: IOptionsService,\n    private _colors: IColorSet\n  ) {\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n  }\n\n  public createRow(lineData: IBufferLine, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      const width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (this._workCell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (this._workCell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (this._workCell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (this._workCell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      if (this._workCell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = this._workCell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      let fg = this._workCell.getFgColor();\n      let fgColorMode = this._workCell.getFgColorMode();\n      let bg = this._workCell.getBgColor();\n      let bgColorMode = this._workCell.getBgColorMode();\n      const isInverse = !!this._workCell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (this._workCell.isBold() && fg < 8 && this._optionsService.options.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.ansi[fg])) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, this._colors.background, color)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.foreground)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // Background\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          this._addStyle(charElement, `background-color:#${padStart(bg.toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          }\n      }\n\n      fragment.appendChild(charElement);\n    }\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor): boolean {\n    if (this._optionsService.options.minimumContrastRatio === 1) {\n      return false;\n    }\n\n    // Try get from cache first\n    let adjustedColor = this._colors.contrastCache.getColor(this._workCell.bg, this._workCell.fg);\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bg, fg, this._optionsService.options.minimumContrastRatio);\n      this._colors.contrastCache.setColor(this._workCell.bg, this._workCell.fg, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping && keyMapping[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          result.key = C0.ESC + String.fromCharCode(keyCode);\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet } from 'browser/Types';\nimport { IOptionsService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\nexport class RenderService extends Disposable implements IRenderService {\n  serviceBrand: any;\n\n  private _renderDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    readonly screenElement: HTMLElement,\n    @IOptionsService readonly optionsService: IOptionsService,\n    @ICharSizeService readonly charSizeService: ICharSizeService\n  ) {\n    super();\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(optionsService.onOptionChange(() => this._renderer.onOptionsChanged()));\n    this.register(charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // No need to register this as renderer is explicitly disposed in RenderService.dispose\n    this._renderer.onRequestRefreshRows(e => this.refreshRows(e.start, e.end));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.intersectionRatio === 0;\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n    this._onRender.fire({ start, end });\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  public changeOptions(): void {\n    this._renderer.onOptionsChanged();\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    this._renderer.dispose();\n    super.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRefreshRows(e => this.refreshRows(e.start, e.end));\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._renderer.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._renderer.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, IPartialTerminalOptions } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { clone } from 'common/Clone';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjMyLjEwNAAAAAAAAAAAAAAA//tQxAADB8AhSmxhIIEVCSiJrDCQBTcu3UrAIwUdkRgQbFAZC1CQEwTJ9mjRvBA4UOLD8nKVOWfh+UlK3z/177OXrfOdKl7pyn3Xf//WreyTRUoAWgBgkOAGbZHBgG1OF6zM82DWbZaUmMBptgQhGjsyYqc9ae9XFz280948NMBWInljyzsNRFLPWdnZGWrddDsjK1unuSrVN9jJsK8KuQtQCtMBjCEtImISdNKJOopIpBFpNSMbIHCSRpRR5iakjTiyzLhchUUBwCgyKiweBv/7UsQbg8isVNoMPMjAAAA0gAAABEVFGmgqK////9bP/6XCykxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq';\n\n// TODO: Freeze?\nexport const DEFAULT_OPTIONS: ITerminalOptions = Object.freeze({\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  bellSound:  DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false\n});\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class OptionsService implements IOptionsService {\n  serviceBrand: any;\n\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: IPartialTerminalOptions) {\n    this.options = clone(DEFAULT_OPTIONS);\n    Object.keys(options).forEach(k => {\n      if (k in this.options) {\n        const newValue = options[k as keyof IPartialTerminalOptions] as any;\n        this.options[k] = newValue;\n      }\n    });\n  }\n\n  public setOption(key: string, value: any): void {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error('No option with key \"' + key + '\"');\n    }\n    if (CONSTRUCTOR_ONLY_OPTIONS.indexOf(key) !== -1) {\n      throw new Error(`Option \"${key}\" can only be set in the constructor`);\n    }\n    if (this.options[key] === value) {\n      return;\n    }\n\n    value = this._sanitizeAndValidateOption(key, value);\n\n    // Don't fire an option change event if they didn't change\n    if (this.options[key] === value) {\n      return;\n    }\n\n    this.options[key] = value;\n    this._onOptionChange.fire(key);\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error(`No option with key \"${key}\"`);\n    }\n    return this.options[key];\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  serviceBrand: any;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    readonly document: Document,\n    readonly parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.options.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.options.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService implements IBufferService {\n  serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    this.cols = Math.max(_optionsService.options.cols, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.options.rows, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n  }\n\n  public reset(): void {\n    this.buffers = new BufferSet(this._optionsService, this);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet implements IBufferSet {\n  private _normal: Buffer;\n  private _alt: Buffer;\n  private _activeBuffer: Buffer;\n\n\n  private _onBufferActivate = new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>();\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    readonly optionsService: IOptionsService,\n    readonly bufferService: IBufferService\n  ) {\n    this._normal = new Buffer(true, optionsService, bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, optionsService, bufferService);\n    this._activeBuffer = this._normal;\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | null = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.options.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.options.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.options.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.options.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    this.markers.splice(this.markers.indexOf(marker), 1);\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor (\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let result = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      result += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return {range: range, content: result};\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  serviceBrand: any;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, ICharset } from 'common/Types';\nimport { clone } from 'common/Clone';\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  origin: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService implements ICoreService {\n  serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public decPrivateModes: IDecPrivateModes;\n\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = new EventEmitter<void>();\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    private readonly _scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\n\nexport enum LogLevel {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevel } = {\n  debug: LogLevel.DEBUG,\n  info: LogLevel.INFO,\n  warn: LogLevel.WARN,\n  error: LogLevel.ERROR,\n  off: LogLevel.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  serviceBrand: any;\n\n  private _logLevel!: LogLevel;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.options.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: {[key: string]: ICoreMouseProtocol} = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: {[key: string]: CoreMouseEncoding} = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService implements ICoreMouseService {\n  private _protocols: {[name: string]: ICoreMouseProtocol} = {};\n  private _encodings: {[name: string]: CoreMouseEncoding} = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _onProtocolChange = new EventEmitter<CoreMouseEventType>();\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    // register default protocols and encodings\n    Object.keys(DEFAULT_PROTOCOLS).forEach(name => this.addProtocol(name, DEFAULT_PROTOCOLS[name]));\n    Object.keys(DEFAULT_ENCODINGS).forEach(name => this.addEncoding(name, DEFAULT_ENCODINGS[name]));\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  public get onProtocolChange(): IEvent<CoreMouseEventType> {\n    return this._onProtocolChange.event;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n        || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move at grid level\n    if (e.action === CoreMouseAction.MOVE && this._lastEvent && this._compareEvents(this._lastEvent, e)) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): {[event: string]: boolean} {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _compareEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent): boolean {\n    if (e1.col !== e2.col) return false;\n    if (e1.row !== e2.row) return false;\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n\n  constructor(private _action: (data: string | Uint8Array) => void) { }\n\n  public writeSync(data: string | Uint8Array): void {\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    if (this._writeBuffer.length) {\n      for (let i = this._bufferOffset; i < this._writeBuffer.length; ++i) {\n        const data = this._writeBuffer[i];\n        const cb = this._callbacks[i];\n        this._action(data);\n        if (cb) cb();\n      }\n      // reset all to avoid reprocessing of chunks with scheduled innerWrite call\n      this._writeBuffer = [];\n      this._callbacks = [];\n      this._pendingData = 0;\n      // stop scheduled innerWrite by offset > length condition\n      this._bufferOffset = 0x7FFFFFFF;\n    }\n    // handle current data chunk\n    this._action(data);\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  protected _innerWrite(): void {\n    const startTime = Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const cb = this._callbacks[this._bufferOffset];\n      this._bufferOffset++;\n\n      this._action(data);\n      this._pendingData -= data.length;\n      if (cb) cb();\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite(), 0);\n    } else {\n      this._writeBuffer = [];\n      this._callbacks = [];\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent } from './Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport class Linkifier2 implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  private _currentLink: ILink | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n\n  private _onLinkHover = new EventEmitter<ILinkifierEvent>();\n  public get onLinkHover(): IEvent<ILinkifierEvent> { return this._onLinkHover.event; }\n  private _onLinkLeave = new EventEmitter<ILinkifierEvent>();\n  public get onLinkLeave(): IEvent<ILinkifierEvent> { return this._onLinkLeave.event; }\n\n  constructor(\n    private readonly _bufferService: IBufferService\n  ) {\n\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this._element.addEventListener('mousemove', this._onMouseMove.bind(this));\n    this._element.addEventListener('click', this._onMouseDown.bind(this));\n  }\n\n  private _onMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._onHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _onHover(position: IBufferCellPosition): void {\n    if (this._currentLink) {\n      // Check the if the link is in the mouse position\n      const isInPosition = this._linkAtPosition(this._currentLink, position);\n\n      // Check if we need to clear the link\n      if (!isInPosition) {\n        this._clearCurrentLink();\n        this._askForLink(position);\n      }\n    } else {\n      this._askForLink(position);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition): void {\n    const providerReplies: Map<Number, ILink | undefined> = new Map();\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    this._linkProviders.forEach((linkProvider, i) => {\n      linkProvider.provideLink(position, (link: ILink | undefined) => {\n        providerReplies.set(i, link);\n\n        // Check if every provider before this one has come back undefined\n        let hasLinkBefore = false;\n        for (let j = 0; j < i; j++) {\n          if (!providerReplies.has(j) || providerReplies.get(j)) {\n            hasLinkBefore = true;\n          }\n        }\n\n        // If all providers with higher priority came back undefined, then this link should be used\n        if (!hasLinkBefore && link) {\n          linkProvided = true;\n          this._handleNewLink(link);\n        }\n\n        // Check if all the providers have responded\n        if (providerReplies.size === this._linkProviders.length && !linkProvided) {\n          // Respect the order of the link providers\n          for (let j = 0; j < providerReplies.size; j++) {\n            const currentLink = providerReplies.get(j);\n            if (currentLink) {\n              this._handleNewLink(currentLink);\n              break;\n            }\n          }\n        }\n      });\n    });\n  }\n\n  private _onMouseDown(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    if (this._linkAtPosition(this._currentLink, position)) {\n      this._currentLink.activate(event, this._currentLink.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.range.start.y >= startRow && this._currentLink.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink, this._lastMouseEvent);\n      this._currentLink = undefined;\n      this._linkCacheDisposables.forEach(l => l.dispose());\n      this._linkCacheDisposables = [];\n    }\n  }\n\n  private _handleNewLink(link: ILink): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(link, position)) {\n      this._currentLink = link;\n      this._linkHover(this._element, link, this._lastMouseEvent);\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRender(e => {\n          this._clearCurrentLink(e.start + 1 + this._bufferService.buffer.ydisp, e.end + 1 + this._bufferService.buffer.ydisp);\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n\n    this._onLinkHover.fire(this._createLinkHoverEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined));\n    element.classList.add('xterm-cursor-pointer');\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n\n    this._onLinkLeave.fire(this._createLinkHoverEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined));\n    element.classList.remove('xterm-cursor-pointer');\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const sameLine = link.range.start.y === link.range.end.y;\n    const wrappedFromLeft = link.range.start.y < position.y;\n    const wrappedToRight = link.range.end.y > position.y;\n\n    // If the start and end have the same y, then the position must be between start and end x\n    // If not, then handle each case seperately, depending on which way it wraps\n    return ((sameLine && link.range.start.x <= position.x && link.range.end.x >= position.x) ||\n      (wrappedFromLeft && link.range.end.x >= position.x) ||\n      (wrappedToRight && link.range.start.x <= position.x) ||\n      (wrappedFromLeft && wrappedToRight)) &&\n      link.range.start.y <= position.y &&\n      link.range.end.y >= position.y;\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  serviceBrand: any;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement\n  ) {\n  }\n\n  public get isFocused(): boolean {\n    return document.activeElement === this._textarea && document.hasFocus();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\n\nexport class UnicodeService implements IUnicodeService {\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n  private _onChange = new EventEmitter<string>();\n  public get onChange(): IEvent<string> { return this._onChange.event; }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\nimport { fill } from 'common/TypedArrayUtils';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      fill(table, 1);\n      table[0] = 0;\n      // control chars\n      fill(table, 0, 1, 32);\n      fill(table, 0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      fill(table, 2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      fill(table, 2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      fill(table, 2, 0xac00, 0xd7a4);\n      fill(table, 2, 0xf900, 0xfb00);\n      fill(table, 2, 0xfe10, 0xfe1a);\n      fill(table, 2, 0xfe30, 0xfe70);\n      fill(table, 2, 0xff00, 0xff61);\n      fill(table, 2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        fill(table, 0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public charsets: ICharset[] = [];\n  public glevel: number = 0;\n\n  public reset(): void {\n    this.charset = undefined;\n    this.charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this.charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset): void {\n    this.charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(<any>terminal);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n"],"sourceRoot":""}